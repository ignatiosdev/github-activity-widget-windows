{"version":3,"file":"vendors-node_modules_braintree_browser-detection_dist_browser-detection_js-node_modules_githu-bb80ec-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@braintree/browser-detection/dist/browser-detection.js","node_modules/@braintree/browser-detection/dist/has-software-keyboard.js","node_modules/@braintree/browser-detection/dist/is-android.js","node_modules/@braintree/browser-detection/dist/is-chrome-os.js","node_modules/@braintree/browser-detection/dist/is-chrome.js","node_modules/@braintree/browser-detection/dist/is-duckduckgo.js","node_modules/@braintree/browser-detection/dist/is-edge.js","node_modules/@braintree/browser-detection/dist/is-firefox.js","node_modules/@braintree/browser-detection/dist/is-ie.js","node_modules/@braintree/browser-detection/dist/is-ie10.js","node_modules/@braintree/browser-detection/dist/is-ie11.js","node_modules/@braintree/browser-detection/dist/is-ie9.js","node_modules/@braintree/browser-detection/dist/is-ios-firefox.js","node_modules/@braintree/browser-detection/dist/is-ios-google-search-app.js","node_modules/@braintree/browser-detection/dist/is-ios-safari.js","node_modules/@braintree/browser-detection/dist/is-ios-uiwebview.js","node_modules/@braintree/browser-detection/dist/is-ios-webview.js","node_modules/@braintree/browser-detection/dist/is-ios-wkwebview.js","node_modules/@braintree/browser-detection/dist/is-ios.js","node_modules/@braintree/browser-detection/dist/is-ipados.js","node_modules/@braintree/browser-detection/dist/is-mobile-firefox.js","node_modules/@braintree/browser-detection/dist/is-opera.js","node_modules/@braintree/browser-detection/dist/is-safari.js","node_modules/@braintree/browser-detection/dist/is-samsung.js","node_modules/@braintree/browser-detection/dist/is-silk.js","node_modules/@braintree/browser-detection/dist/supports-payment-request-api.js","node_modules/@braintree/browser-detection/dist/supports-popups.js","node_modules/@github/alive-client/dist/alive-session.js","node_modules/@github/alive-client/dist/eventloop-tasks.js","node_modules/@github/alive-client/dist/iterables.js","node_modules/@github/alive-client/dist/presence-metadata.js","node_modules/@github/alive-client/dist/presence.js","node_modules/@github/alive-client/dist/subscription-set.js","node_modules/@github/alive-client/dist/topic.js","node_modules/@github/multimap/dist/index.js","node_modules/@github/stable-socket/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportsPaymentRequestApi = exports.supportsPopups = exports.hasSoftwareKeyboard = exports.isSilk = exports.isSamsungBrowser = exports.isOpera = exports.isMobileFirefox = exports.isIpadOS = exports.isIosWKWebview = exports.isIosWebview = exports.isIosUIWebview = exports.isIosSafari = exports.isSafari = exports.isIosGoogleSearchApp = exports.isIosFirefox = exports.isIos = exports.isFirefox = exports.isEdge = exports.isIe11 = exports.isIe10 = exports.isIe9 = exports.isIe = exports.isDuckDuckGo = exports.isChrome = exports.isChromeOS = exports.isAndroid = void 0;\nvar isAndroid = require(\"./is-android\");\nexports.isAndroid = isAndroid;\nvar isChromeOS = require(\"./is-chrome-os\");\nexports.isChromeOS = isChromeOS;\nvar isChrome = require(\"./is-chrome\");\nexports.isChrome = isChrome;\nvar isDuckDuckGo = require(\"./is-duckduckgo\");\nexports.isDuckDuckGo = isDuckDuckGo;\nvar isIe = require(\"./is-ie\");\nexports.isIe = isIe;\nvar isIe9 = require(\"./is-ie9\");\nexports.isIe9 = isIe9;\nvar isIe10 = require(\"./is-ie10\");\nexports.isIe10 = isIe10;\nvar isIe11 = require(\"./is-ie11\");\nexports.isIe11 = isIe11;\nvar isEdge = require(\"./is-edge\");\nexports.isEdge = isEdge;\nvar isFirefox = require(\"./is-firefox\");\nexports.isFirefox = isFirefox;\nvar isSafari = require(\"./is-safari\");\nexports.isSafari = isSafari;\nvar isIos = require(\"./is-ios\");\nexports.isIos = isIos;\nvar isIosFirefox = require(\"./is-ios-firefox\");\nexports.isIosFirefox = isIosFirefox;\nvar isIosGoogleSearchApp = require(\"./is-ios-google-search-app\");\nexports.isIosGoogleSearchApp = isIosGoogleSearchApp;\nvar isIosSafari = require(\"./is-ios-safari\");\nexports.isIosSafari = isIosSafari;\nvar isIosUIWebview = require(\"./is-ios-uiwebview\");\nexports.isIosUIWebview = isIosUIWebview;\nvar isIosWebview = require(\"./is-ios-webview\");\nexports.isIosWebview = isIosWebview;\nvar isIosWKWebview = require(\"./is-ios-wkwebview\");\nexports.isIosWKWebview = isIosWKWebview;\nvar isIpadOS = require(\"./is-ipados\");\nexports.isIpadOS = isIpadOS;\nvar isMobileFirefox = require(\"./is-mobile-firefox\");\nexports.isMobileFirefox = isMobileFirefox;\nvar isOpera = require(\"./is-opera\");\nexports.isOpera = isOpera;\nvar isSamsungBrowser = require(\"./is-samsung\");\nexports.isSamsungBrowser = isSamsungBrowser;\nvar isSilk = require(\"./is-silk\");\nexports.isSilk = isSilk;\nvar hasSoftwareKeyboard = require(\"./has-software-keyboard\");\nexports.hasSoftwareKeyboard = hasSoftwareKeyboard;\nvar supportsPopups = require(\"./supports-popups\");\nexports.supportsPopups = supportsPopups;\nvar supportsPaymentRequestApi = require(\"./supports-payment-request-api\");\nexports.supportsPaymentRequestApi = supportsPaymentRequestApi;\n","\"use strict\";\nvar isAndroid = require(\"./is-android\");\nvar isChromeOS = require(\"./is-chrome-os\");\nvar isIos = require(\"./is-ios\");\nmodule.exports = function hasSoftwareKeyboard() {\n    return isAndroid() || isChromeOS() || isIos();\n};\n","\"use strict\";\nmodule.exports = function isAndroid(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /Android/i.test(ua);\n};\n","\"use strict\";\nmodule.exports = function isChromeOS(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /CrOS/i.test(ua);\n};\n","\"use strict\";\nvar isEdge = require(\"./is-edge\");\nvar isSamsung = require(\"./is-samsung\");\nvar isDuckDuckGo = require(\"./is-duckduckgo\");\nvar isOpera = require(\"./is-opera\");\nvar isSilk = require(\"./is-silk\");\nmodule.exports = function isChrome(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ((ua.indexOf(\"Chrome\") !== -1 || ua.indexOf(\"CriOS\") !== -1) &&\n        !isEdge(ua) &&\n        !isSamsung(ua) &&\n        !isDuckDuckGo(ua) &&\n        !isOpera(ua) &&\n        !isSilk(ua));\n};\n","\"use strict\";\nmodule.exports = function isDuckDuckGo(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"DuckDuckGo/\") !== -1;\n};\n","\"use strict\";\nmodule.exports = function isEdge(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Edge/\") !== -1 || ua.indexOf(\"Edg/\") !== -1;\n};\n","\"use strict\";\nmodule.exports = function isFirefox(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /Firefox/i.test(ua);\n};\n","\"use strict\";\nvar isIE11 = require(\"./is-ie11\");\nmodule.exports = function isIE(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"MSIE\") !== -1 || isIE11(ua);\n};\n","\"use strict\";\nmodule.exports = function isIe10(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"MSIE 10\") !== -1;\n};\n","\"use strict\";\nmodule.exports = function isIe11(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Trident/7\") !== -1;\n};\n","\"use strict\";\nmodule.exports = function isIe9(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"MSIE 9\") !== -1;\n};\n","\"use strict\";\nmodule.exports = function isIosFirefox(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /FxiOS/i.test(ua);\n};\n","\"use strict\";\nvar isIos = require(\"./is-ios\");\nfunction isGoogleSearchApp(ua) {\n    return /\\bGSA\\b/.test(ua);\n}\nmodule.exports = function isIosGoogleSearchApp(ua) {\n    ua = ua || window.navigator.userAgent;\n    return isIos(ua) && isGoogleSearchApp(ua);\n};\n","\"use strict\";\nvar isIos = require(\"./is-ios\");\nvar isIosFirefox = require(\"./is-ios-firefox\");\nvar webkitRegexp = /webkit/i;\nfunction isWebkit(ua) {\n    return webkitRegexp.test(ua);\n}\nfunction isIosChrome(ua) {\n    return ua.indexOf(\"CriOS\") > -1;\n}\nfunction isFacebook(ua) {\n    return ua.indexOf(\"FBAN\") > -1;\n}\nmodule.exports = function isIosSafari(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (isIos(ua) &&\n        isWebkit(ua) &&\n        !isIosChrome(ua) &&\n        !isIosFirefox(ua) &&\n        !isFacebook(ua));\n};\n","\"use strict\";\nvar isIosWebview = require(\"./is-ios-webview\");\nmodule.exports = function isIosUIWebview(ua, statusBarVisible) {\n    statusBarVisible =\n        typeof statusBarVisible !== \"undefined\"\n            ? statusBarVisible\n            : window.statusbar.visible;\n    return isIosWebview(ua) && !statusBarVisible;\n};\n","\"use strict\";\nvar isIos = require(\"./is-ios\");\nvar isIosGoogleSearchApp = require(\"./is-ios-google-search-app\");\nmodule.exports = function isIosWebview(ua) {\n    ua = ua || window.navigator.userAgent;\n    if (isIos(ua)) {\n        // The Google Search iOS app is technically a webview and doesn't support popups.\n        if (isIosGoogleSearchApp(ua)) {\n            return true;\n        }\n        // Historically, a webview could be identified by the presence of AppleWebKit and _no_ presence of Safari after.\n        return /.+AppleWebKit(?!.*Safari)/i.test(ua);\n    }\n    return false;\n};\n","\"use strict\";\nvar isIosWebview = require(\"./is-ios-webview\");\nmodule.exports = function isIosWKWebview(ua, statusBarVisible) {\n    statusBarVisible =\n        typeof statusBarVisible !== \"undefined\"\n            ? statusBarVisible\n            : window.statusbar.visible;\n    return isIosWebview(ua) && statusBarVisible;\n};\n","\"use strict\";\nvar isIpadOS = require(\"./is-ipados\");\nmodule.exports = function isIos(ua, checkIpadOS, document) {\n    if (checkIpadOS === void 0) { checkIpadOS = true; }\n    ua = ua || window.navigator.userAgent;\n    var iOsTest = /iPhone|iPod|iPad/i.test(ua);\n    return checkIpadOS ? iOsTest || isIpadOS(ua, document) : iOsTest;\n};\n","\"use strict\";\nmodule.exports = function isIpadOS(ua, document) {\n    ua = ua || window.navigator.userAgent;\n    document = document || window.document;\n    // \"ontouchend\" is used to determine if a browser is on an iPad, otherwise\n    // user-agents for iPadOS behave/identify as a desktop browser\n    return /Mac|iPad/i.test(ua) && \"ontouchend\" in document;\n};\n","\"use strict\";\nvar isIosFirefox = require(\"./is-ios-firefox\");\nvar isFirefox = require(\"./is-firefox\");\nmodule.exports = function isMobileFirefox(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (isIosFirefox(ua) ||\n        (/iPhone|iPod|iPad|Mobile|Tablet/i.test(ua) && isFirefox(ua)));\n};\n","\"use strict\";\nmodule.exports = function isOpera(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (ua.indexOf(\"OPR/\") !== -1 ||\n        ua.indexOf(\"Opera/\") !== -1 ||\n        ua.indexOf(\"OPT/\") !== -1);\n};\n","\"use strict\";\nmodule.exports = function isSafari(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (/^Mozilla\\/5\\.0.*Safari\\//.test(ua) &&\n        !/(iPhone|iPad|iPod|Android|SM-)/i.test(ua) &&\n        !/Chrome|CriOS|FxiOS|OPiOS|mercury/i.test(ua));\n};\n","\"use strict\";\nmodule.exports = function isSamsungBrowser(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /SamsungBrowser/i.test(ua);\n};\n","\"use strict\";\nmodule.exports = function isSilk(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Silk/\") !== -1;\n};\n","\"use strict\";\nvar isChrome = require(\"./is-chrome\");\nvar MINIMUM_SUPPORTED_CHROME_VERSION = 61;\nfunction isSupportedChromeVersion(ua) {\n    var match = ua.match(/Chrome\\/(\\d+)\\./);\n    if (!match) {\n        return false;\n    }\n    var version = parseInt(match[1], 10);\n    return version >= MINIMUM_SUPPORTED_CHROME_VERSION;\n}\nmodule.exports = function supportsPaymentRequestApi(ua) {\n    ua = ua || window.navigator.userAgent;\n    if (!window.PaymentRequest) {\n        return false;\n    }\n    if (!isChrome(ua)) {\n        // if browser is not chrome based, but has Payment Request API\n        // this means that it implemented the API after it was finalized\n        return true;\n    }\n    // Chrome introduce the Payment Request API in some versions of\n    // Android Chrome as early as Chrome v53, but it was not\n    // finalized until v61\n    return isSupportedChromeVersion(ua);\n};\n","\"use strict\";\nvar MINIMUM_SUPPORTED_CHROME_IOS_VERSION = 48;\nvar isAndroid = require(\"./is-android\");\nvar isIosFirefox = require(\"./is-ios-firefox\");\nvar isIosWebview = require(\"./is-ios-webview\");\nvar isChrome = require(\"./is-chrome\");\nvar isSamsungBrowser = require(\"./is-samsung\");\nvar isDuckDuckGo = require(\"./is-duckduckgo\");\nfunction isUnsupportedIosChrome(ua) {\n    ua = ua || window.navigator.userAgent;\n    var match = ua.match(/CriOS\\/(\\d+)\\./);\n    if (!match) {\n        return false;\n    }\n    var version = parseInt(match[1], 10);\n    return version < MINIMUM_SUPPORTED_CHROME_IOS_VERSION;\n}\nfunction isOperaMini(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Opera Mini\") > -1;\n}\nfunction isAndroidWebview(ua) {\n    var androidWebviewRegExp = /Version\\/[\\d.]+/i;\n    ua = ua || window.navigator.userAgent;\n    if (isAndroid(ua)) {\n        return (androidWebviewRegExp.test(ua) && !isOperaMini(ua) && !isDuckDuckGo(ua));\n    }\n    return false;\n}\nfunction isOldSamsungBrowserOrSamsungWebview(ua) {\n    return !isChrome(ua) && !isSamsungBrowser(ua) && /samsung/i.test(ua);\n}\nmodule.exports = function supportsPopups(ua) {\n    ua = ua || window.navigator.userAgent;\n    return !(isIosWebview(ua) ||\n        isIosFirefox(ua) ||\n        isAndroidWebview(ua) ||\n        isOperaMini(ua) ||\n        isUnsupportedIosChrome(ua) ||\n        isOldSamsungBrowserOrSamsungWebview(ua));\n};\n","import { AlivePresence, getPresenceKey, isPresenceChannel } from './presence.js';\nimport { IDLE_METADATA_KEY, PresenceMetadataSet } from './presence-metadata.js';\nimport { StableSocket } from '@github/stable-socket';\nimport { SubscriptionSet } from './subscription-set.js';\nimport { eachSlice } from './iterables.js';\nimport { retry } from './eventloop-tasks.js';\nvar SocketDisconnectReasons;\n(function (SocketDisconnectReasons) {\n    SocketDisconnectReasons[\"Deploy\"] = \"Alive Redeploy\";\n    SocketDisconnectReasons[\"Reconnect\"] = \"Alive Reconnect\";\n})(SocketDisconnectReasons || (SocketDisconnectReasons = {}));\nfunction generatePresenceId() {\n    return `${Math.round(Math.random() * (Math.pow(2, 31) - 1))}_${Math.round(Date.now() / 1000)}`;\n}\nfunction getUserIdFromSocketUrl(url) {\n    const match = url.match(/\\/u\\/(\\d+)\\/ws/);\n    return match ? +match[1] : 0;\n}\nexport class AliveSession {\n    constructor(url, getUrl, inSharedWorker, notify, maxReconnectBackoff = 600000) {\n        this.url = url;\n        this.getUrl = getUrl;\n        this.inSharedWorker = inSharedWorker;\n        this.notify = notify;\n        this.maxReconnectBackoff = maxReconnectBackoff;\n        this.subscriptions = new SubscriptionSet();\n        this.state = 'online';\n        this.retrying = null;\n        this.connectionCount = 0;\n        this.presence = new AlivePresence();\n        this.presenceMetadata = new PresenceMetadataSet();\n        this.intentionallyDisconnected = false;\n        this.lastCameOnline = 0;\n        this.userId = getUserIdFromSocketUrl(url);\n        this.presenceId = generatePresenceId();\n        this.presenceKey = getPresenceKey(this.userId, this.presenceId);\n        this.socket = this.connect();\n    }\n    subscribe(subscriptions) {\n        const added = this.subscriptions.add(...subscriptions);\n        this.sendSubscribe(added);\n        for (const subscription of subscriptions) {\n            const channel = subscription.topic.name;\n            if (!isPresenceChannel(channel)) {\n                continue;\n            }\n            this.notifyCachedPresence(subscription.subscriber, channel);\n        }\n    }\n    unsubscribe(subscriptions) {\n        const removed = this.subscriptions.delete(...subscriptions);\n        this.sendUnsubscribe(removed);\n    }\n    unsubscribeAll(...subscribers) {\n        const removed = this.subscriptions.drain(...subscribers);\n        this.sendUnsubscribe(removed);\n        const updatedPresenceChannels = this.presenceMetadata.removeSubscribers(subscribers);\n        this.sendPresenceMetadataUpdate(updatedPresenceChannels);\n    }\n    requestPresence(subscriber, channels) {\n        for (const channel of channels) {\n            this.notifyCachedPresence(subscriber, channel);\n        }\n    }\n    notifyCachedPresence(subscriber, channel) {\n        const presenceItems = this.presence.getChannelItems(channel);\n        if (presenceItems.length === 0) {\n            return;\n        }\n        this.notifyPresenceChannel(channel, presenceItems);\n    }\n    updatePresenceMetadata(metadataUpdates) {\n        const updatedChannels = new Set();\n        for (const update of metadataUpdates) {\n            this.presenceMetadata.setMetadata(update);\n            updatedChannels.add(update.channelName);\n        }\n        this.sendPresenceMetadataUpdate(updatedChannels);\n    }\n    sendPresenceMetadataUpdate(channelNames) {\n        if (!channelNames.size) {\n            return;\n        }\n        const topics = [];\n        for (const channelName of channelNames) {\n            const topic = this.subscriptions.topic(channelName);\n            if (topic) {\n                topics.push(topic);\n            }\n        }\n        this.sendSubscribe(topics);\n    }\n    online() {\n        var _a;\n        this.lastCameOnline = Date.now();\n        this.state = 'online';\n        (_a = this.retrying) === null || _a === void 0 ? void 0 : _a.abort();\n        this.socket.open();\n    }\n    offline() {\n        var _a;\n        this.state = 'offline';\n        (_a = this.retrying) === null || _a === void 0 ? void 0 : _a.abort();\n        this.socket.close();\n    }\n    shutdown() {\n        if (this.inSharedWorker) {\n            self.close();\n        }\n    }\n    get reconnectWindow() {\n        const wasRecentlyOffline = Date.now() - this.lastCameOnline < 60 * 1000;\n        if (this.connectionCount === 0 || this.intentionallyDisconnected || wasRecentlyOffline) {\n            return 0;\n        }\n        return 10 * 1000;\n    }\n    socketDidOpen() {\n        this.intentionallyDisconnected = false;\n        this.connectionCount++;\n        this.socket.url = this.getUrlWithPresenceId();\n        this.sendSubscribe(this.subscriptions.topics());\n    }\n    socketDidClose(socket, code, reason) {\n        if (this.redeployEarlyReconnectTimeout !== undefined) {\n            clearTimeout(this.redeployEarlyReconnectTimeout);\n        }\n        if (reason === \"Alive Reconnect\") {\n            this.intentionallyDisconnected = true;\n        }\n        else if (reason === \"Alive Redeploy\") {\n            this.intentionallyDisconnected = true;\n            const reconnectDelayMinutes = 3 + Math.random() * 22;\n            const reconnectDelay = reconnectDelayMinutes * 60 * 1000;\n            this.redeployEarlyReconnectTimeout = setTimeout(() => {\n                this.intentionallyDisconnected = true;\n                this.socket.close(1000, 'Alive Redeploy Early Client Reconnect');\n            }, reconnectDelay);\n        }\n    }\n    socketDidFinish() {\n        if (this.state === 'offline')\n            return;\n        this.reconnect();\n    }\n    socketDidReceiveMessage(_, message) {\n        const payload = JSON.parse(message);\n        switch (payload.e) {\n            case 'ack': {\n                this.handleAck(payload);\n                break;\n            }\n            case 'msg': {\n                this.handleMessage(payload);\n                break;\n            }\n        }\n    }\n    handleAck(ack) {\n        for (const topic of this.subscriptions.topics()) {\n            topic.offset = ack.off;\n        }\n    }\n    handleMessage(msg) {\n        const channel = msg.ch;\n        const topic = this.subscriptions.topic(channel);\n        if (!topic)\n            return;\n        topic.offset = msg.off;\n        if ('e' in msg.data) {\n            const presenceItems = this.presence.handleMessage(channel, msg.data);\n            this.notifyPresenceChannel(channel, presenceItems);\n            return;\n        }\n        if (!msg.data.wait)\n            msg.data.wait = 0;\n        this.notify(this.subscriptions.subscribers(channel), {\n            channel,\n            type: 'message',\n            data: msg.data\n        });\n    }\n    notifyPresenceChannel(channel, presenceItems) {\n        var _a, _b;\n        const userPresenceById = new Map();\n        for (const presenceItem of presenceItems) {\n            const { userId, metadata, presenceKey } = presenceItem;\n            const userPresence = userPresenceById.get(userId) || { userId, isOwnUser: userId === this.userId, metadata: [] };\n            if (presenceKey === this.presenceKey) {\n                continue;\n            }\n            for (const data of metadata) {\n                if (IDLE_METADATA_KEY in data) {\n                    if (userPresence.isIdle !== false) {\n                        userPresence.isIdle = Boolean(data[IDLE_METADATA_KEY]);\n                    }\n                    continue;\n                }\n                userPresence.metadata.push(data);\n            }\n            userPresenceById.set(userId, userPresence);\n        }\n        for (const subscriber of this.subscriptions.subscribers(channel)) {\n            const userId = this.userId;\n            const otherUsers = Array.from(userPresenceById.values()).filter(user => user.userId !== userId);\n            const ownUserRemoteMetadata = (_b = (_a = userPresenceById.get(this.userId)) === null || _a === void 0 ? void 0 : _a.metadata) !== null && _b !== void 0 ? _b : [];\n            const ownUserLocalMetadata = this.presenceMetadata.getChannelMetadata(channel, {\n                subscriber,\n                markAllAsLocal: !this.inSharedWorker\n            });\n            this.notify([subscriber], {\n                channel,\n                type: 'presence',\n                data: [\n                    {\n                        userId,\n                        isOwnUser: true,\n                        metadata: [...ownUserRemoteMetadata, ...ownUserLocalMetadata]\n                    },\n                    ...otherUsers\n                ]\n            });\n        }\n    }\n    async reconnect() {\n        if (this.retrying)\n            return;\n        try {\n            this.retrying = new AbortController();\n            const url = await retry(this.getUrl, Infinity, this.maxReconnectBackoff, this.retrying.signal);\n            if (url) {\n                this.url = url;\n                this.socket = this.connect();\n            }\n            else {\n                this.shutdown();\n            }\n        }\n        catch (e) {\n            if (e.name !== 'AbortError')\n                throw e;\n        }\n        finally {\n            this.retrying = null;\n        }\n    }\n    getUrlWithPresenceId() {\n        const liveUrl = new URL(this.url, self.location.origin);\n        liveUrl.searchParams.set('shared', this.inSharedWorker.toString());\n        liveUrl.searchParams.set('p', `${this.presenceId}.${this.connectionCount}`);\n        return liveUrl.toString();\n    }\n    connect() {\n        const socket = new StableSocket(this.getUrlWithPresenceId(), this, { timeout: 4000, attempts: 7 });\n        socket.open();\n        return socket;\n    }\n    sendSubscribe(topics) {\n        const entries = Array.from(topics);\n        for (const slice of eachSlice(entries, 25)) {\n            const subscribe = {};\n            for (const topic of slice) {\n                if (isPresenceChannel(topic.name)) {\n                    subscribe[topic.signed] = JSON.stringify(this.presenceMetadata.getChannelMetadata(topic.name));\n                }\n                else {\n                    subscribe[topic.signed] = topic.offset;\n                }\n            }\n            this.socket.send(JSON.stringify({ subscribe }));\n        }\n    }\n    sendUnsubscribe(topics) {\n        const signed = Array.from(topics, t => t.signed);\n        for (const slice of eachSlice(signed, 25)) {\n            this.socket.send(JSON.stringify({ unsubscribe: slice }));\n        }\n        for (const topic of topics) {\n            if (isPresenceChannel(topic.name)) {\n                this.presence.clearChannel(topic.name);\n            }\n        }\n    }\n}\n","function whenAborted(signal) {\n    return new Promise((resolve, reject) => {\n        const error = new Error('aborted');\n        error.name = 'AbortError';\n        if (signal.aborted) {\n            reject(error);\n        }\n        else {\n            signal.addEventListener('abort', () => reject(error));\n        }\n    });\n}\nexport async function wait(ms, signal) {\n    let id;\n    const done = new Promise(resolve => {\n        id = self.setTimeout(resolve, ms);\n    });\n    if (!signal)\n        return done;\n    try {\n        await Promise.race([done, whenAborted(signal)]);\n    }\n    catch (e) {\n        self.clearTimeout(id);\n        throw e;\n    }\n}\nfunction rand(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\nexport async function retry(fn, attempts, maxDelay = Infinity, signal) {\n    const aborted = signal ? whenAborted(signal) : null;\n    for (let i = 0; i < attempts; i++) {\n        try {\n            const op = aborted ? Promise.race([fn(), aborted]) : fn();\n            return await op;\n        }\n        catch (e) {\n            if (e.name === 'AbortError')\n                throw e;\n            if (i === attempts - 1)\n                throw e;\n            const ms = Math.pow(2, i) * 1000;\n            const vary = rand(ms * 0.1);\n            await wait(Math.min(maxDelay, ms + vary), signal);\n        }\n    }\n    throw new Error('retry failed');\n}\n","export function* eachSlice(values, size) {\n    for (let i = 0; i < values.length; i += size) {\n        yield values.slice(i, i + size);\n    }\n}\n","export const IDLE_METADATA_KEY = '_i';\nfunction markMetadataAsLocal(metadata) {\n    return Object.assign(Object.assign({}, metadata), { isLocal: true });\n}\nclass PresenceMetadataForChannel {\n    constructor() {\n        this.subscriberMetadata = new Map();\n    }\n    setMetadata(subscriber, value) {\n        this.subscriberMetadata.set(subscriber, value);\n    }\n    removeSubscribers(subscribers) {\n        let found = false;\n        for (const subscriber of subscribers) {\n            found = this.subscriberMetadata.delete(subscriber) || found;\n        }\n        return found;\n    }\n    getMetadata(localizationOptions) {\n        if (!localizationOptions) {\n            const allMetadata = [];\n            let idle;\n            for (const subscriberMetadata of this.subscriberMetadata.values()) {\n                for (const metadata of subscriberMetadata) {\n                    if (IDLE_METADATA_KEY in metadata) {\n                        const subscriberIsIdle = Boolean(metadata[IDLE_METADATA_KEY]);\n                        idle = idle === undefined ? subscriberIsIdle : subscriberIsIdle && idle;\n                    }\n                    else {\n                        allMetadata.push(metadata);\n                    }\n                }\n            }\n            if (idle !== undefined) {\n                allMetadata.push({ [IDLE_METADATA_KEY]: idle ? 1 : 0 });\n            }\n            return allMetadata;\n        }\n        const metadata = [];\n        const { subscriber, markAllAsLocal } = localizationOptions;\n        for (const [fromSubscriber, subscriberMetadata] of this.subscriberMetadata) {\n            const shouldLocalizeMetadata = markAllAsLocal || fromSubscriber === subscriber;\n            const metadataToAdd = shouldLocalizeMetadata ? subscriberMetadata.map(markMetadataAsLocal) : subscriberMetadata;\n            metadata.push(...metadataToAdd);\n        }\n        return metadata;\n    }\n    hasSubscribers() {\n        return this.subscriberMetadata.size > 0;\n    }\n}\nexport class PresenceMetadataSet {\n    constructor() {\n        this.metadataByChannel = new Map();\n    }\n    setMetadata({ subscriber, channelName, metadata }) {\n        let channelMetadata = this.metadataByChannel.get(channelName);\n        if (!channelMetadata) {\n            channelMetadata = new PresenceMetadataForChannel();\n            this.metadataByChannel.set(channelName, channelMetadata);\n        }\n        channelMetadata.setMetadata(subscriber, metadata);\n    }\n    removeSubscribers(subscribers) {\n        const channelsWithSubscribers = new Set();\n        for (const [channelName, channelMetadata] of this.metadataByChannel) {\n            const channelHadSubscriber = channelMetadata.removeSubscribers(subscribers);\n            if (channelHadSubscriber) {\n                channelsWithSubscribers.add(channelName);\n            }\n            if (!channelMetadata.hasSubscribers()) {\n                this.metadataByChannel.delete(channelName);\n            }\n        }\n        return channelsWithSubscribers;\n    }\n    getChannelMetadata(channelName, localizationOptions) {\n        const channelMetadata = this.metadataByChannel.get(channelName);\n        return (channelMetadata === null || channelMetadata === void 0 ? void 0 : channelMetadata.getMetadata(localizationOptions)) || [];\n    }\n}\n","export function getPresenceKey(userId, presenceId) {\n    return `${userId}:${presenceId}`;\n}\nexport function decompressItem(data) {\n    const [presenceId, connectionCount] = data.p.split('.');\n    return {\n        userId: data.u,\n        presenceKey: getPresenceKey(data.u, presenceId),\n        connectionCount: Number(connectionCount),\n        metadata: data.m || []\n    };\n}\nconst presenceChannelPrefix = 'presence-';\nexport function isPresenceChannel(channelName) {\n    return channelName.startsWith(presenceChannelPrefix);\n}\nclass PresenceChannel {\n    constructor() {\n        this.presenceItems = new Map();\n    }\n    shouldUsePresenceItem(item) {\n        const existingItem = this.presenceItems.get(item.presenceKey);\n        return !existingItem || existingItem.connectionCount <= item.connectionCount;\n    }\n    addPresenceItem(item) {\n        if (!this.shouldUsePresenceItem(item)) {\n            return;\n        }\n        this.presenceItems.set(item.presenceKey, item);\n    }\n    removePresenceItem(item) {\n        if (!this.shouldUsePresenceItem(item)) {\n            return;\n        }\n        this.presenceItems.delete(item.presenceKey);\n    }\n    replacePresenceItems(items) {\n        this.presenceItems.clear();\n        for (const item of items) {\n            this.addPresenceItem(item);\n        }\n    }\n    getPresenceItems() {\n        return Array.from(this.presenceItems.values());\n    }\n}\nexport class AlivePresence {\n    constructor() {\n        this.presenceChannels = new Map();\n    }\n    getPresenceChannel(channelName) {\n        const channel = this.presenceChannels.get(channelName) || new PresenceChannel();\n        this.presenceChannels.set(channelName, channel);\n        return channel;\n    }\n    handleMessage(channelName, data) {\n        const channel = this.getPresenceChannel(channelName);\n        switch (data.e) {\n            case 'pf':\n                channel.replacePresenceItems(data.d.map(decompressItem));\n                break;\n            case 'pa':\n                channel.addPresenceItem(decompressItem(data.d));\n                break;\n            case 'pr':\n                channel.removePresenceItem(decompressItem(data.d));\n                break;\n        }\n        return this.getChannelItems(channelName);\n    }\n    getChannelItems(channelName) {\n        const channel = this.getPresenceChannel(channelName);\n        return channel.getPresenceItems();\n    }\n    clearChannel(channelName) {\n        this.presenceChannels.delete(channelName);\n    }\n}\n","import MultiMap from '@github/multimap';\nexport class SubscriptionSet {\n    constructor() {\n        this.subscriptions = new MultiMap();\n        this.signatures = new Map();\n    }\n    add(...subscriptions) {\n        const added = [];\n        for (const { subscriber, topic } of subscriptions) {\n            if (!this.subscriptions.has(topic.name)) {\n                added.push(topic);\n                this.signatures.set(topic.name, topic);\n            }\n            this.subscriptions.set(topic.name, subscriber);\n        }\n        return added;\n    }\n    delete(...subscriptions) {\n        const removed = [];\n        for (const { subscriber, topic } of subscriptions) {\n            const deleted = this.subscriptions.delete(topic.name, subscriber);\n            if (deleted && !this.subscriptions.has(topic.name)) {\n                removed.push(topic);\n                this.signatures.delete(topic.name);\n            }\n        }\n        return removed;\n    }\n    drain(...subscribers) {\n        const removed = [];\n        for (const subscriber of subscribers) {\n            for (const name of this.subscriptions.drain(subscriber)) {\n                const topic = this.signatures.get(name);\n                this.signatures.delete(name);\n                removed.push(topic);\n            }\n        }\n        return removed;\n    }\n    topics() {\n        return this.signatures.values();\n    }\n    topic(name) {\n        return this.signatures.get(name) || null;\n    }\n    subscribers(topic) {\n        return this.subscriptions.get(topic).values();\n    }\n}\n","export class Topic {\n    constructor(name, signed) {\n        this.name = name;\n        this.signed = signed;\n        this.offset = '';\n    }\n    static parse(data) {\n        const [content, signature] = data.split('--');\n        if (!content || !signature)\n            return null;\n        const sub = JSON.parse(atob(content));\n        if (!sub.c || !sub.t)\n            return null;\n        return new Topic(sub.c, data);\n    }\n}\n","export default class MultiMap {\n    constructor(iterable) {\n        this.map = new Map();\n        if (iterable) {\n            for (const [k, v] of iterable) {\n                this.set(k, v);\n            }\n        }\n    }\n    get(key) {\n        const values = this.map.get(key);\n        return values ? values : new Set();\n    }\n    set(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = new Set();\n            this.map.set(key, values);\n        }\n        values.add(value);\n        return this;\n    }\n    has(key) {\n        return this.map.has(key);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values)\n            return false;\n        if (!value)\n            return this.map.delete(key);\n        const deleted = values.delete(value);\n        if (!values.size)\n            this.map.delete(key);\n        return deleted;\n    }\n    drain(value) {\n        const empty = [];\n        for (const key of this.keys()) {\n            if (this.delete(key, value) && !this.has(key)) {\n                empty.push(key);\n            }\n        }\n        return empty;\n    }\n    keys() {\n        return this.map.keys();\n    }\n    values() {\n        return this.map.values();\n    }\n    entries() {\n        return this.map.entries();\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    clear() {\n        this.map.clear();\n    }\n    get size() {\n        return this.map.size;\n    }\n}\n","async function timeout(ms, signal) {\n    let id;\n    const done = new Promise((resolve, reject) => {\n        id = self.setTimeout(() => reject(new Error('timeout')), ms);\n    });\n    if (!signal)\n        return done;\n    try {\n        await Promise.race([done, whenAborted(signal)]);\n    }\n    catch (e) {\n        self.clearTimeout(id);\n        throw e;\n    }\n}\nasync function wait(ms, signal) {\n    let id;\n    const done = new Promise(resolve => {\n        id = self.setTimeout(resolve, ms);\n    });\n    if (!signal)\n        return done;\n    try {\n        await Promise.race([done, whenAborted(signal)]);\n    }\n    catch (e) {\n        self.clearTimeout(id);\n        throw e;\n    }\n}\nasync function retry(fn, attempts, maxDelay = Infinity, signal) {\n    const aborted = signal ? whenAborted(signal) : null;\n    for (let i = 0; i < attempts; i++) {\n        try {\n            const op = aborted ? Promise.race([fn(), aborted]) : fn();\n            return await op;\n        }\n        catch (e) {\n            if (e.name === 'AbortError')\n                throw e;\n            if (i === attempts - 1)\n                throw e;\n            const ms = Math.pow(2, i) * 1000;\n            const vary = rand(ms * 0.1);\n            await wait(Math.min(maxDelay, ms + vary), signal);\n        }\n    }\n    throw new Error('retry failed');\n}\nfunction whenAborted(signal) {\n    return new Promise((resolve, reject) => {\n        const error = new Error('aborted');\n        error.name = 'AbortError';\n        if (signal.aborted) {\n            reject(error);\n        }\n        else {\n            signal.addEventListener('abort', () => reject(error));\n        }\n    });\n}\nfunction rand(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nasync function connect(url, ms, signal) {\n    const socket = new WebSocket(url);\n    const opened = whenOpen(socket);\n    try {\n        await Promise.race([opened, timeout(ms, signal)]);\n        return socket;\n    }\n    catch (e) {\n        shutdown(opened);\n        throw e;\n    }\n}\nasync function shutdown(opened) {\n    try {\n        const socket = await opened;\n        socket.close();\n    }\n    catch (_a) {\n    }\n}\nfunction connectWithRetry(url, policy) {\n    const fn = () => connect(url, policy.timeout, policy.signal);\n    return retry(fn, policy.attempts, policy.maxDelay, policy.signal);\n}\nfunction whenOpen(socket) {\n    return new Promise((resolve, reject) => {\n        if (socket.readyState === WebSocket.OPEN) {\n            resolve(socket);\n        }\n        else {\n            socket.onerror = () => {\n                socket.onerror = null;\n                socket.onopen = null;\n                reject(new Error('connect failed'));\n            };\n            socket.onopen = () => {\n                socket.onerror = null;\n                socket.onopen = null;\n                resolve(socket);\n            };\n        }\n    });\n}\n\nclass StableSocket {\n    constructor(url, delegate, policy) {\n        this.socket = null;\n        this.opening = null;\n        this.url = url;\n        this.delegate = delegate;\n        this.policy = policy;\n    }\n    async open() {\n        if (this.opening || this.socket)\n            return;\n        this.opening = new AbortController();\n        const policy = Object.assign(Object.assign({}, this.policy), { signal: this.opening.signal });\n        try {\n            this.socket = await connectWithRetry(this.url, policy);\n        }\n        catch (_a) {\n            this.delegate.socketDidFinish(this);\n            return;\n        }\n        finally {\n            this.opening = null;\n        }\n        this.socket.onclose = (event) => {\n            this.socket = null;\n            this.delegate.socketDidClose(this, event.code, event.reason);\n            const fatal = this.delegate.socketShouldRetry\n                ? !this.delegate.socketShouldRetry(this, event.code)\n                : isFatal(event.code);\n            if (fatal) {\n                this.delegate.socketDidFinish(this);\n            }\n            else {\n                setTimeout(() => this.open(), rand$1(100, 100 + (this.delegate.reconnectWindow || 50)));\n            }\n        };\n        this.socket.onmessage = (event) => {\n            this.delegate.socketDidReceiveMessage(this, event.data);\n        };\n        this.delegate.socketDidOpen(this);\n    }\n    close(code, reason) {\n        if (this.opening) {\n            this.opening.abort();\n            this.opening = null;\n        }\n        else if (this.socket) {\n            this.socket.onclose = null;\n            this.socket.close(code, reason);\n            this.socket = null;\n            this.delegate.socketDidClose(this, code, reason);\n            this.delegate.socketDidFinish(this);\n        }\n    }\n    send(data) {\n        if (this.socket) {\n            this.socket.send(data);\n        }\n    }\n    isOpen() {\n        return !!this.socket;\n    }\n}\nfunction rand$1(min, max) {\n    return Math.random() * (max - min) + min;\n}\nfunction isFatal(code) {\n    return code === POLICY_VIOLATION || code === INTERNAL_ERROR;\n}\nconst POLICY_VIOLATION = 1008;\nconst INTERNAL_ERROR = 1011;\n\nclass BufferedSocket {\n    constructor(socket) {\n        this.buf = [];\n        this.socket = socket;\n        this.delegate = socket.delegate;\n        socket.delegate = this;\n    }\n    open() {\n        return this.socket.open();\n    }\n    close(code, reason) {\n        this.socket.close(code, reason);\n    }\n    send(data) {\n        if (this.socket.isOpen()) {\n            this.flush();\n            this.socket.send(data);\n        }\n        else {\n            this.buf.push(data);\n        }\n    }\n    isOpen() {\n        return this.socket.isOpen();\n    }\n    flush() {\n        for (const data of this.buf) {\n            this.socket.send(data);\n        }\n        this.buf.length = 0;\n    }\n    socketDidOpen(socket) {\n        this.flush();\n        this.delegate.socketDidOpen(socket);\n    }\n    socketDidClose(socket, code, reason) {\n        this.delegate.socketDidClose(socket, code, reason);\n    }\n    socketDidFinish(socket) {\n        this.delegate.socketDidFinish(socket);\n    }\n    socketDidReceiveMessage(socket, message) {\n        this.delegate.socketDidReceiveMessage(socket, message);\n    }\n    socketShouldRetry(socket, code) {\n        return this.delegate.socketShouldRetry ? this.delegate.socketShouldRetry(socket, code) : !isFatal(code);\n    }\n}\n\nexport { BufferedSocket, StableSocket, connect, connectWithRetry };\n"],"names":["exports","isSafari","isAndroid","isChromeOS","isIos","module","ua","window","navigator","userAgent","test","isEdge","isSamsung","isDuckDuckGo","isOpera","isSilk","indexOf","isIE11","isIosFirefox","webkitRegexp","isIosWebview","statusBarVisible","statusbar","visible","isIosGoogleSearchApp","isIpadOS","checkIpadOS","document","iOsTest","isFirefox","isChrome","match","PaymentRequest","version","isSamsungBrowser","isOperaMini","androidWebviewRegExp","parseInt","SocketDisconnectReasons","AliveSession","constructor","url","getUrl","inSharedWorker","notify","maxReconnectBackoff","subscriptions","state","retrying","connectionCount","presence","presenceMetadata","intentionallyDisconnected","lastCameOnline","userId","getUserIdFromSocketUrl","presenceId","Math","round","random","Date","now","presenceKey","socket","connect","subscribe","added","add","subscription","sendSubscribe","channel","topic","name","notifyCachedPresence","subscriber","unsubscribe","removed","delete","sendUnsubscribe","unsubscribeAll","subscribers","drain","updatedPresenceChannels","removeSubscribers","sendPresenceMetadataUpdate","requestPresence","channels","presenceItems","getChannelItems","length","notifyPresenceChannel","updatePresenceMetadata","metadataUpdates","updatedChannels","Set","update","setMetadata","channelName","channelNames","size","topics","push","online","_a","abort","open","offline","close","shutdown","self","reconnectWindow","wasRecentlyOffline","socketDidOpen","getUrlWithPresenceId","socketDidClose","code","reason","undefined","redeployEarlyReconnectTimeout","clearTimeout","reconnectDelayMinutes","setTimeout","socketDidFinish","reconnect","socketDidReceiveMessage","_","message","payload","JSON","parse","e","handleAck","handleMessage","ack","offset","off","msg","ch","data","wait","type","_b","userPresenceById","Map","presenceItem","metadata","userPresence","get","isOwnUser","isIdle","Boolean","set","otherUsers","Array","from","values","filter","user","ownUserRemoteMetadata","ownUserLocalMetadata","getChannelMetadata","markAllAsLocal","AbortController","Infinity","signal","liveUrl","URL","location","origin","searchParams","toString","timeout","attempts","entries","slice","signed","stringify","send","t","clearChannel","whenAborted","Promise","resolve","reject","error","aborted","addEventListener","ms","id","done","race","retry","fn","maxDelay","i","op","pow","vary","floor","min","eachSlice","IDLE_METADATA_KEY","markMetadataAsLocal","Object","assign","isLocal","PresenceMetadataForChannel","subscriberMetadata","value","found","getMetadata","localizationOptions","idle","allMetadata","subscriberIsIdle","fromSubscriber","metadataToAdd","shouldLocalizeMetadata","map","hasSubscribers","PresenceMetadataSet","metadataByChannel","channelMetadata","channelsWithSubscribers","getPresenceKey","decompressItem","p","split","u","Number","m","isPresenceChannel","startsWith","PresenceChannel","shouldUsePresenceItem","item","existingItem","addPresenceItem","removePresenceItem","replacePresenceItems","items","clear","getPresenceItems","AlivePresence","presenceChannels","getPresenceChannel","d","SubscriptionSet","signatures","has","Topic","content","signature","sub","atob","c","MultiMap","iterable","k","v","key","deleted","empty","keys","Symbol","iterator","WebSocket","opened","readyState","OPEN","onerror","onopen","StableSocket","delegate","policy","opening","onclose","event","socketShouldRetry","POLICY_VIOLATION","INTERNAL_ERROR","max","onmessage","isOpen"],"sourceRoot":""}