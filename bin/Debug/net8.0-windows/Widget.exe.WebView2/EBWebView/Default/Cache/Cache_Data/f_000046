{"version":3,"file":"ui_packages_paths_index_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/paths/path.ts","ui/packages/paths/utils.ts"],"sourcesContent":["import {ssrSafeLocation} from '@github-ui/ssr-utils'\nimport type {PathFunction} from './types'\nimport {encodePart} from './utils'\n\ntype Repository = {\n  name: string\n  ownerLogin: string\n}\n\ntype ActivityFilter = {\n  actor?: {\n    login: string\n  }\n  activityType: string\n  timePeriod: string\n  sort: string\n}\n\nexport type RepositoryTreePathAction =\n  | 'tree'\n  | 'blob'\n  | 'blame'\n  | 'raw'\n  | 'new'\n  | 'edit'\n  | 'delete'\n  | 'upload'\n  | 'tree/delete'\n  | 'latest-commit'\n  | 'tree-commit-info'\n  | 'branch-infobar'\n  | 'file-contributors'\n  | 'overview-files'\n\nexport type RepositoryPathAction =\n  | 'hovercard'\n  | 'refs'\n  | 'actions'\n  | 'pulls'\n  | 'issues'\n  | 'issues/new'\n  | 'branches'\n  | 'tags'\n  | 'settings'\n\nexport const fullUrl: PathFunction<{path: string}> = ({path}) => new URL(path, ssrSafeLocation.origin).toString()\n\nexport const codeNavGeneralSearchPath: PathFunction<{searchTerm: string}> = ({searchTerm}) =>\n  `/search?q=${encodePart(`${searchTerm}`)}&type=code`\n\nexport const codeNavSearchPath: PathFunction<{owner: string; repo: string; searchTerm: string}> = ({\n  owner,\n  repo,\n  searchTerm,\n}) => `/search?q=${encodePart(`repo:${owner}/${repo} ${searchTerm}`)}&type=code`\n\nexport const searchPath: PathFunction = () => `/search`\n\nexport const advancedSearchPath = () => `/search/advanced`\n\nexport const searchStatsPath: PathFunction = () => `/search/stats`\n\nexport const ownerPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}`\n\nexport const ownerAvatarPath: PathFunction<{owner: string}> = ({owner}) => `/${encodePart(owner)}.png`\n\nexport const userHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/users/${encodePart(owner)}/hovercard`\n\nexport const teamHovercardPath: PathFunction<{owner: string; team: string}> = ({owner, team}) =>\n  `/orgs/${encodePart(owner)}/teams/${encodePart(team)}/hovercard`\n\nexport const orgHovercardPath: PathFunction<{owner: string}> = ({owner}) => `/orgs/${encodePart(owner)}/hovercard`\n\nexport const userIdHovercardPath: PathFunction<{userId: number}> = ({userId}) => `/hovercards?user_id=${userId}`\n\nexport function repositoryPath({owner, repo, action}: {owner: string; repo: string; action?: RepositoryPathAction}) {\n  return action ? `/${encodePart(owner)}/${encodePart(repo)}/${action}` : `/${encodePart(owner)}/${encodePart(repo)}`\n}\n\nexport const repositoryStatsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/stats`\n\nexport const repositoryParticipationPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/graphs/participation`\n\nexport const repoCommitActivityInsightsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/graphs/commit-activity`\n\nexport const refNameCheckPath: PathFunction<{owner: string; repo: string; refName: string}> = ({\n  owner,\n  repo,\n  refName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}/rename_ref_check`\n\nexport const renameBranchEffectsPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/branches/rename_form/${encodePart(branchName)}`\n\nexport const renameRefPath: PathFunction<{owner: string; repo: string; refName: string}> = ({owner, repo, refName}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/${encodePart(refName)}`\n\nexport const checkTagNameExistsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/branches/check_tag_name_exists`\n\nexport const branchPath: PathFunction<{owner: string; repo: string; branch: string}> = ({owner, repo, branch}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/tree/${encodePart(branch)}`\n\nexport const tagPath: PathFunction<{owner: string; repo: string; tag: string}> = ({owner, repo, tag}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/releases/tag/${encodePart(tag)}`\n\nexport const invitationsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/invitations`\n\nexport const migrateImmutableActionsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/actions/immutable_actions/migrate`\n\nexport const migrationWorkflowsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/actions/workflows/immutable-actions-migration/migrate_release`\n\nexport const newBranchProtectionPath: PathFunction<{owner: string; repo: string; branchName: string}> = ({\n  owner,\n  repo,\n  branchName,\n}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/branch_protection_rules/new?branch_name=${encodePart(branchName)}`\n\nexport const rulesetsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules`\n\nexport const newRulesetPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules/new?target=branch&enforcement=disabled`\n\nexport const orgRulesetsTargetCountPath: PathFunction<{owner: string}> = ({owner}) =>\n  `/organizations/${encodePart(owner)}/settings/rules/deferred_target_counts`\n\nexport const stafftoolsOrgRulesetsTargetCountPath: PathFunction<{owner: string}> = ({owner}) =>\n  `/stafftools/users/${encodePart(owner)}/organization_rules/deferred_target_counts`\n\nexport const repoRulesetsTargetCountPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/settings/rules/deferred_target_counts`\n\nexport const stafftoolsRepoRulesetsTargetCountPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/stafftools/repositories/${encodePart(owner)}/${encodePart(repo)}/repository_rules/deferred_target_counts`\n\nexport const validateRegexPath = () => '/repos/validate_regex'\nexport const validateRegexValuePath = () => '/repos/validate_regex/value'\n\nexport const blobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, lineNumber, plain}) => {\n  const params = plain ? `?plain=${plain}` : ''\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blob/${encodePart(commitish)}/${encodePart(\n    filePath,\n  )}${params}${suffix}`\n}\n\nexport const editBlobPath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  hash?: string\n  lineNumber?: number\n  plain?: number\n}> = ({owner, repo, commitish, filePath, hash, lineNumber}) => {\n  const suffix = hash ? hash : lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/edit/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport const blamePath: PathFunction<{\n  owner: string\n  repo: string\n  commitish: string\n  filePath: string\n  lineNumber?: number\n}> = ({owner, repo, commitish, filePath, lineNumber}) => {\n  const suffix = lineNumber ? `#L${lineNumber}` : ''\n  return `/${encodePart(owner)}/${encodePart(repo)}/blame/${encodePart(commitish)}/${encodePart(filePath)}${suffix}`\n}\n\nexport function dismissRepositoryNoticePathPath({login}: {login: string}) {\n  return `/users/${encodePart(login)}/dismiss_repository_notice`\n}\n\nexport function deferredMetadataPath({repo, commitish, path}: {repo: Repository; commitish: string; path: string}) {\n  const parts = ['', repo.ownerLogin, repo.name, 'deferred-metadata', commitish, path]\n  return parts.map(encodePart).join('/')\n}\n\nexport function deferredASTPath({repo, commitish, path}: {repo: Repository; commitish: string; path: string}) {\n  const parts = ['', repo.ownerLogin, repo.name, 'deferred-ast', commitish, path]\n  return parts.map(encodePart).join('/')\n}\n\nexport function repoOverviewUrl(repo: Pick<Repository, 'name' | 'ownerLogin'>) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}`\n}\n\nexport function repoDefaultBrachUrl(repo: Repository) {\n  return `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}?files=1`\n}\n\nexport function repositoryTreePath({\n  repo,\n  commitish,\n  action,\n  path,\n}: {\n  repo: Pick<Repository, 'name' | 'ownerLogin'>\n  commitish: string\n  action: RepositoryTreePathAction\n  path?: string\n}) {\n  const parts = ['', repo.ownerLogin, repo.name, action, commitish]\n\n  if (path && path !== '/') {\n    parts.push(path)\n  }\n\n  return parts.map(encodePart).join('/')\n}\n\nexport const blobSidePanelMetadataPath: PathFunction<{\n  owner: string\n  repo: string\n}> = ({owner, repo}) => `/${owner}/${repo}/sidepanel-metadata`\n\nexport function blobDetectLanguage(repo: Repository, encodedFileName: string, fullDetails?: boolean) {\n  return `/${repo.ownerLogin}/${repo.name}/detect_language?filename=${encodedFileName}${\n    fullDetails ? '&full_details=true' : ''\n  }`\n}\n\nexport const wikiBlobBasePath: PathFunction<{owner: string; repo: string; filePath: string}> = ({\n  owner,\n  repo,\n  filePath,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/wiki/${filePath.substring(0, filePath.lastIndexOf('.'))}`\n\nexport const wikiBlobPath: PathFunction<{owner: string; repo: string; filePath: string; commitish: string}> = ({\n  owner,\n  repo,\n  filePath,\n  commitish,\n}) => `${wikiBlobBasePath({owner, repo, filePath})}/${commitish}`\n\nexport const wikiComparePath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/wiki/_compare/${commitish}`\n\nexport const commitPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({owner, repo, commitish}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitish}`\n\nexport const diffLinesPath: PathFunction<{owner: string; repo: string; sha1: string; sha2: string; entry: string}> = ({\n  owner,\n  repo,\n  entry,\n  sha1,\n  sha2,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/diffs/${entry}/diff-lines?sha1=${sha1}&sha2=${sha2}`\n\nexport const commitDiffEntriesPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `${commitPath({owner, repo, commitish})}/remaining_diff_entries`\n\nexport const diffIndexPath: PathFunction<{owner: string; repo: string; sha1: string; sha2: string; oid: string}> = ({\n  owner,\n  repo,\n  sha1,\n  sha2,\n  oid,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/diffs?sha1=${sha1}&sha2=${sha2}&commit=${oid}`\n\nexport const commitContextLinesPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `${commitPath({owner, repo, commitish})}/context_lines`\n\nexport const commitDiscussionsPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n  beforeCommentId?: string\n}> = ({owner, repo, commitOid, beforeCommentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/discussion_comments${\n    beforeCommentId ? `?before_comment_id=${beforeCommentId}` : ''\n  }`\n\nexport const commitInlineCommentsPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n  path: string\n  position: string\n}> = ({owner, repo, commitOid, path, position}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/inline_comments/?path=${encodePart(\n    path,\n  )}&position=${encodePart(position)}`\n\nexport const commitCommentDeferredCommentDataPath: PathFunction<{\n  owner: string\n  repo: string\n  commitOid: string\n  untilCommentId?: string\n}> = ({owner, repo, commitOid, untilCommentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/commit/${commitOid}/deferred_comment_data${\n    untilCommentId ? `?until_comment_id=${untilCommentId}` : ''\n  }`\n\nexport const commitsPath: PathFunction<{owner: string; repo: string; ref?: string; path?: string}> = ({\n  owner,\n  repo,\n  ref,\n  path,\n}) => {\n  const base = `/${encodePart(owner)}/${encodePart(repo)}/commits`\n  if (!ref) return base\n  if (!path) return `${base}/${encodePart(ref)}`\n  return `${base}/${encodePart(ref)}/${encodePart(stripLeadingSlash(path))}`\n}\n\nexport function commitsPathByAuthor({\n  repo,\n  branch,\n  path,\n  author,\n}: {\n  repo: Repository\n  branch: string\n  path: string\n  author: string\n}) {\n  const url = [repo.ownerLogin, repo.name, 'commits', branch, path].map(encodePart).join('/')\n  return `/${url}?author=${encodePart(author)}`\n}\n\nexport function commitStatusDetailsPath(repo: Repository, oid: string) {\n  return `/${repo.ownerLogin}/${repo.name}/commit/${oid}/status-details`\n}\n\nexport function commitsByAuthor({repo, author}: {repo: Repository; author: string}) {\n  const parts = [repo.ownerLogin, repo.name]\n\n  return `/${parts.map(encodePart).join('/')}/commits?author=${encodePart(author)}`\n}\n\nexport const commitHovercardPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/commit/${commitish}/hovercard`)}`\n\nexport const branchCommmitsPath: PathFunction<{owner: string; repo: string; commitish: string}> = ({\n  owner,\n  repo,\n  commitish,\n}) => `/${encodePart(`${owner}/${repo}/branch_commits/${commitish}`)}`\n\nexport const topicPath: PathFunction<{topicName: string}> = ({topicName}) => `/topics/${topicName}`\n\nexport const marketplaceCategoryPath: PathFunction<{categoryName: string}> = ({categoryName}) =>\n  `/marketplace/category/${parametrize(categoryName)}`\n\nexport const marketplaceActionPath: PathFunction<{slug: string}> = ({slug}) =>\n  `/marketplace/actions/${encodePart(slug)}`\n\nexport const actionsWorkflowRunPath: PathFunction<{owner: string; repo: string; runId?: string; attempt?: string}> = ({\n  owner,\n  repo,\n  runId,\n  attempt,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId)\n  }\n  // Attempt defaults to '1' when not set\n  if (runId && attempt) {\n    parts.push('attempts', attempt)\n  }\n\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const actionsWorkflowFilePath: PathFunction<{owner: string; repo: string; runId?: string}> = ({\n  owner,\n  repo,\n  runId,\n}) => {\n  const parts = [owner, repo, 'actions']\n  if (runId) {\n    parts.push('runs', runId, 'workflow')\n  }\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport const codeownersErrorPath: PathFunction<{owner: string; repo: string; commitish: string; filePath: string}> = ({\n  owner,\n  repo,\n  commitish,\n  filePath,\n}) => `/${owner}/${repo}/codeowners-validity/${commitish}/${filePath}`\n\nfunction stripLeadingSlash(path: string) {\n  return path.startsWith('/') ? path.slice(1) : path\n}\n\n/**\n * Replaces all non-alphanumeric characters with dashes, just like string.parametrize in ruby.\n */\nfunction parametrize(value: string) {\n  return value.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase()\n}\n\nexport function parentPath(path: string) {\n  return path.split('/').slice(0, -1).join('/')\n}\n\n/**\n * Returns the path to the activity index page for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityIndexPath({\n  repo,\n  baseUrl = '',\n  branch,\n  filter,\n  pagination,\n  perPage = 30,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  filter?: ActivityFilter\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (filter) {\n    // Don't add default values to the path/query-string\n    if (filter.activityType && filter.activityType.toLocaleLowerCase() !== 'all') {\n      params.push(`activity_type=${encodePart(filter.activityType)}`)\n    }\n\n    if (filter.actor?.login) {\n      params.push(`actor=${encodePart(filter.actor.login)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.timePeriod && filter.timePeriod.toLocaleLowerCase() !== 'all') {\n      params.push(`time_period=${encodePart(filter.timePeriod)}`)\n    }\n\n    // Don't add default values to the path/query-string\n    if (filter.sort && filter.sort.toLocaleLowerCase() !== 'desc') {\n      params.push(`sort=${encodePart(filter.sort)}`)\n    }\n  }\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${pagination.before}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\n/**\n * Returns the path to the activity actors endpoing for a repository.\n *\n * To reuse this path in apps rendered in different places (e.g. GitHub.com vs Stafftools) - pass in the `baseUrl` param.\n */\nexport function activityActorsPath({\n  repo,\n  baseUrl = '',\n  branch,\n  timePeriod,\n}: {\n  repo: Repository\n  baseUrl?: string\n  branch?: string\n  timePeriod?: string\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'activity', 'actors']\n  const params = []\n\n  if (branch) params.push(`ref=${encodePart(branch)}`)\n  if (timePeriod) params.push(`time_period=${encodePart(timePeriod)}`)\n\n  return `${baseUrl}/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function ruleInsightsActorsPath() {\n  return `insights/actors`\n}\n\nexport function bypassRequestersActorsPath() {\n  return `bypass_requests/requesters`\n}\n\nexport function bypassApproversActorsPath() {\n  return `bypass_requests/approvers`\n}\n\nexport function comparePath({repo, base = undefined, head}: {repo: Repository; base?: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'compare'].map(encodePart).join('/')\n  const compareSegment = base ? `${encodePart(base)}...${encodePart(head)}` : encodePart(head)\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function mergeabilityCheckPath({repo, base, head}: {repo: Repository; base: string; head: string}) {\n  const baseSegment = [repo.ownerLogin, repo.name, 'branches', 'pre_mergeable'].map(encodePart).join('/')\n  const compareSegment = `${encodePart(base)}...${encodePart(head)}`\n  return `/${baseSegment}/${compareSegment}`\n}\n\nexport function repoPullRequestsPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/pulls`\n}\n\nexport function repoStargazersPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/stargazers`\n}\n\nexport function newPullRequestPath({repo, refName}: {repo: Repository; refName: string}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', 'new', refName].map(encodePart).join('/')}`\n}\n\nexport function pullRequestPath({repo, number}: {repo: Repository; number: number}) {\n  return `/${[repo.ownerLogin, repo.name, 'pull', number.toString()].map(encodePart).join('/')}`\n}\n\nexport const pullRequestTitlePath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n}> = ({owner, repo, number}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}`\n\nexport const pullRequestBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) => `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issue-${contentId}`\n\nexport const pullRequestCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#issuecomment-${contentId}`\n\nexport const pullRequestReviewPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#pullrequestreview-${contentId}`\n\nexport const pullRequestReviewCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  number: number\n  contentId: number\n}> = ({owner, repo, number, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${number}#discussion_r${contentId}`\n\nexport function fetchAndMergePath({repo, refName, discard}: {repo: Repository; refName: string; discard?: boolean}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches', 'fetch_and_merge', refName].map(encodePart).join('/')}${\n    discard ? '?discard_changes=true' : ''\n  }`\n}\n\nexport function reposSurveyPath(repo: Repository, action?: 'dismiss' | 'answer') {\n  const parts = [repo.ownerLogin, repo.name, 'repos', 'survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function codeNavSurveyPath(ownerLogin: string, repoName: string, action?: 'answer') {\n  const parts = [ownerLogin, repoName, 'repos', 'code_nav_survey']\n  if (action) parts.push(action)\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function treeListPath({\n  repo,\n  commitOid,\n  includeDirectories = false,\n}: {\n  repo: Repository\n  commitOid: string\n  includeDirectories?: boolean\n}) {\n  const path = `/${[repo.ownerLogin, repo.name, 'tree-list', commitOid].map(encodePart).join('/')}`\n\n  return includeDirectories ? `${path}?include_directories=${includeDirectories}` : path\n}\n\nexport function branchCountPath(repo: Repository) {\n  const parts = [repo.ownerLogin, repo.name, 'branch-count']\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function tagCountPath(repo: Repository) {\n  const parts = [repo.ownerLogin, repo.name, 'tag-count']\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function branchAndTagCountPath(repo: Repository) {\n  const parts = [repo.ownerLogin, repo.name, 'branch-and-tag-count']\n  return `/${parts.map(encodePart).join('/')}`\n}\n\nexport function codeNavigationPath({\n  repo,\n  type,\n  q,\n  language,\n  row,\n  column,\n  ref,\n  path,\n  codeNavContext,\n  symbolKind,\n}: {\n  repo: Repository\n  type: string\n  q: string\n  language: string\n  row: number\n  column: number\n  ref: string\n  path: string\n  codeNavContext: string\n  symbolKind: string | null\n}) {\n  const repoSegment = [repo.ownerLogin, repo.name].map(encodePart).join('/')\n  const params = new URLSearchParams()\n  params.append('q', q)\n  params.append('language', language)\n  params.append('row', String(row))\n  params.append('col', String(column))\n  params.append('ref', ref)\n  params.append('blob_path', path)\n  params.append('code_nav_context', codeNavContext)\n  if (symbolKind) {\n    params.append('symbol_kind', symbolKind)\n  }\n  return `/${repoSegment}/find-react-${type}?${params.toString()}`\n}\n\nexport const discussionsPath: PathFunction<{owner: string; repo: string}> = ({owner, repo}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions`\n\nexport const discussionPath: PathFunction<{owner: string; repo: string; discussionNumber: number}> = ({\n  owner,\n  repo,\n  discussionNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}`\n\nexport const discussionCommentPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussioncomment-${contentId}`\n\nexport const discussionBodyPath: PathFunction<{\n  owner: string\n  repo: string\n  discussionNumber: number\n  contentId: number\n}> = ({owner, repo, discussionNumber, contentId}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/discussions/${discussionNumber}#discussion-${contentId}`\n\nexport function repoIssuesPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/issues`\n}\n\nexport const issuePath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}`\n\nexport const issueCommentPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issuecomment-${contentId}`\n\nexport const issueBodyPath: PathFunction<{owner: string; repo: string; issueNumber: number; contentId: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n  contentId,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}#issue-${contentId}`\n\nexport const issueHovercardPath: PathFunction<{owner: string; repo: string; issueNumber: number}> = ({\n  owner,\n  repo,\n  issueNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/issues/${issueNumber}/hovercard`\n\nexport const issueLinkedPullRequestHovercardPath: PathFunction<{\n  owner: string\n  repo: string\n  pullRequestNumber: number\n}> = ({owner, repo, pullRequestNumber}) =>\n  `/${encodePart(owner)}/${encodePart(repo)}/pull/${pullRequestNumber}/hovercard`\n\nexport const featurePreviews: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/feature_previews`\n\nexport function extractPathFromPathname(pathname: string, refName: string, defaultPath: string) {\n  // We expect the pathname to be in the form of /owner/repo/action/branch/path\n  // That's why we split the pathname by '/' and take the 4th element (after the action)\n  const indexOfBranchAndPath = getIndexOfNth(pathname, '/', 4)\n  const branchAndPath = pathname.substring(indexOfBranchAndPath)\n\n  if (branchAndPath === `/${refName}`) {\n    // there is no path so there is no trailing slash\n    return ''\n  } else if (branchAndPath.startsWith(`/${refName}/`)) {\n    return branchAndPath.substring(refName.length + 2)\n  } else {\n    return defaultPath\n  }\n}\n\nexport function codeOfConductPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/code-of-conduct/new`\n}\n\nexport function licenseSelectorPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/community/license/new`\n}\n\nexport function securityPolicyPath(owner: string, repo: string) {\n  return `/${encodePart(owner)}/${encodePart(repo)}/security/policy`\n}\n\nfunction getIndexOfNth(text: string, subString: string, index: number) {\n  return text.split(subString, index).join(subString).length\n}\n\nexport const repoTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repositoryCheckNamePath = () => '/repositories/check-name'\n\nexport const repositoriesPath = () => '/repositories'\n\nexport const repoTransferTeamSuggestionsPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/transfer`\n\nexport const repoAbortTransferPath = (repo: Repository) =>\n  `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/abort_transfer`\n\nexport const repositoryImportsPath = () => '/new/import'\n\nexport const templateReposPath = () => `/repositories/new/templates`\n\nexport const repoOwnerItemsPath = () => '/repositories/forms/owner_items'\n\nexport const repoForkOwnerItemsPath = (repoId: number) => `/repositories/forms/fork_owner_items?repo_id=${repoId}`\n\nexport function repoOwnerDetailPath(owner: string): string\nexport function repoOwnerDetailPath(owner: string, action: 'transfer', repoId: number): string\nexport function repoOwnerDetailPath(owner: string, action?: 'transfer', repoId?: number): string {\n  const base = `/repositories/forms/owner_detail`\n  const params = new URLSearchParams({owner})\n\n  if (action && repoId) {\n    params.set('form', action)\n    params.set('repo_id', repoId.toString())\n  }\n\n  return `${base}?${params.toString()}`\n}\n\nexport const getContributorsPath = (repo: Repository) => `/repositories/${encodePart(repo.name)}/contributors/`\n\nexport const repoContributorsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/graphs/contributors`\n\nexport const repoAccessSettingsPath = (repo: Repository) =>\n  `/${encodePart(repo.ownerLogin)}/${encodePart(repo.name)}/settings/access`\n\ntype PropertiesPathPrefix = 'organizations' | 'enterprises'\n\nexport function propertyDefinitionSettingsPath({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName?: string\n}) {\n  const parts = ['', pathPrefix, encodePart(sourceName), 'settings']\n  if (propertyName) {\n    parts.push('custom-property')\n    parts.push(encodePart(propertyName))\n  } else {\n    parts.push('custom-properties')\n  }\n  return parts.join('/')\n}\n\nexport function customPropertyDetailsPath({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName?: string\n}) {\n  const base = `/${pathPrefix}/${encodePart(sourceName)}/settings/custom-property`\n  if (propertyName) {\n    return `${base}/${encodePart(propertyName)}`\n  } else {\n    return base\n  }\n}\n\nexport const businessOrgCustomPropertyDetailsPath = ({\n  business,\n  org,\n  propertyName,\n}: {\n  business: string\n  org: string\n  propertyName: string\n}) =>\n  `/enterprises/${encodePart(business)}/settings/custom-property/organizations/${encodePart(org)}/${encodePart(\n    propertyName,\n  )}`\n\nexport const promoteBusinessOrgCustomPropertyPath = ({\n  business,\n  org,\n  propertyName,\n}: {\n  business: string\n  org: string\n  propertyName: string\n}) =>\n  `/enterprises/${encodePart(business)}/settings/custom-property/organizations/${encodePart(org)}/${encodePart(\n    propertyName,\n  )}/promote`\n\nexport function updateOrgPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/values`\n}\n\nexport function listOrgReposPropertyValuesPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/custom-properties/list-repos-values`\n}\n\nexport const checkPropertyUsagePath = ({\n  pathPrefix,\n  sourceName,\n  propertyName,\n}: {\n  pathPrefix: PropertiesPathPrefix\n  sourceName: string\n  propertyName: string\n}) =>\n  ['', pathPrefix, encodePart(sourceName), 'settings', 'custom-properties-usage', encodePart(propertyName)].join('/')\n\nexport const checkPropertyNamePath = ({sourceName, propertyName}: {sourceName: string; propertyName: string}) =>\n  `/enterprises/${encodePart(sourceName)}/settings/property_definition_name_check/${encodePart(propertyName)}`\n\nexport function repositoryPropertiesSettingsPath({org, repo}: {org: string; repo: string}) {\n  return `/${encodePart(`${org}/${repo}`)}/settings/custom-properties`\n}\n\nexport function forkPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/fork`\n}\n\nexport function forksListPath({owner, repo}: {owner: string; repo: string}) {\n  return `/${encodePart(`${owner}/${repo}`)}/forks`\n}\n\nexport function newRepoPath({org}: {org?: string}) {\n  if (org) {\n    return `/organizations/${encodePart(org)}/repositories/new`\n  }\n\n  return `/new`\n}\n\nexport function orgReposIndexPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repositories`\n}\n\nexport function orgReposListPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/repos_list`\n}\n\nexport function orgTopicReposPath({topic, org}: {topic: string; org: string}) {\n  return `/search?q=topic%3A${encodePart(topic)}+org%3A${encodePart(org)}&type=Repositories`\n}\n\nexport function repoAttestationsIndexPath({\n  repo,\n  pagination = {before: null, after: null},\n  perPage = 30,\n}: {\n  repo: Repository\n  pagination?: {before?: string | null; after?: string | null}\n  perPage?: number\n}) {\n  const parts = [repo.ownerLogin, repo.name, 'attestations']\n  const params = []\n\n  if (pagination) {\n    if (pagination.after) {\n      params.push(`after=${encodePart(pagination.after)}`)\n    } else if (pagination.before) {\n      params.push(`before=${encodePart(pagination.before)}`)\n    }\n  }\n\n  // Don't add default values to the path/query-string\n  if (perPage && perPage !== 30) {\n    params.push(`per_page=${perPage}`)\n  }\n\n  return `/${parts.map(encodePart).join('/')}${params.length > 0 ? `?${params.join('&')}` : ''}`\n}\n\nexport function repoAttestationShowPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString()].map(encodePart).join('/')}`\n}\n\nexport function repoAttestationDownloadPath({repo, attestationId}: {repo: Repository; attestationId: number | string}) {\n  // Coerce attestationId to string as it's sometimes a number (SSR vs client-side hydration)\n  return `/${[repo.ownerLogin, repo.name, 'attestations', attestationId.toString(), 'download']\n    .map(encodePart)\n    .join('/')}`\n}\n\nexport function branchesPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'branches'].map(encodePart).join('/')}`\n}\n\nexport function tagsPath({repo}: {repo: Repository}) {\n  return `/${[repo.ownerLogin, repo.name, 'tags'].map(encodePart).join('/')}`\n}\n\nexport function orgOnboardingAdvancedSecurityPath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/organization_onboarding/advanced_security`\n}\n\nexport function settingsEnterpriseSecurityProductsPath({enterprise}: {enterprise: string}) {\n  return `/enterprises/${encodePart(enterprise)}/settings/security_analysis`\n}\n\nexport function settingsEnterpriseSecurityProductsRepositoriesApplyPath({enterprise}: {enterprise: string}) {\n  return `/enterprises/${encodePart(enterprise)}/settings/security_analysis/apply_configuration`\n}\n\nexport function settingsEnterpriseSecurityProductsConfigurationSummaryPath({enterprise}: {enterprise: string}) {\n  return `/enterprises/${encodePart(enterprise)}/settings/security_analysis/apply_confirmation_summary`\n}\n\nexport function settingsOrgSecurityProductsPath({org, tip, q}: {org: string; tip?: string | null; q?: string | null}) {\n  let path = `/organizations/${encodePart(org)}/settings/security_products`\n  if (tip) {\n    path += `?tip=${tip}`\n  }\n  if (q) {\n    path += `${tip ? '&' : '?'}q=${encodePart(q)}`\n  }\n  return path\n}\n\nexport function settingsOrgSecurityConfigurationsNewPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/new`\n}\n\nexport function settingsOrgSecurityConfigurationsCreatePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations`\n}\n\nexport function settingsOrgSecurityConfigurationsEditPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/edit/${id}`\n}\n\nexport function settingsOrgSecurityConfigurationsUpdatePath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configurations/${id}`\n}\n\nexport function settingsOrgSecurityProductsRepositories({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories/apply_confirmation_summary`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesApplyPath({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/${id}/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesDeletePath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/repositories`\n}\n\nexport function settingsOrgSecurityProductsRepositoriesCount({org, id}: {org: string; id: number}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/configuration/${id}/repositories_count`\n}\n\nexport function settingsOrgSecurityConfigurationsViewPath({\n  org,\n  id,\n  tip,\n}: {\n  org: string\n  id: number\n  tip?: string | null\n}) {\n  let path = `/organizations/${encodePart(org)}/settings/security_products/configurations/view/${id}`\n  if (tip) {\n    path += `?tip=${tip}`\n  }\n  return path\n}\n\nexport function settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/repositories/advanced_security_license_summary`\n}\n\nexport function settingsOrgSecurityProductsEnablementInProgressPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/in_progress`\n}\n\nexport function settingsOrgSecurityProductsRefreshPath({org}: {org: string}) {\n  return `/organizations/${encodePart(org)}/settings/security_products/refresh`\n}\n\nexport function settingsBusinessSecurityAnalysisPath({business}: {business: string}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationsNewPath({business}: {business: string}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations/new`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationsCreatePath({business}: {business: string}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationsEditPath({business, id}: {business: string; id: number}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations/${id}/edit`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationsUpdatePath({\n  business,\n  id,\n}: {\n  business: string\n  id: number\n}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations/${id}`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationsViewPath({business, id}: {business: string; id: number}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations/${id}/view`\n}\n\nexport function settingsBusinessSecurityAnalysisConfigurationRepositoriesCount({\n  business,\n  id,\n}: {\n  business: string\n  id: number\n}) {\n  return `/enterprises/${encodePart(business)}/settings/security_analysis/configurations/${id}/repositories_count`\n}\n\nexport function settingsUserSecurityProductsPath() {\n  return `/users/settings/security_products`\n}\n\nexport function settingsUserSecurityProductsRepositoriesCount({id}: {id: number}) {\n  return `/users/settings/security_products/configuration/${id}/repositories_count`\n}\n\nexport function settingsUserSecurityConfigurationsNewPath() {\n  return `/users/settings/security_products/configurations/new`\n}\n\nexport function settingsUserSecurityConfigurationsEditPath({id}: {id: number}) {\n  return `/users/settings/security_products/configurations/edit/${id}`\n}\n\nexport function settingsUserSecurityConfigurationsViewPath({id}: {id: number}) {\n  return `/users/settings/security_products/configurations/view/${id}`\n}\n\nexport function settingsUserSecurityConfigurationsCreatePath() {\n  return `/users/settings/security_products/configurations`\n}\n\nexport function settingsUserSecurityConfigurationsUpdatePath({id}: {id: number}) {\n  return `/users/settings/security_products/configurations/${id}`\n}\n\nexport function editDocsetPath({docsetId}: {docsetId: string}) {\n  return `/copilot/docsets/${docsetId}/edit`\n}\n\nexport function contactSalesRequest() {\n  return '/contact-sales'\n}\n\nexport const contactPath = () => '/contact'\n\nexport function reportAbusePath({report}: {report: string}) {\n  const reportParamString = new URLSearchParams({report})\n  return `/contact/report-abuse?${reportParamString}`\n}\n\nexport function repoSettingsSecurityAnalysisPath({repo}: {repo: Repository}) {\n  return `/${encodePart(`${repo.ownerLogin}/${repo.name}`)}/settings/security_analysis`\n}\n\nexport function dismissOrganizationNoticePath({org}: {org: string}) {\n  return `/orgs/${encodePart(org)}/dismiss_notice`\n}\n\nexport function dismissUserNoticePath({noticeName}: {noticeName: string}) {\n  return `/settings/dismiss-notice/${noticeName}`\n}\n\nexport const enterprisePath: PathFunction<{slug: string}> = ({slug}) => `/enterprises/${slug}`\n\nexport const enterpriseRolesPath: PathFunction<{slug: string}> = ({slug}) =>\n  `/enterprises/${encodePart(slug)}/enterprise_roles`\n\nexport const newEnterpriseRoleAssignmentPath: PathFunction<{slug: string}> = ({slug}) =>\n  `/enterprises/${encodePart(slug)}/enterprise_role_assignments/new`\n\nexport function emailSubscriptionTopicsByEmailPath(email: string) {\n  const emailParamString = new URLSearchParams({email})\n  return `/settings/emails/subscriptions/topics_by_email?${emailParamString}`\n}\n\nexport function emailSubscriptionTopicsByParamsPath<TopicsParams extends Record<string, string>>(\n  topicSettingParams: TopicsParams,\n) {\n  const topicSettingParamString = new URLSearchParams(topicSettingParams)\n  return `/settings/emails/subscriptions/topics_by_params?${topicSettingParamString}`\n}\n\nexport function emailSubscriptionNewLinkPath() {\n  return '/settings/emails/subscriptions/link-request/new'\n}\n\nexport const userPRFileTreeVisibilitySettingPath: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/pulls/settings/file_tree_visibility`\n\nexport const userDiffLineSpacingSettingPath: PathFunction<{login: string}> = ({login}) =>\n  `/users/${encodePart(login)}/diffs/settings/line_spacing`\n\nexport const codeScanningAlertPath: PathFunction<{owner: string; repo: string; alertNumber: number}> = ({\n  owner,\n  repo,\n  alertNumber,\n}) => `/${encodePart(owner)}/${encodePart(repo)}/security/code-scanning/${alertNumber}`\n\nexport function orgRepositoriesPath({owner, query}: {owner: string; query: string}) {\n  return `/orgs/${encodePart(owner)}/repositories?q=${encodePart(query)}`\n}\n\nexport const businessOrgsSuggestionsPath = ({businessSlug}: {businessSlug: string}) =>\n  `/enterprises/${encodePart(businessSlug)}/organizations/suggestions`\n\nexport const businessOrgsSuggestionsValidatePath = ({businessSlug}: {businessSlug: string}) =>\n  `/enterprises/${encodePart(businessSlug)}/organizations/suggestions/validate`\n","import type {PathFunction, PathParams, Query} from './types'\nimport {ssrSafeLocation} from '@github-ui/ssr-utils'\n\n/**\n * Given a path function, a set of parameters for that function, and a query, returns a URL.\n */\nexport function getUrl<T extends PathParams | void>(path: PathFunction<T>, args: T, query?: Query): URL {\n  const pathname = path(args)\n  const target = new URL(pathname, ssrSafeLocation.origin || 'https://github.com')\n\n  if (pathname === ssrSafeLocation.pathname) {\n    target.search = new URLSearchParams(ssrSafeLocation.search).toString()\n  }\n\n  for (const [key, value] of Object.entries(query || {})) {\n    if (value === null || value === undefined) {\n      target.searchParams.delete(key)\n    } else {\n      target.searchParams.set(key, value.toString())\n    }\n  }\n\n  return target\n}\n\n/**\n * Get an href for use in links. This will be a relative URL, and will work properly in SSR.\n */\nexport function getRelativeHref<T extends PathParams>(path: PathFunction<T>, args: T, query?: Query): string {\n  const url = getUrl(path, args, query)\n  return url.href.replace(url.origin, '') // strip origin, but keep the rest to make it relative\n}\n\n/**\n * Encodes special characters in a URL part, except `/`\n */\nexport function encodePart(part: string): string {\n  return part.split('/').map(encodeURIComponent).join('/')\n}\n"],"names":["fullUrl","path","URL","ssrSafeLocation","origin","toString","codeNavGeneralSearchPath","searchTerm","encodePart","codeNavSearchPath","owner","repo","searchPath","advancedSearchPath","searchStatsPath","ownerPath","ownerAvatarPath","userHovercardPath","teamHovercardPath","team","orgHovercardPath","repositoryPath","action","repositoryStatsPath","repositoryParticipationPath","repoCommitActivityInsightsPath","refNameCheckPath","refName","renameBranchEffectsPath","branchName","renameRefPath","checkTagNameExistsPath","branchPath","branch","tagPath","tag","invitationsPath","migrateImmutableActionsPath","migrationWorkflowsPath","newRulesetPath","orgRulesetsTargetCountPath","stafftoolsOrgRulesetsTargetCountPath","repoRulesetsTargetCountPath","stafftoolsRepoRulesetsTargetCountPath","validateRegexPath","validateRegexValuePath","blobPath","commitish","filePath","lineNumber","plain","params","suffix","editBlobPath","hash","blamePath","dismissRepositoryNoticePathPath","login","deferredMetadataPath","parts","ownerLogin","name","map","join","deferredASTPath","repoOverviewUrl","repoDefaultBrachUrl","repositoryTreePath","push","blobSidePanelMetadataPath","blobDetectLanguage","encodedFileName","fullDetails","wikiBlobBasePath","substring","lastIndexOf","wikiBlobPath","wikiComparePath","commitPath","diffLinesPath","entry","sha1","sha2","commitDiffEntriesPath","diffIndexPath","oid","commitContextLinesPath","commitDiscussionsPath","commitOid","beforeCommentId","commitInlineCommentsPath","position","commitCommentDeferredCommentDataPath","untilCommentId","commitsPath","ref","base","stripLeadingSlash","startsWith","slice","commitsPathByAuthor","author","url","commitStatusDetailsPath","commitsByAuthor","commitHovercardPath","branchCommmitsPath","topicPath","topicName","marketplaceCategoryPath","categoryName","value","replace","toLowerCase","marketplaceActionPath","slug","actionsWorkflowRunPath","runId","attempt","actionsWorkflowFilePath","codeownersErrorPath","parentPath","split","activityIndexPath","baseUrl","filter","pagination","perPage","activityType","toLocaleLowerCase","actor","timePeriod","sort","after","before","length","activityActorsPath","ruleInsightsActorsPath","bypassRequestersActorsPath","bypassApproversActorsPath","comparePath","head","baseSegment","compareSegment","mergeabilityCheckPath","repoPullRequestsPath","repoStargazersPath","newPullRequestPath","pullRequestPath","number","pullRequestTitlePath","pullRequestBodyPath","contentId","pullRequestCommentPath","pullRequestReviewPath","pullRequestReviewCommentPath","fetchAndMergePath","discard","treeListPath","includeDirectories","branchAndTagCountPath","codeNavigationPath","type","q","language","row","column","codeNavContext","symbolKind","repoSegment","URLSearchParams","append","String","discussionsPath","discussionPath","discussionNumber","discussionCommentPath","discussionBodyPath","repoIssuesPath","issuePath","issueNumber","issueCommentPath","issueBodyPath","issueHovercardPath","issueLinkedPullRequestHovercardPath","pullRequestNumber","extractPathFromPathname","pathname","defaultPath","indexOfBranchAndPath","text","branchAndPath","repoTransferPath","repositoryCheckNamePath","repositoriesPath","repoTransferTeamSuggestionsPath","repoAbortTransferPath","repositoryImportsPath","templateReposPath","repoOwnerItemsPath","repoForkOwnerItemsPath","repoId","repoOwnerDetailPath","set","repoContributorsPath","repoAccessSettingsPath","propertyDefinitionSettingsPath","pathPrefix","sourceName","propertyName","customPropertyDetailsPath","businessOrgCustomPropertyDetailsPath","business","org","promoteBusinessOrgCustomPropertyPath","updateOrgPropertyValuesPath","listOrgReposPropertyValuesPath","checkPropertyUsagePath","checkPropertyNamePath","repositoryPropertiesSettingsPath","forkPath","forksListPath","newRepoPath","orgReposListPath","orgTopicReposPath","topic","repoAttestationsIndexPath","repoAttestationShowPath","attestationId","repoAttestationDownloadPath","branchesPath","tagsPath","orgOnboardingAdvancedSecurityPath","settingsEnterpriseSecurityProductsPath","enterprise","settingsEnterpriseSecurityProductsRepositoriesApplyPath","settingsEnterpriseSecurityProductsConfigurationSummaryPath","settingsOrgSecurityProductsPath","tip","settingsOrgSecurityConfigurationsNewPath","settingsOrgSecurityConfigurationsCreatePath","settingsOrgSecurityConfigurationsEditPath","id","settingsOrgSecurityConfigurationsUpdatePath","settingsOrgSecurityProductsRepositories","settingsOrgSecurityProductsRepositoriesConfigurationSummaryPath","settingsOrgSecurityProductsRepositoriesApplyPath","settingsOrgSecurityProductsRepositoriesDeletePath","settingsOrgSecurityProductsRepositoriesCount","settingsOrgSecurityConfigurationsViewPath","settingsOrgSecurityProductsRepositoriesGhasLicenseSummaryPath","settingsOrgSecurityProductsEnablementInProgressPath","settingsOrgSecurityProductsRefreshPath","settingsBusinessSecurityAnalysisPath","settingsBusinessSecurityAnalysisConfigurationsNewPath","settingsBusinessSecurityAnalysisConfigurationsCreatePath","settingsBusinessSecurityAnalysisConfigurationsEditPath","settingsBusinessSecurityAnalysisConfigurationsUpdatePath","settingsBusinessSecurityAnalysisConfigurationsViewPath","settingsBusinessSecurityAnalysisConfigurationRepositoriesCount","settingsUserSecurityProductsPath","settingsUserSecurityProductsRepositoriesCount","settingsUserSecurityConfigurationsNewPath","settingsUserSecurityConfigurationsEditPath","settingsUserSecurityConfigurationsViewPath","settingsUserSecurityConfigurationsCreatePath","settingsUserSecurityConfigurationsUpdatePath","contactSalesRequest","contactPath","reportAbusePath","report","reportParamString","repoSettingsSecurityAnalysisPath","dismissOrganizationNoticePath","dismissUserNoticePath","noticeName","enterprisePath","enterpriseRolesPath","newEnterpriseRoleAssignmentPath","emailSubscriptionTopicsByEmailPath","email","emailParamString","emailSubscriptionTopicsByParamsPath","topicSettingParams","topicSettingParamString","emailSubscriptionNewLinkPath","userPRFileTreeVisibilitySettingPath","userDiffLineSpacingSettingPath","codeScanningAlertPath","alertNumber","businessOrgsSuggestionsPath","businessSlug","businessOrgsSuggestionsValidatePath","getUrl","args","query","target","key","search","Object","entries","searchParams","delete","getRelativeHref","href","part","encodeURIComponent"],"sourceRoot":""}