{"version":3,"file":"app_assets_modules_github_behaviors_task-list_ts-app_assets_modules_github_sso_ts-ui_packages-900dde-xxxxxxxxxxxx.js","mappings":"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","sources":["app/assets/modules/github/behaviors/task-list.ts","app/assets/modules/github/sso.ts","ui/packages/details-dialog/details-dialog.ts","ui/packages/html-safe-nonce/html-safe-nonce.ts","ui/packages/fetch-utils/fetch-utils.ts","ui/packages/onfocus/onfocus.ts","ui/packages/soft-nav/states.ts"],"sourcesContent":["// ### Example Markup\n//\n//   <div class=\"js-task-list-container\">\n//     <task-lists disabled sortable>\n//       <div class=\"js-comment-body\">\n//         <ul class=\"contains-task-list\">\n//           <li class=\"task-list-item\">\n//             <input type=\"checkbox\" class=\"task-list-item-checkbox\" disabled>\n//             text\n//           </li>\n//         </ul>\n//       </div>\n//     </task-lists>\n//     <form class=\"js-comment-update\">\n//       <textarea class=\"js-task-list-field\">- [ ] text</textarea>\n//     </form>\n//   </div>\n//\n// ### Specification\n//\n// TaskLists MUST be contained in a `(div).js-task-list-container`.\n//\n// TaskList Items SHOULD be an a list (`UL`/`OL`) element.\n//\n// Task list items MUST match `(input).task-list-item-checkbox` and MUST be\n// `disabled` by default.\n//\n// TaskLists MUST have a `(textarea).js-task-list-field` form element whose\n// `value` attribute is the source (Markdown) to be updated. The source MUST\n// follow the syntax guidelines.\n//\n// ### NOTE\n//\n// Task list checkboxes are rendered as disabled by default because rendered\n// user content is cached without regard for the viewer.\n\nimport {compose, fromEvent} from '@github-ui/subscription'\n// eslint-disable-next-line no-restricted-imports\nimport {fire, on} from 'delegated-events'\n\nimport TaskListsElement from '@github/task-lists-element'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\nimport {remoteForm} from '@github/remote-form'\nimport {requestSubmit} from '@github-ui/form-utils'\n\ntype Position = [number, number]\n\ninterface CheckPayload {\n  operation: 'check'\n  position: Position\n  checked: boolean\n}\n\ninterface ConvertPayload {\n  operation: 'convert_to_block'\n  position: number\n}\n\ninterface MovePayload {\n  operation: 'move'\n  src: Position\n  dst: Position\n}\n\n// Enable task lists with persistence fields. Otherwise, the viewer lacks\n// permission to update the comment so task lists remain disabled.\nobserve('.js-task-list-container .js-task-list-field', function (el) {\n  const container = el.closest<HTMLElement>('.js-task-list-container')!\n  enableTaskList(container)\n  updateProgress(container)\n})\n\n// Add the task list conversion button to the container\nobserve('.js-convert-tasklist-to-block-enabled .contains-task-list', function (el) {\n  const parentContainer = findTopLevelTasklistContainer(el)\n  if (!parentContainer) return\n  const alreadyContainsButton = Array.from(parentContainer.children).some(child =>\n    child.classList.contains('task-list-item-convert-container'),\n  )\n  if (alreadyContainsButton) return\n  const template = el.ownerDocument.querySelector<HTMLTemplateElement>('.js-convert-to-block-template')\n  const clonedNode = template?.content.cloneNode(true)\n  if (!clonedNode) return\n  parentContainer.appendChild(clonedNode)\n})\n\non('task-lists-move', 'task-lists', function (event) {\n  const {src, dst} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, 'reordered', {operation: 'move', src, dst})\n})\n\non('task-lists-check', 'task-lists', function (event) {\n  const {position, checked} = event.detail\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `checked:${checked ? 1 : 0}`, {operation: 'check', position, checked})\n})\n\non('click', '.js-convert-to-block-button', function (event) {\n  const parentContainer = findTopLevelTasklistContainer(event.target! as Element)\n  if (!parentContainer) return\n  const taskListContainer = parentContainer.closest('task-lists')\n  if (!taskListContainer) throw new Error('parent not found')\n  const position = listIndex(parentContainer)\n  const container = event.currentTarget.closest<HTMLElement>('.js-task-list-container')!\n  saveTaskList(container, `converted`, {operation: 'convert_to_block', position})\n})\n\nexport function enableTaskList(container: Element) {\n  if (container.querySelector('.js-task-list-field')) {\n    const taskLists = container.querySelectorAll('task-lists')\n    for (const el of taskLists) {\n      if (el instanceof TaskListsElement) {\n        el.disabled = false\n        const buttons = el.querySelectorAll('button')\n        for (const button of buttons) {\n          button.disabled = false\n        }\n      }\n    }\n  }\n}\n\nexport function disableTaskList(container: Element) {\n  for (const el of container.querySelectorAll('task-lists')) {\n    if (el instanceof TaskListsElement) {\n      el.disabled = true\n\n      const buttons = el.querySelectorAll('button')\n      for (const button of buttons) {\n        button.disabled = true\n      }\n    }\n  }\n}\n\n// Persist task list source changes.\n//\n// Adds a hidden tracking input to the form to trigger server-side\n// instrumentation.\nfunction saveTaskList(container: Element, track: string, payload: CheckPayload | MovePayload | ConvertPayload) {\n  const form = container.querySelector<HTMLFormElement>('.js-comment-update')!\n\n  disableTaskList(container)\n  updateProgress(container)\n\n  const previousTracking = form.elements.namedItem('task_list_track')\n  if (previousTracking instanceof Element) previousTracking.remove()\n\n  const previousOperation = form.elements.namedItem('task_list_operation')\n  if (previousOperation instanceof Element) previousOperation.remove()\n\n  const tracking = document.createElement('input')\n  tracking.setAttribute('type', 'hidden')\n  tracking.setAttribute('name', 'task_list_track')\n  tracking.setAttribute('value', track)\n  form.appendChild(tracking)\n\n  const operation = document.createElement('input')\n  operation.setAttribute('type', 'hidden')\n  operation.setAttribute('name', 'task_list_operation')\n  operation.setAttribute('value', JSON.stringify(payload))\n  form.appendChild(operation)\n\n  if (!form.elements.namedItem('task_list_key')) {\n    const field = form.querySelector('.js-task-list-field')!\n    const name = field.getAttribute('name')!\n    const value = name.split('[')[0]!\n    const input = document.createElement('input')\n    input.setAttribute('type', 'hidden')\n    input.setAttribute('name', 'task_list_key')\n    input.setAttribute('value', value)\n    form.appendChild(input)\n  }\n\n  // If the user has ran into a stale error and is now re-submitting, hide it\n  container.classList.remove('is-comment-stale')\n\n  requestSubmit(form)\n}\n\nremoteForm('.js-task-list-container .js-comment-update', async function (form, wants) {\n  const container = form.closest('.js-task-list-container')!\n  const tracking = form.elements.namedItem('task_list_track')\n  if (tracking instanceof Element) tracking.remove()\n\n  const operation = form.elements.namedItem('task_list_operation')\n  if (operation instanceof Element) operation.remove()\n\n  let response\n  try {\n    response = await wants.json()\n  } catch (error) {\n    let data\n    try {\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n      data = JSON.parse(error.response.text)\n    } catch {\n      // Do nothing\n    }\n\n    if (data && data.stale) {\n      const commentField = container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!\n\n      // Prevent the stale value of this field from being persisted (and, eventually, erroneously\n      // restored) if the page is refreshed. We will undo this (and restore the session-resumable\n      // behaviour) if the user clicks the 'Cancel' button to discard the stale edits in this field.\n      commentField.classList.add('session-resumable-canceled')\n      commentField.classList.remove('js-session-resumable')\n      // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n    } else if (error.response.status === 422) {\n      // Do nothing\n    } else {\n      window.location.reload()\n    }\n  }\n\n  if (response) {\n    if (operation) {\n      // Store reordered Markdown source in textarea.\n      if (response.json.source) {\n        container.querySelector<HTMLTextAreaElement>('.js-task-list-field')!.value = response.json.source\n      }\n    }\n    enableTaskList(container)\n    requestAnimationFrame(() => updateProgress(container))\n  }\n})\n\n// This flag specifies whether `beforeinput` handler is called before `input` event\n// This logic is needed because Chrome (Version 86.0.4240.198) has a bug with event.inputType == 'insertText' && event.data == null in textarea\n// But Firefox does not support `beforeinput` yet (as of 9th December 2020)\nlet handleAutocomplete = false\n\n// This flag is used to track if a text composition system (as the helper for JP kanji symbols)\n// has popped up on the screen or not.\n// This is needed because the custom tabbing behavior implemented here interferes with the system element\nlet isIMEVisible = false\n\n// This flag is used to track if the document.execCommand functionality is available\n// This is prefered to use the native execCommand because it allow the use of the undo/redo functionality\nlet canUseExecCommand: boolean | null = null\n\n// This handler will set the handleAutocomplete flag so that all browsers except Firefox can handle the event correctly in autoCompleteOnInput\nfunction tryAutoCompleteOnBeforeInput(ev: Event) {\n  const event = ev as InputEvent\n\n  const isNewLine = event.inputType === 'insertLineBreak'\n  if (!isNewLine) {\n    handleAutocomplete = false\n  } else {\n    handleAutocomplete = true\n  }\n}\n\n// This handler will try autocomplete the text in textarea in all browsers\nfunction autoCompleteOnInput(ev: Event) {\n  const event = ev as InputEvent\n\n  // in Firefox this check will always pass\n  if (!handleAutocomplete) {\n    // this block will be called only in Firefox\n    // when `beforeinput` support is added to Firefox, this whole check can be removed\n    const isNewLine = event.inputType === 'insertLineBreak'\n    if (!isNewLine) return\n  }\n\n  const element = event.target as HTMLInputElement\n  listAutocomplete(element)\n  handleAutocomplete = false\n}\n\nfunction listAutocomplete(element: HTMLInputElement) {\n  const result = autocompletedList(element.value, [element.selectionStart, element.selectionEnd])\n  if (result === undefined) return\n\n  updateElementText(element, result)\n}\n\nfunction updateElementText(element: HTMLInputElement, updatedText: UpdatedText) {\n  if (canUseExecCommand === null || canUseExecCommand === true) {\n    element.contentEditable = 'true'\n    try {\n      handleAutocomplete = false // disable autocomplete due to recursion from insert text event\n      let value = undefined\n      if (updatedText.commandId === Command.insertText) {\n        value = updatedText.autocompletePrefix\n        // check if a specific part of the text should be overwritten\n        if (updatedText.writeSelection[0] !== null && updatedText.writeSelection[1] !== null) {\n          element.selectionStart = updatedText.writeSelection[0]\n          element.selectionEnd = updatedText.writeSelection[1]\n        }\n      } else {\n        // set the selection to delete the current row\n        element.selectionStart = updatedText.selection[0]\n      }\n      canUseExecCommand = document.execCommand(updatedText.commandId, false, value)\n    } catch {\n      canUseExecCommand = false\n    }\n    element.contentEditable = 'false'\n  }\n\n  if (!canUseExecCommand) {\n    try {\n      document.execCommand('ms-beginUndoUnit')\n    } catch {\n      // Do nothing.\n    }\n    element.value = updatedText.text\n    try {\n      document.execCommand('ms-endUndoUnit')\n    } catch {\n      // Do nothing.\n    }\n    element.dispatchEvent(new CustomEvent('input', {bubbles: true, cancelable: true}))\n  }\n\n  if (updatedText.selection[0] != null && updatedText.selection[1] != null) {\n    element.selectionStart = updatedText.selection[0]\n    element.selectionEnd = updatedText.selection[1]\n  }\n}\n\nfunction handleShiftEnter(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n\n  if (event.key === 'Enter' && event.shiftKey && !event.metaKey) {\n    const element = event.target as HTMLInputElement\n\n    const result = addSoftNewline(element.value, [element.selectionStart, element.selectionEnd])\n    if (result === undefined) return\n\n    updateElementText(element, result)\n\n    event.preventDefault()\n    // Trigger size-to-fit (see github/github#15696)\n    fire(element, 'change')\n  }\n  /* eslint-enable @github-ui/ui-commands/no-manual-shortcut-logic */\n}\n\nfunction onCompositionStart() {\n  isIMEVisible = true\n}\n\nfunction onCompositionEnd() {\n  isIMEVisible = false\n}\n\nfunction updateIndentation(ev: Event) {\n  // TODO: Refactor to use data-hotkey\n  /* eslint eslint-comments/no-use: off */\n  /* eslint-disable @github-ui/ui-commands/no-manual-shortcut-logic */\n  if (isIMEVisible) {\n    return\n  }\n\n  const event = ev as KeyboardEvent\n  if (event.key === 'Escape') {\n    deselectText(ev)\n    return\n  }\n\n  if (event.key !== 'Tab') return\n\n  const element = event.target as HTMLInputElement\n\n  const result = indent(element.value, [element.selectionStart, element.selectionEnd], event.shiftKey)\n  if (result === undefined) return\n\n  event.preventDefault()\n\n  updateElementText(element, result)\n}\n\nobserve('.js-task-list-field', {\n  subscribe: el =>\n    compose(\n      fromEvent(el, 'keydown', updateIndentation),\n      fromEvent(el, 'keydown', handleShiftEnter),\n      fromEvent(el, 'beforeinput', tryAutoCompleteOnBeforeInput),\n      fromEvent(el, 'input', autoCompleteOnInput),\n      fromEvent(el, 'compositionstart', onCompositionStart),\n      fromEvent(el, 'compositionend', onCompositionEnd),\n    ),\n})\n\n// subset of https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand#commands\nenum Command {\n  insertText = 'insertText',\n  delete = 'delete',\n}\n\ntype UpdatedText = {\n  text: string\n  autocompletePrefix: string\n  selection: SelectionRange\n  writeSelection: SelectionRange\n  commandId: Command\n}\n\ntype SelectionRange = [number | null, number | null]\n\nconst INDENTATION_RE = /^(\\s*)?/\nexport function addSoftNewline(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const currentLine = lines[lines.length - 1]\n  const match = currentLine?.match(INDENTATION_RE)\n  if (!match) return undefined\n\n  const indentation = match[1] || ''\n  const autocompletePrefix = `\\n${indentation}`\n  return {\n    text: text.substring(0, offset) + autocompletePrefix + text.substring(offset),\n    autocompletePrefix,\n    selection: [offset + autocompletePrefix.length, offset + autocompletePrefix.length],\n    commandId: Command.insertText,\n    writeSelection: [null, null],\n  }\n}\n\n// matches '- ', '* ', '12. ', '- [ ]', '- [x]', `* [ ] `, `* [x] `, '12. [ ] ', '12. [x] '\nconst TASK_LIST_RE = /^(\\s*)([*-]|(\\d+)\\.)\\s(\\[[\\sx]\\]\\s)?/\n\nfunction updateRemainingNumberBullets(text: string, currentNumber: number): string {\n  let lines = text.split('\\n')\n\n  lines = lines.map(line => {\n    // regexp to check if string starts with number\n    if (line.replace(/^\\s+/, '').startsWith(`${currentNumber}.`)) {\n      const result = line.replace(`${currentNumber}`, `${currentNumber + 1}`)\n      currentNumber += 1\n      return result\n    }\n    return line\n  })\n\n  return lines.join('\\n')\n}\n\nexport function autocompletedList(text: string, selection: SelectionRange): UpdatedText | undefined {\n  const offset = selection[0]\n  if (!offset || !text) return undefined\n\n  const lines = text.substring(0, offset).split('\\n')\n  const previousLine = lines[lines.length - 2]\n\n  // Check for task list existence\n  const match = previousLine?.match(TASK_LIST_RE)\n  if (!match) return undefined\n\n  const listPrefix = match[0]\n  const indentation = match[1]\n  const bullet = match[2]\n  const numericBullet = parseInt(match[3]!, 10)\n  const hasCheckbox = Boolean(match[4])\n  const isNumericBullet = !isNaN(numericBullet)\n  const newBullet = isNumericBullet ? `${numericBullet + 1}.` : bullet\n  let newPrefix = `${newBullet} ${hasCheckbox ? '[ ] ' : ''}`\n\n  let currentLineEnd = text.indexOf('\\n', offset)\n  if (currentLineEnd < 0) {\n    currentLineEnd = text.length\n  }\n  const currentLine = text.substring(offset, currentLineEnd)\n  // do not append list item if already present\n  if (currentLine.startsWith(newPrefix)) {\n    newPrefix = ''\n  }\n  /*\n    Autocomplete list element on next line if current line has list element containing text.\n    or there's text on the line after the cursor (|):\n    ```\n    - | some text\n    ```\n    becomes:\n    ```\n    -\n    - | some text\n    ```\n   */\n  const shouldAutocomplete = previousLine!.replace(listPrefix, '').trim().length > 0 || currentLine.trim().length > 0\n  if (shouldAutocomplete) {\n    let autocompletePrefix = `${indentation}${newPrefix}`\n    let autocompletePostfix = text.substring(offset)\n    const autocompletePrefixLength = autocompletePrefix.length\n\n    let writeSelection = [null, null] as SelectionRange\n    const whiteSpaceRegex = /^\\s*$/g\n    let resultText = text.substring(0, offset) + autocompletePrefix + autocompletePostfix\n\n    if (isNumericBullet && !text.substring(offset).match(whiteSpaceRegex)) {\n      autocompletePostfix = updateRemainingNumberBullets(text.substring(offset), numericBullet + 1)\n      autocompletePrefix += autocompletePostfix\n      writeSelection = [offset, offset + autocompletePrefix.length] as SelectionRange\n      resultText = text.substring(0, offset) + autocompletePrefix\n    }\n\n    return {\n      text: resultText,\n      autocompletePrefix,\n      selection: [offset + autocompletePrefixLength, offset + autocompletePrefixLength],\n      commandId: Command.insertText,\n      writeSelection,\n    }\n  } else {\n    // This case clears the autocompleted list element if user hits an enter without adding any text to it.\n    const offsetWithoutPrefix = offset - `\\n${listPrefix}`.length\n    return {\n      autocompletePrefix: '',\n      text: text.substring(0, offsetWithoutPrefix) + text.substring(offset),\n      selection: [offsetWithoutPrefix, offsetWithoutPrefix],\n      commandId: Command.delete,\n      writeSelection: [null, null],\n    }\n  }\n}\n\nexport function indent(text: string, selection: SelectionRange, substract: boolean): UpdatedText | undefined {\n  // Perform indentation manipulations only when more than one character was selected.\n  const selectionStart = selection[0] || 0\n  const selectionEnd = selection[1] || selectionStart\n  if (selection[0] === null || selectionStart === selectionEnd) return undefined\n\n  const startOffset = text.substring(0, selectionStart).lastIndexOf('\\n') + 1\n  const endOffsetPreNormalization = text.indexOf('\\n', selectionEnd - 1)\n  const endOffset = endOffsetPreNormalization > 0 ? endOffsetPreNormalization : text.length - 1\n  const selectedLines = text.substring(startOffset, endOffset).split('\\n')\n\n  let startUpdated = false\n  let selectionStartDiff = 0\n  let selectionEndDiff = 0\n  const updatedSelectedLines: string[] = []\n  for (const line of selectedLines) {\n    const match = line.match(/^\\s*/)\n    if (match) {\n      let indentation = match[0]\n      const lineText = line.substring(indentation.length)\n      if (substract) {\n        const prevLength = indentation.length\n        indentation = indentation.slice(0, -2)\n\n        // Update selectionStart for first line only.\n        selectionStartDiff = startUpdated ? selectionStartDiff : indentation.length - prevLength\n        startUpdated = true\n        selectionEndDiff += indentation.length - prevLength\n      } else {\n        indentation += '  '\n        selectionStartDiff = 2\n        selectionEndDiff += 2\n      }\n      updatedSelectedLines.push(indentation + lineText)\n    }\n  }\n\n  const linesString = updatedSelectedLines.join('\\n')\n  const newText = text.substring(0, startOffset) + linesString + text.substring(endOffset)\n  const newRange: SelectionRange = [\n    Math.max(startOffset, selectionStart + selectionStartDiff),\n    selectionEnd + selectionEndDiff,\n  ]\n  return {\n    text: newText,\n    selection: newRange,\n    autocompletePrefix: linesString,\n    commandId: Command.insertText,\n    writeSelection: [startOffset, endOffset],\n  }\n}\n\nexport function listIndex(list: Element): number {\n  const container = list.closest('task-lists')\n  if (!container) throw new Error('parent not found')\n  // TODO: De-duplicate this query with respect to https://github.com/github/task-lists-element/pull/32/files#diff-bea14c7a32797e69e22afe268a352c644b1286e415a79e1cf35ef9ebea42b3a3R178-R183\n  const lists = Array.from(container.querySelectorAll('ol, ul')).filter(item => {\n    return !item.closest('tracking-block')\n  })\n  return lists.indexOf(list)\n}\n\nfunction deselectText(ev: Event) {\n  const event = ev as KeyboardEvent\n  const element = event.target as HTMLInputElement\n  if (element.selectionDirection === 'backward') {\n    element.selectionEnd = element.selectionStart\n  } else {\n    element.selectionStart = element.selectionEnd\n  }\n}\n\nfunction updateProgress(container: Element) {\n  if (document.querySelectorAll('tracked-issues-progress').length === 0) return\n\n  const isInTimeline = container.closest<HTMLElement>('.js-timeline-item')\n  if (isInTimeline) return\n\n  const checkboxes = container.querySelectorAll<HTMLInputElement>('.js-comment-body [type=checkbox]')\n  const total = checkboxes.length\n  const completed = Array.from(checkboxes).filter(checkbox => checkbox.checked).length\n  const progressComponents = document.querySelectorAll('tracked-issues-progress[data-type=checklist]')\n  for (const progress of progressComponents) {\n    progress.setAttribute('data-completed', String(completed))\n    progress.setAttribute('data-total', String(total))\n  }\n}\n\n// Finds the task-list ul that is furthest up the DOM tree from the given element\nfunction findTopLevelTasklistContainer(listElement: Element): Element | null {\n  let parentLi = listElement.closest<HTMLLIElement>('.contains-task-list')!\n  let nextParent = parentLi\n  // traverse up to find the list item furthest up in the tree, which will allow us to flatten a multi-tiered\n  // tasklist into a single level\n  while (\n    (nextParent = nextParent.parentElement!.closest<HTMLLIElement>('.contains-task-list')!) !== parentLi &&\n    nextParent !== null\n  ) {\n    parentLi = nextParent\n  }\n  return parentLi\n}\n","import {dialog} from '@github-ui/details-dialog'\nimport {fetchSafeDocumentFragment} from '@github-ui/fetch-utils'\n// eslint-disable-next-line no-restricted-imports\nimport {observe} from '@github/selector-observer'\n\nfunction waitForDialogClose(dialogEl: HTMLElement): Promise<unknown> {\n  return new Promise(resolve => {\n    dialogEl.addEventListener('dialog:remove', resolve, {once: true})\n  })\n}\n\nfunction setModalStatus(success: boolean) {\n  const modal = document.querySelector('.sso-modal')\n  if (!modal) return\n\n  modal.classList.remove('success', 'error')\n\n  if (success) modal.classList.add('success')\n  else modal.classList.add('error')\n}\n\nfunction updateExpiresAroundTag(expiresAround: string) {\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n  if (expiryTag) expiryTag.setAttribute('content', expiresAround)\n}\n\n// Asks the user to perform single sign-on for the current organization. SSO\n// take place in a new window so we'll need to set up a way for the other window\n// to tell us when SSO is complete and whether or not it was successful.\nasync function ssoPrompt() {\n  const link = document.querySelector<HTMLLinkElement>('link[rel=sso-modal]')!\n  const prompt = await dialog({content: fetchSafeDocumentFragment(document, link.href), dialogClass: 'sso-modal'})\n\n  let sso = null\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, compat/compat\n  const external: any = window.external\n\n  // Expose callback method for the SSO window to invoke with its status when complete.\n  external.ssoComplete = function (data: {error: boolean; expiresAround: string}) {\n    if (data.error) {\n      sso = false\n      setModalStatus(sso)\n    } else {\n      sso = true\n      setModalStatus(sso)\n      updateExpiresAroundTag(data.expiresAround)\n      window.focus()\n    }\n\n    // Remove the external function now that it's served its purpose\n    external.ssoComplete = null\n  }\n\n  await waitForDialogClose(prompt)\n\n  if (!sso) {\n    throw new Error('sso prompt canceled')\n  }\n}\n\n// Watch for modal complete elements. This is shown as the final step of the\n// single sign-on process that happens in a separate window. Once we see this\n// we know SSO is complete and we can try to tell the original window what the\n// status is before closing the SSO window.\nobserve('.js-sso-modal-complete', function (el) {\n  if (window.opener && window.opener.external.ssoComplete) {\n    const error = el.getAttribute('data-error')\n    const expiresAround = el.getAttribute('data-expires-around')\n\n    window.opener.external.ssoComplete({\n      error,\n      expiresAround,\n    })\n    window.close()\n  } else {\n    const fallback = el.getAttribute('data-fallback-url')\n    if (fallback) window.location.href = fallback\n  }\n})\n\nfunction expiresSoon(expiresTag: Element | null): boolean {\n  if (!(expiresTag instanceof HTMLMetaElement)) return true\n\n  const expiresAround = parseInt(expiresTag.content)\n  const now = Date.now() / 1000\n\n  return now > expiresAround\n}\n\n// Remotely checks the single-sign on status for the current page. If the link tags are\n// not present in the <head>, the current page is not enforced and the status is considered good.\nasync function fetchSsoStatus(): Promise<boolean> {\n  const sessionTag = document.querySelector('link[rel=sso-session]')\n  const expiryTag = document.querySelector('meta[name=sso-expires-around]')\n\n  if (!(sessionTag instanceof HTMLLinkElement)) return true // No SSO enforcement head tags. SSO not enforced.\n  if (!expiresSoon(expiryTag)) return true // Don't bother checking unless we're nearing SSO session expiry\n\n  const url = sessionTag.href\n  const response = await fetch(url, {headers: {Accept: 'application/json', 'X-Requested-With': 'XMLHttpRequest'}})\n  const result: boolean = await response.json()\n  return result\n}\n\nlet activeSsoPrompt: Promise<void> | null = null\n\nfunction clearActiveSsoPrompt() {\n  activeSsoPrompt = null\n}\n\n// Checks to see if the user has a valid single sign-on session for the current\n// page. If not and the page is enforced, it blocks the callback until the user\n// renews their SSO session.\n/* eslint-disable-next-line import/no-anonymous-default-export */\nexport default async function () {\n  const sso = await fetchSsoStatus()\n\n  if (!sso) {\n    if (!activeSsoPrompt) {\n      activeSsoPrompt = ssoPrompt()\n        /* eslint-disable-next-line github/no-then */\n        .then(clearActiveSsoPrompt)\n        /* eslint-disable-next-line github/no-then */\n        .catch(clearActiveSsoPrompt)\n    }\n\n    await activeSsoPrompt\n  }\n}\n","import {fire} from 'delegated-events'\n\ntype Options = {\n  content: DocumentFragment | Promise<DocumentFragment> | Node\n  dialogClass?: string\n  detailsClass?: string\n  labelledBy?: string | null\n  label?: string | null\n  errorMessage?: string | null\n}\n\n// Open the site-wide Details Dialog element.\nexport async function dialog(options: Options): Promise<HTMLElement> {\n  const dialogTemplate = document.querySelector<HTMLTemplateElement>('#site-details-dialog')!\n  const clonedDetails = dialogTemplate.content.cloneNode(true) as Element\n  const details = clonedDetails.querySelector<HTMLElement>('details')!\n  const detailsDialog = details.querySelector<HTMLElement>('details-dialog')!\n  const spinner = details.querySelector<HTMLElement>('.js-details-dialog-spinner')!\n  if (options.detailsClass) details.classList.add(...options.detailsClass.split(' '))\n  if (options.dialogClass) detailsDialog.classList.add(...options.dialogClass.split(' '))\n\n  if (options.label) {\n    detailsDialog.setAttribute('aria-label', options.label)\n  } else if (options.labelledBy) {\n    detailsDialog.setAttribute('aria-labelledby', options.labelledBy)\n  }\n\n  document.body.append(clonedDetails)\n  try {\n    const content = await options.content\n    spinner.remove()\n    detailsDialog.prepend(content)\n  } catch {\n    spinner.remove()\n    // create a span with the error message\n    const errorSpan = document.createElement('span')\n    errorSpan.textContent = options.errorMessage || \"Couldn't load the content\"\n    errorSpan.classList.add('my-6')\n    errorSpan.classList.add('mx-4')\n    detailsDialog.prepend(errorSpan)\n  }\n\n  details.addEventListener('toggle', () => {\n    if (details.hasAttribute('open')) return\n    fire(detailsDialog, 'dialog:remove')\n    details.remove()\n  })\n\n  return detailsDialog\n}\n","//  Get document's HTML Safe nonce.\n//\n// Example:\n//\n//   <meta name=\"html-safe-nonce\" content=\"de43a1f355c711f7f705e4f971964391ac0c8e13\">\nexport function getDocumentHtmlSafeNonces(document: Document): string[] {\n  const nonces = [...document.querySelectorAll<HTMLMetaElement>('meta[name=html-safe-nonce]')].map(meta => meta.content)\n\n  if (nonces.length < 1) {\n    throw new Error('could not find html-safe-nonce on document')\n  }\n  return nonces\n}\n\ninterface Response {\n  headers: Headers\n  status: number\n}\n\nclass ResponseError extends Error {\n  response: Response\n\n  constructor(message: string, response: Response) {\n    super(`${message} for HTTP ${response.status}`)\n    this.response = response\n    this.name = 'ResponseError'\n  }\n}\n\nexport function verifyResponseHtmlSafeNonce(nonces: string[], response: Response, allowJson = false) {\n  const contentType = response.headers.get('content-type') || ''\n  if (!allowJson && !contentType.startsWith('text/html')) {\n    throw new ResponseError(`expected response with text/html, but was ${contentType}`, response)\n  }\n\n  if (allowJson && !(contentType.startsWith('text/html') || contentType.startsWith('application/json'))) {\n    throw new ResponseError(`expected response with text/html or application/json, but was ${contentType}`, response)\n  }\n\n  const responseNonce = response.headers.get('x-html-safe')\n  if (!responseNonce) {\n    throw new ResponseError(`missing X-HTML-Safe nonce`, response)\n  } else if (!nonces.includes(responseNonce)) {\n    throw new ResponseError(`response X-HTML-Safe nonce did not match`, response)\n  }\n}\n","import {getDocumentHtmlSafeNonces, verifyResponseHtmlSafeNonce} from '@github-ui/html-safe-nonce'\nimport {parseHTML} from '@github-ui/parse-html'\n\nexport async function fetchSafeDocumentFragment(\n  document: Document,\n  url: RequestInfo,\n  options?: RequestInit,\n): Promise<DocumentFragment> {\n  const request = new Request(url, options)\n  request.headers.append('X-Requested-With', 'XMLHttpRequest')\n  const response = await self.fetch(request)\n  if (response.status < 200 || response.status >= 300) {\n    throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n  }\n\n  verifyResponseHtmlSafeNonce(getDocumentHtmlSafeNonces(document), response)\n  return parseHTML(document, await response.text())\n}\n\nexport function fetchPoll(\n  url: RequestInfo,\n  options?: RequestInit,\n  timeBetweenRequests = 1000,\n  acceptedStatusCodes = [200],\n  pollStatusCodes = [202],\n): Promise<Response> {\n  return (async function poll(wait: number): Promise<Response> {\n    const request = new Request(url, options)\n    request.headers.append('X-Requested-With', 'XMLHttpRequest')\n    const response = await self.fetch(request)\n\n    if (pollStatusCodes.includes(response.status)) {\n      await new Promise(resolve => setTimeout(resolve, wait))\n      return poll(wait * 1.5)\n    }\n    if (acceptedStatusCodes.includes(response.status)) {\n      return response\n    }\n    if (response.status < 200 || response.status >= 300) {\n      throw new Error(`HTTP ${response.status}${response.statusText || ''}`)\n    }\n    throw new Error(`Unexpected ${response.status} response status from poll endpoint`)\n  })(timeBetweenRequests)\n}\n\ntype RetryResult = Response | 'retry'\ntype FetchRetryOptions = {\n  // Base wait time between retries\n  // this will be multiplied with the current attempt to perform a backoff strategy\n  // Defaults to 500ms\n  wait?: number\n  // List of accepted status codes that should not be retried. Defaults to [200]\n  acceptedStatusCodes?: number[]\n  // Max number of attempts. Defaults to 3\n  max?: number\n  // Current retry attempt. Starts at 0\n  attempt?: number\n}\n\n// Execute a fetch call in a callback and retry it up to `options.max` times\n// Each retry will be delayed `options.wait` * `options.attempt`\nexport async function fetchRetry(\n  url: RequestInfo,\n  fetchOptions?: RequestInit,\n  options?: FetchRetryOptions,\n): Promise<Response> {\n  const {wait = 500, acceptedStatusCodes = [200], max = 3, attempt = 0} = options || {}\n\n  const retry: () => Promise<RetryResult> = async () => {\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          const request = new Request(url, fetchOptions)\n          request.headers.append('X-Requested-With', 'XMLHttpRequest')\n          const response = await self.fetch(request)\n          if (acceptedStatusCodes.includes(response.status) || attempt + 1 === max) {\n            return resolve(response)\n          }\n\n          // The response failed, we indicate that it must be retried\n          resolve('retry')\n        } catch (err) {\n          // Only non successful HTTP status codes are controlled by this retry mechanism\n          // Any other error is propagated\n          reject(err)\n        }\n      }, wait * attempt)\n    })\n  }\n\n  const result = await retry()\n  if (result !== 'retry') {\n    return result\n  }\n\n  return fetchRetry(url, fetchOptions, {wait, acceptedStatusCodes, max, attempt: attempt + 1})\n}\n","// React to elements receiving focus\n//\n// Often we need to apply some behavior to form elements when they start getting\n// interacted with. We could use `observe`, but that can be expensive if there\n// are many such elements on the page, and when we aren't actually interested in\n// those elements until they receive focus.\n//\n// This is a lightweight and preferred alternative to the family of methods\n// from `github/focused` module.\n//\n// Examples\n//\n//   onFocus('.js-widget', element => {\n//     // ...\n//   })\n\nimport SelectorSet from 'selector-set'\n\nlet initialized = false\nconst selectorSet: SelectorSet<(el: HTMLElement) => void> = new SelectorSet()\n\nfunction handleFocus(event: FocusEvent) {\n  const focused = event.target\n  if (focused instanceof HTMLElement && focused.nodeType !== Node.DOCUMENT_NODE) {\n    for (const match of selectorSet.matches(focused)) {\n      match.data.call(null, focused)\n    }\n  }\n}\n\nexport function onFocus(selector: string, fn: (el: HTMLElement) => unknown) {\n  if (!initialized) {\n    initialized = true\n    // We use the \"focus\" event in the capture phase because Firefox\n    // historically had a limitation with \"focusin\" not bubbling.\n    document.addEventListener('focus', handleFocus, true)\n  }\n  selectorSet.add(selector, fn)\n\n  if (document.activeElement instanceof HTMLElement && document.activeElement.matches(selector)) {\n    fn(document.activeElement)\n  }\n}\n\nexport function onKey(\n  eventType: 'keydown' | 'keypress' | 'keyup',\n  selector: string,\n  inputHandler: (event: KeyboardEvent) => unknown,\n) {\n  function blurHandler(event: Event) {\n    const currentTarget = event.currentTarget as HTMLElement\n    if (!currentTarget) return\n    currentTarget.removeEventListener(eventType, inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener(eventType, inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n\nexport function onInput(selector: string, inputHandler: EventListener) {\n  function blurHandler(event: Event) {\n    const {currentTarget} = event\n    if (!currentTarget) return\n\n    currentTarget.removeEventListener('input', inputHandler)\n    currentTarget.removeEventListener('blur', blurHandler)\n  }\n\n  onFocus(selector, function (field) {\n    field.addEventListener('input', inputHandler)\n    field.addEventListener('blur', blurHandler)\n  })\n}\n","export const SOFT_NAV_STATE = Object.freeze({\n  INITIAL: 'soft-nav:initial',\n  START: 'soft-nav:start',\n  REPLACE_MECHANISM: 'soft-nav:replace-mechanism',\n  SUCCESS: 'soft-nav:success',\n  ERROR: 'soft-nav:error',\n  FRAME_UPDATE: 'soft-nav:frame-update',\n  END: 'soft-nav:end',\n  RENDER: 'soft-nav:render',\n  PROGRESS_BAR: {\n    START: 'soft-nav:progress-bar:start',\n    END: 'soft-nav:progress-bar:end',\n  },\n})\n"],"names":["enableTaskList","container","querySelector","el","querySelectorAll","TaskListsElement","button","disabled","disableTaskList","saveTaskList","track","payload","form","updateProgress","previousTracking","elements","namedItem","Element","remove","previousOperation","tracking","document","createElement","setAttribute","appendChild","operation","JSON","stringify","value","name","getAttribute","split","input","classList","requestSubmit","observe","closest","parentContainer","findTopLevelTasklistContainer","Array","from","children","some","child","contains","template","ownerDocument","clonedNode","content","cloneNode","on","event","src","dst","detail","currentTarget","position","checked","target","listIndex","remoteForm","wants","response","json","error","data","parse","text","stale","commentField","add","status","window","location","reload","source","requestAnimationFrame","handleAutocomplete","isIMEVisible","canUseExecCommand","tryAutoCompleteOnBeforeInput","ev","inputType","autoCompleteOnInput","listAutocomplete","element","result","autocompletedList","selection","offset","lines","substring","previousLine","length","match","TASK_LIST_RE","listPrefix","indentation","bullet","numericBullet","parseInt","hasCheckbox","Boolean","isNumericBullet","isNaN","newBullet","newPrefix","currentLineEnd","indexOf","currentLine","startsWith","replace","trim","autocompletePrefix","autocompletePostfix","autocompletePrefixLength","writeSelection","resultText","currentNumber","map","line","join","commandId","offsetWithoutPrefix","selectionStart","selectionEnd","undefined","updateElementText","updatedText","contentEditable","execCommand","dispatchEvent","CustomEvent","bubbles","cancelable","handleShiftEnter","key","shiftKey","metaKey","addSoftNewline","INDENTATION_RE","preventDefault","fire","onCompositionStart","onCompositionEnd","updateIndentation","deselectText","selectionDirection","indent","substract","startOffset","lastIndexOf","endOffsetPreNormalization","endOffset","selectedLines","startUpdated","selectionStartDiff","selectionEndDiff","updatedSelectedLines","lineText","prevLength","slice","push","linesString","Math","max","subscribe","compose","fromEvent","Command","list","lists","filter","item","checkboxes","total","completed","checkbox","progress","String","listElement","parentLi","nextParent","parentElement","setModalStatus","success","modal","ssoPrompt","link","prompt","dialog","fetchSafeDocumentFragment","href","dialogClass","sso","external","ssoComplete","updateExpiresAroundTag","expiresAround","expiryTag","focus","Promise","resolve","dialogEl","addEventListener","once","fetchSsoStatus","sessionTag","HTMLLinkElement","expiresSoon","expiresTag","HTMLMetaElement","now","url","fetch","headers","Accept","opener","close","fallback","activeSsoPrompt","clearActiveSsoPrompt","then","catch","options","clonedDetails","dialogTemplate","details","detailsDialog","spinner","detailsClass","label","labelledBy","body","append","prepend","errorSpan","textContent","errorMessage","hasAttribute","ResponseError","Error","constructor","message","request","Request","self","statusText","verifyResponseHtmlSafeNonce","nonces","allowJson","contentType","get","responseNonce","includes","getDocumentHtmlSafeNonces","meta","parseHTML","fetchPoll","timeBetweenRequests","acceptedStatusCodes","pollStatusCodes","poll","wait","setTimeout","fetchRetry","fetchOptions","attempt","retry","reject","err","initialized","selectorSet","SelectorSet","handleFocus","focused","HTMLElement","nodeType","Node","DOCUMENT_NODE","matches","call","onFocus","selector","fn","activeElement","onKey","eventType","inputHandler","blurHandler","removeEventListener","field","onInput","SOFT_NAV_STATE","Object","freeze","INITIAL","START","REPLACE_MECHANISM","SUCCESS","ERROR","FRAME_UPDATE","END","RENDER","PROGRESS_BAR"],"sourceRoot":""}