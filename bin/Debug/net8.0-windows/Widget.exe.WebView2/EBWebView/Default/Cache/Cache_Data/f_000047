{"version":3,"file":"chunk-ui_packages_hydro-analytics_hydro-analytics_ts-ui_packages_jump-to-element_model_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/client-env/client-env.ts","ui/packages/document-ready/document-ready.ts","ui/packages/feature-flags/feature-flags.ts","ui/packages/hydro-analytics/hydro-analytics.ts","ui/packages/internal-api-insights/index.ts","ui/packages/jump-to-element/model.ts","ui/packages/jump-to-element/page-views.ts","ui/packages/runtime-environment/runtime-environment.ts","ui/packages/safe-storage/safe-storage.ts","ui/packages/ssr-utils/ssr-globals.ts","ui/packages/ssr-utils/ssr.ts","ui/packages/stats/stats.ts"],"sourcesContent":["export interface ClientEnvironment {\n  readonly locale: string\n  readonly featureFlags: string[]\n  readonly login?: string\n}\n\nlet env: ClientEnvironment | undefined\n\nexport function getEnv() {\n  if (!env) {\n    throw new Error(\n      'Client env was requested before it was loaded. This likely means you are attempting to use client env at the module level in SSR, which is not supported. Please move your client env usage into a function.',\n    )\n  }\n\n  return env\n}\n\nexport function getLocale() {\n  return env?.locale ?? 'en-US'\n}\n\nexport function isLoggedIn() {\n  return !!getEnv().login\n}\n\nexport function getCurrentUserLogin() {\n  return getEnv().login\n}\n\nfunction loadEnv() {\n  if (typeof document !== 'undefined') {\n    const envTag = document.getElementById('client-env')\n    if (envTag) {\n      try {\n        env = JSON.parse(envTag.textContent || '')\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error('Error parsing client-env', error)\n      }\n    }\n  }\n}\n\n// Automatically load the env on initial page load\nloadEnv()\n\n// This is a special helper method for setting the env in the SSR environment only\nexport function setClientEnvForSsr(clientEnv: ClientEnvironment | undefined) {\n  env = clientEnv\n}\n\n// This env object is used as a default for tests only and is not included in production builds\nexport const clientEnvForTests: ClientEnvironment = {\n  locale: 'en',\n  featureFlags: ['test_flag'],\n}\n\nexport function _resetForTests({loadNewEnv, forceUndefined}: {loadNewEnv: boolean; forceUndefined?: boolean}) {\n  // forget the current env\n  env = forceUndefined ? undefined : clientEnvForTests\n\n  if (loadNewEnv) {\n    // load the latest env\n    loadEnv()\n  }\n}\n","import {ssrSafeDocument, ssrSafeWindow} from '@github-ui/ssr-utils'\n\n// Check if document has passed interactive state.\n//\n// The document has finished loading and the document has been parsed but\n// sub-resources such as images, stylesheets and frames are still loading.\n// The state indicates that the DOMContentLoaded event has been fired.\nexport const ready: Promise<void> = (function () {\n  if (ssrSafeDocument?.readyState === 'interactive' || ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise<void>(resolve => {\n      ssrSafeDocument?.addEventListener('DOMContentLoaded', () => {\n        resolve()\n      })\n    })\n  }\n})()\n\n// Check if document has passed loaded state.\n//\n// The document and all sub-resources have finished loading. The state\n// indicates that the load event has been fired.\nexport const loaded: Promise<unknown> = (function () {\n  if (ssrSafeDocument?.readyState === 'complete') {\n    return Promise.resolve()\n  } else {\n    return new Promise(resolve => {\n      ssrSafeWindow?.addEventListener('load', resolve)\n    })\n  }\n})()\n","import memoize from '@github/memoize'\nimport {getEnv} from '@github-ui/client-env'\nimport {IS_SERVER} from '@github-ui/ssr-utils'\n\nfunction getEnabledFeaturesSet(): Set<string> {\n  const features = getEnv().featureFlags\n  const featuresUpperCase = features.map(feature => feature.toLowerCase())\n  return new Set<string>(featuresUpperCase)\n}\n\nconst featuresSet =\n  IS_SERVER || process.env.NODE_ENV === 'test' ? getEnabledFeaturesSet : memoize(getEnabledFeaturesSet)\n\nexport function getEnabledFeatures(): string[] {\n  return Array.from(featuresSet())\n}\n\nexport function isFeatureEnabled(name: string): boolean {\n  return featuresSet().has(name.toLowerCase())\n}\n\n//exported to allow mocking in tests\nconst featureFlag = {isFeatureEnabled}\n\nexport {featureFlag}\n","import {AnalyticsClient, getOptionsFromMeta} from '@github/hydro-analytics-client'\nimport type {Context} from '@github/hydro-analytics-client'\nimport safeStorage from '@github-ui/safe-storage'\nimport {isStaff} from '@github-ui/stats'\nconst {getItem} = safeStorage('localStorage')\n\ndeclare const process: {\n  env: {\n    NODE_ENV: string\n  }\n}\n\nconst dimensionPrefix = 'dimension_'\nlet hydroAnalyticsClient: AnalyticsClient | undefined\n\nconst MARKETING_PARAMS = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content', 'scid']\n\ntry {\n  const options = getOptionsFromMeta('octolytics')\n\n  // Remove the base context because meta tags can change as the user navigates with Turbo\n  // These will be folded in for each event & page view\n  delete options.baseContext\n\n  hydroAnalyticsClient = new AnalyticsClient(options)\n} catch {\n  // Failed to get options from meta tags.  This most likely means analytics are disabled.\n}\n\nfunction extendBaseContext(context?: Context) {\n  const baseContext = getOptionsFromMeta('octolytics').baseContext || {}\n\n  if (baseContext) {\n    delete baseContext.app_id\n    delete baseContext.event_url\n    delete baseContext.host\n\n    for (const [key, value] of Object.entries(baseContext)) {\n      // some octolytics meta tags are prefixed with dimension-, which we don't need with the new hydro-analytics-client\n      if (key.startsWith(dimensionPrefix)) {\n        baseContext[key.replace(dimensionPrefix, '')] = value\n        delete baseContext[key]\n      }\n    }\n  }\n\n  const visitorMeta = document.querySelector<HTMLMetaElement>('meta[name=visitor-payload]')\n  if (visitorMeta) {\n    const visitorHash = JSON.parse(atob(visitorMeta.content))\n    Object.assign(baseContext, visitorHash)\n  }\n\n  const urlParams = new URLSearchParams(window.location.search)\n  for (const [key, value] of urlParams) {\n    if (MARKETING_PARAMS.includes(key.toLowerCase())) {\n      baseContext[key] = value\n    }\n  }\n\n  // Include additional context from the page\n  baseContext.staff = isStaff().toString()\n\n  return Object.assign(baseContext, context)\n}\n\nexport function sendPageView(context?: Context) {\n  hydroAnalyticsClient?.sendPageView(extendBaseContext(context))\n}\n\nexport function sendEvent(type: string, context: Record<string, string | number | boolean | undefined | null> = {}) {\n  const service = document.head?.querySelector<HTMLMetaElement>('meta[name=\"current-catalog-service\"]')?.content\n\n  const cleanContext: Context = service ? {service} : {}\n\n  for (const [key, value] of Object.entries(context)) {\n    if (value !== undefined && value !== null) {\n      cleanContext[key] = `${value}`\n    }\n  }\n\n  if (hydroAnalyticsClient) {\n    const typeWithFallback = type || 'unknown'\n    const fullContext = extendBaseContext(cleanContext)\n    hydroAnalyticsClient.sendEvent(typeWithFallback, extendBaseContext(cleanContext))\n\n    if (process.env.NODE_ENV === 'development') {\n      debugSendEvent(typeWithFallback, fullContext)\n    }\n  }\n}\n\nexport function stringifyObjectValues(obj: object) {\n  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [k, JSON.stringify(v)]))\n}\n\nfunction debugSendEvent(type: string, context: Context) {\n  if (getItem('hydro-debug.send-event') === 'true') {\n    // eslint-disable-next-line no-console\n    console.group('[hydro-debug.send-event]')\n    // eslint-disable-next-line no-console\n    console.log({type, context})\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {ssrSafeWindow, ssrSafeLocation} from '@github-ui/ssr-utils'\n\n// TODO: do not export those constants and instead provide functions to push and read data\nexport const TraceDataKey = 'GraphQLTraces'\nexport const TraceDataRefreshCallbackKey = 'GraphQLTracingRefresh'\n\nexport const disabledClusters = getDisabledClusters()\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function reportTraceData(json: any) {\n  if (!ssrSafeWindow) return\n  if (!isTracingEnabled()) return\n  if (!json) return\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const rootWindowContent = ssrSafeWindow as {[key: string]: any} | undefined\n\n  if (rootWindowContent && !rootWindowContent[TraceDataKey]) {\n    rootWindowContent[TraceDataKey] = []\n  }\n\n  if (rootWindowContent && json['__trace']) {\n    rootWindowContent[TraceDataKey].push(json['__trace'])\n    if (typeof rootWindowContent[TraceDataRefreshCallbackKey] === 'function') {\n      rootWindowContent[TraceDataRefreshCallbackKey]()\n    }\n  }\n}\n\nexport function isTracingEnabled() {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const rootWindowContent = ssrSafeWindow as {[key: string]: any} | undefined\n\n  return (\n    new URLSearchParams(ssrSafeLocation.search).get('_tracing') === 'true' ||\n    (rootWindowContent && rootWindowContent[TraceDataKey] !== undefined)\n  )\n}\n\nfunction clustersDisabled() {\n  return disabledClusters.length > 0\n}\n\nexport function getInsightsUrl(url: string) {\n  if (!isTracingEnabled() && !clustersDisabled()) return url\n\n  const urlObject = new URL(url, ssrSafeLocation.origin)\n\n  if (isTracingEnabled()) {\n    urlObject.searchParams.set('_tracing', 'true')\n  }\n\n  if (clustersDisabled()) {\n    urlObject.searchParams.set('disable_clusters', disabledClusters.join(','))\n  }\n\n  return urlObject.pathname + urlObject.search\n}\n\nfunction getDisabledClusters() {\n  return decodeURIComponent(new URLSearchParams(ssrSafeLocation.search).get('disable_clusters') || '')\n    .split(',')\n    .filter(c => c !== '')\n}\n\nexport function isClusterDisabled(cluster: string) {\n  return disabledClusters.indexOf(cluster) > -1\n}\n\nexport function toggleClusterState(cluster: string) {\n  const index = disabledClusters.indexOf(cluster)\n\n  if (index > -1) {\n    disabledClusters.splice(index, 1)\n  } else {\n    disabledClusters.push(cluster)\n  }\n\n  const params = new URLSearchParams(ssrSafeLocation.search)\n  params.set('disable_clusters', disabledClusters.join(','))\n\n  const url = ssrSafeLocation\n  url.search = params.toString()\n}\n","import memoize from '@github/memoize'\nimport {reportTraceData} from '@github-ui/internal-api-insights'\nimport {buildProjectKey, buildRepositoryKey, buildTeamKey, getPageViewsMap} from './page-views'\n\nconst MAX_PAGE_VIEWS_TO_SEND_TO_SERVER = 10\n\nexport type Suggestion = {\n  avatarUrl: string | null\n  databaseId: number\n  name: string\n  number: number | null\n  owner: {name: string; __typename: string} | null\n  path: string\n  rank: number\n  type: 'Project' | 'Repository' | 'Team'\n  pageKey: string\n}\n\ntype ErrorResponse = {\n  data: {\n    errors: unknown[]\n  }\n}\ntype SuccessResponse = {\n  data: {\n    suggestions: {\n      nodes: Array<Suggestion | null>\n    }\n  }\n}\nexport type SuggestionsResponse = ErrorResponse | SuccessResponse\n\nexport function getSuggestionsRequestData(maxPageViews: number): FormData {\n  const data = new FormData()\n  for (const pageKey of Object.keys(getPageViewsMap()).slice(0, maxPageViews)) {\n    data.append('variables[pageViews][]', pageKey)\n  }\n\n  return data\n}\n\nexport function parseSuggestionsResponse(response: SuggestionsResponse): Suggestion[] {\n  if ('errors' in response.data) return []\n\n  let i = 1\n  const suggestions = []\n  for (const suggestion of response.data.suggestions.nodes) {\n    if (suggestion == null) continue\n    // Fill in the rank as reported by the server.\n    suggestion.rank = i++\n    suggestion.pageKey = pageKeyFromSuggestion(suggestion)\n    if (suggestion.type === 'Team') {\n      suggestion.name = `@${suggestion.name}`\n    }\n    suggestions.push(suggestion)\n  }\n\n  return suggestions\n}\n\nexport function buildSearchURL(searchPath: string, queryText: string): string {\n  const url = new URL(searchPath, window.location.origin)\n  const searchParams = new URLSearchParams(url.search.slice(1))\n\n  searchParams.set('q', queryText)\n\n  // persist the \"type\" of the search results page if there is one\n  const searchType = new URLSearchParams(window.location.search).get('type')\n  if (searchType) {\n    searchParams.set('type', searchType)\n  }\n\n  url.search = searchParams.toString()\n  return url.toString()\n}\n\nexport function updateSearchURL(queryText: string, href: string): string {\n  const url = new URL(href, window.location.origin)\n  const searchParams = new URLSearchParams(url.search.slice(1))\n\n  if (searchParams.get('q')) {\n    searchParams.set('q', queryText)\n  }\n\n  url.search = searchParams.toString()\n  return url.toString()\n}\n\nfunction pageKeyFromSuggestion(suggestion: Suggestion): string {\n  let key: string\n  const [ownerLogin, repositoryName] = suggestion.name.split('/') || []\n  switch (suggestion.type) {\n    case 'Project':\n      if (!suggestion.owner) throw new Error('Project owner is required')\n      key = buildProjectKey(suggestion.owner.name, `${suggestion.number}`)\n      break\n    case 'Repository':\n      if (!ownerLogin || !repositoryName) throw new Error('Repository owner and name are required')\n      key = buildRepositoryKey(ownerLogin, repositoryName)\n      break\n    case 'Team':\n      if (!ownerLogin || !repositoryName) throw new Error('Team owner and name are required')\n      key = buildTeamKey(ownerLogin, repositoryName)\n      break\n    default:\n      throw new Error(`Invalid Suggestion type: ${suggestion.type}`)\n  }\n  return key\n}\n\nconst suggestionsCache = new Map()\nexport function clearSuggestionsCache() {\n  suggestionsCache.clear()\n}\n\nasync function fetchSuggestions(url: string, token: string): Promise<Suggestion[]> {\n  const data = getSuggestionsRequestData(MAX_PAGE_VIEWS_TO_SEND_TO_SERVER)\n  data.set('_method', 'GET') // Allow this request to be treated as a GET and query DB replica\n\n  let result: Suggestion[] = []\n\n  const fetchUrl = new URL(url, window.location.origin)\n\n  if (location.search.match(/_tracing=true/)) {\n    fetchUrl.searchParams.set('graphql_query_trace', 'true')\n  }\n\n  const response = await fetch(fetchUrl.href, {\n    method: 'POST',\n    mode: 'same-origin',\n    body: data,\n    headers: {\n      Accept: 'application/json',\n      'Scoped-CSRF-Token': token,\n      'X-Requested-With': 'XMLHttpRequest',\n    },\n  })\n\n  if (response.ok) {\n    const jsonResponse = await response.json()\n    reportTraceData(jsonResponse)\n    result = parseSuggestionsResponse(jsonResponse)\n  }\n\n  // Hack to inject custom commands\n  const hiddenSearchCommandsInput = document.querySelector('.js-search-commands')\n  if (hiddenSearchCommandsInput instanceof HTMLInputElement) {\n    const jsonString = hiddenSearchCommandsInput.value\n    let parsedSearchCommands = []\n    try {\n      parsedSearchCommands = JSON.parse(jsonString).commands\n    } catch {\n      // noop\n    }\n    result = result.concat(parsedSearchCommands)\n  }\n\n  return result\n}\n\nlet fetchSuggestionsLastUsedAt = 0\nconst memoizedFetchSuggestions = memoize(fetchSuggestions, {cache: suggestionsCache})\n\n// Fetch entire list of possible suggestions from the server.\nexport async function getSuggestions(field: HTMLElement): Promise<Suggestion[]> {\n  const url = field.getAttribute('data-jump-to-suggestions-path')\n  if (!url) throw new Error('could not get jump to suggestions path')\n  const token = findNextElementSibling(field, 'js-data-jump-to-suggestions-path-csrf') as HTMLInputElement\n  if (!token) return []\n\n  // We don't want to fetch the same results more than once, but we also don't want to use stale results, so we forget the whole cache after 5 sec.\n  // Expiring each entry separately would be overkill for this simple case\n  if (Date.now() - fetchSuggestionsLastUsedAt > 5000) {\n    clearSuggestionsCache()\n  }\n  fetchSuggestionsLastUsedAt = Date.now()\n  return memoizedFetchSuggestions(url, token.value)\n}\n\nexport default function findNextElementSibling(element: HTMLElement, className: string): HTMLElement | null {\n  const nextSibling = element.nextElementSibling\n  if (nextSibling instanceof HTMLElement) {\n    if (nextSibling.classList.contains(className)) return nextSibling\n    return findNextElementSibling(nextSibling, className)\n  }\n  return null\n}\n","type PageViewSummary = {\n  lastVisitedAt: number\n  visitCount: number\n}\n\nexport type PageViews = {[page_key: string]: PageViewSummary}\n\nconst TEAM_PAGE_REGEX = /^\\/orgs\\/([a-z0-9-]+)\\/teams\\/([\\w-]+)/\n\n// Of course this list is incomplete, but it should be good enough for the purposes of this prototype.\nconst REPOSITORY_PAGE_REGEXES = [\n  // This will overcount some things, but since every page view is ultimately compared to entities\n  // we can jump to it should be fine. Of course if we ever tried to add users or orgs to this it\n  // would break.\n  /^\\/([^/]+)\\/([^/]+)\\/?$/,\n\n  /^\\/([^/]+)\\/([^/]+)\\/blob/,\n  /^\\/([^/]+)\\/([^/]+)\\/tree/,\n  /^\\/([^/]+)\\/([^/]+)\\/issues/,\n  /^\\/([^/]+)\\/([^/]+)\\/pulls?/,\n  /^\\/([^/]+)\\/([^/]+)\\/pulse/,\n]\n\nconst PROJECT_PAGE_REGEXES = [\n  ['organization', /^\\/orgs\\/([a-z0-9-]+)\\/projects\\/([0-9-]+)/],\n  ['repository', /^\\/([^/]+)\\/([^/]+)\\/projects\\/([0-9-]+)/],\n] as const\n\nconst MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE = 100\n\nexport function logPageView(path: string) {\n  const teamPageMatch = path.match(TEAM_PAGE_REGEX)\n  const [_teamMatch, organizationLogin, teamSlug] = teamPageMatch || []\n  if (typeof organizationLogin === 'string' && typeof teamSlug === 'string') {\n    logPageViewByKey(buildTeamKey(organizationLogin, teamSlug))\n    return\n  }\n\n  for (const [ownerType, projectRegex] of PROJECT_PAGE_REGEXES) {\n    const projectPageMatch = path.match(projectRegex)\n    if (projectPageMatch) {\n      const [_projectMatch, ownerSlug, orgNumber, repoNumber] = projectPageMatch\n      let owner\n      let number\n\n      switch (ownerType) {\n        case 'organization':\n          owner = ownerSlug\n          number = orgNumber\n          break\n        case 'repository':\n          owner = `${ownerSlug}/${orgNumber}`\n          number = repoNumber\n          break\n        default:\n        // Should never get here.\n      }\n      if (owner && number) {\n        logPageViewByKey(buildProjectKey(owner, number))\n      }\n      return\n    }\n  }\n\n  for (const repositoryPageRegex of REPOSITORY_PAGE_REGEXES) {\n    const repositoryPageMatch = path.match(repositoryPageRegex)\n    if (repositoryPageMatch) {\n      const [_match, ownerLogin, name] = repositoryPageMatch\n      if (typeof ownerLogin !== 'string' || typeof name !== 'string') return\n      logPageViewByKey(buildRepositoryKey(ownerLogin, name))\n      return\n    }\n  }\n}\n\n// Limits localStorage entries to 100 MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE\nfunction limitedPageViews(pageViews: PageViews) {\n  const keys = Object.keys(pageViews)\n  if (keys.length <= MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE) {\n    return pageViews\n  }\n  const scorePage = scorer(pageViews)\n  const ranked = keys.sort((a, b) => scorePage(b) - scorePage(a)).slice(0, MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE / 2)\n  return Object.fromEntries(\n    ranked.map(key => {\n      if (typeof pageViews[key] === 'undefined') {\n        throw new Error(`pageViews[${key}] is undefined`)\n      }\n      return [key, pageViews[key]]\n    }),\n  )\n}\n\nfunction logPageViewByKey(key: string) {\n  const views = getPageViewsMap()\n  const now = currentEpochTimeInSeconds()\n  const hit = views[key] || {lastVisitedAt: now, visitCount: 0}\n  hit.visitCount += 1\n  hit.lastVisitedAt = now\n  views[key] = hit\n  setPageViewsMap(limitedPageViews(views))\n}\n\nfunction currentEpochTimeInSeconds(): number {\n  return Math.floor(Date.now() / 1000)\n}\n\nexport function buildTeamKey(organizationLogin: string, teamSlug: string): string {\n  return `team:${organizationLogin}/${teamSlug}`\n}\n\nexport function buildRepositoryKey(ownerLogin: string, name: string): string {\n  return `repository:${ownerLogin}/${name}`\n}\n\nexport function buildProjectKey(ownerSlug: string, number: string): string {\n  return `project:${ownerSlug}/${number}`\n}\n\nconst PAGE_VIEW_KEY_REGEX = /^(team|repository|project):[^/]+\\/[^/]+(\\/([^/]+))?$/\nconst VIEWS_KEY = 'jump_to:page_views'\n\nfunction setPageViewsMap(views: PageViews) {\n  setItem(VIEWS_KEY, JSON.stringify(views))\n}\n\nexport function getPageViewsMap(): PageViews {\n  const rawData = getItem(VIEWS_KEY)\n  if (!rawData) return {}\n\n  let json\n  try {\n    json = JSON.parse(rawData)\n  } catch {\n    // Clear localStorage since we know it's bad\n    setPageViewsMap({})\n    return {}\n  }\n\n  const pageViewMap: PageViews = {}\n  for (const key in json) {\n    if (key.match(PAGE_VIEW_KEY_REGEX)) {\n      pageViewMap[key] = json[key]\n    }\n  }\n  return pageViewMap\n}\n\nfunction setItem(key: string, value: string) {\n  try {\n    window.localStorage.setItem(key, value)\n  } catch {\n    // Storage quota exceeded.\n  }\n}\n\nfunction getItem(key: string): string | null {\n  try {\n    return window.localStorage.getItem(key)\n  } catch {\n    // Storage unavailable.\n    return null\n  }\n}\n\nconst FEATURE_WEIGHTS = {frequency: 0.6, recency: 0.4}\n\nfunction sortBy<T>(items: T[], map: (item: T) => number): T[] {\n  return items.sort((a, b) => map(a) - map(b))\n}\n\ntype Scorer = (pageKey: string) => number\nexport function scorer(pageViews: PageViews): Scorer {\n  const frequencies = frequencyMap(pageViews)\n  const recencies = recencyMap(pageViews)\n  return function (pageKey: string): number {\n    return score(frequencies.get(pageKey) || 0, recencies.get(pageKey) || 0)\n  }\n}\n\nfunction score(frequency: number, recency: number): number {\n  return frequency * FEATURE_WEIGHTS.frequency + recency * FEATURE_WEIGHTS.recency\n}\n\n// Scores a relative frequency in the interval [0, 1] where higher means more frequent.\nfunction frequencyMap(pageViews: PageViews): Map<string, number> {\n  const totalVisits = [...Object.values(pageViews)].reduce((total, view) => total + view.visitCount, 0)\n  return new Map(\n    Object.keys(pageViews).map(pageKey => {\n      if (pageViews[pageKey] === undefined) throw new Error(`pageViews[${pageKey}] is undefined`)\n      return [pageKey, pageViews[pageKey].visitCount / totalVisits]\n    }),\n  )\n}\n\n// Scores a relative recency value in the interval [0, 1] where higher means more recent.\nfunction recencyMap(pageViews: PageViews): Map<string, number> {\n  const recencyList = sortBy([...Object.keys(pageViews)], key => pageViews[key]?.lastVisitedAt || 0)\n  const totalUniqueVisits = recencyList.length\n  return new Map(recencyList.map((key, index) => [key, (index + 1) / totalUniqueVisits]))\n}\n","import memoize from '@github/memoize'\nimport {ssrSafeDocument} from '@github-ui/ssr-utils'\n\nconst runtimeEnvironment = memoize(githubEnvironment)\n\n// return the github instance environment\n// if dotcom, returns 'dotcom'\n// if enterprise, returns 'enterprise'\nfunction githubEnvironment(): string {\n  return ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"runtime-environment\"]')?.content || ''\n}\n\nexport const isEnterprise = memoize(isEnterpriseEnvironment)\nfunction isEnterpriseEnvironment(): boolean {\n  return runtimeEnvironment() === 'enterprise'\n}\n\n// This is the \"bundler\" that built the client-side assets, e.g. \"webpack\"\nexport const bundler = typeof BUNDLER !== 'undefined' ? BUNDLER : undefined\n","import {ssrSafeWindow} from '@github-ui/ssr-utils'\nimport {sendStats} from '@github-ui/stats'\n\ntype StorageBackend = 'sessionStorage' | 'localStorage'\n\n/**\n * An implementation of the Storage API that throws away all data.  Used in\n * cases when the requested Storage backend is not available.\n */\nclass NoOpStorage {\n  getItem() {\n    return null\n  }\n\n  setItem() {\n    return undefined\n  }\n\n  removeItem() {\n    return undefined\n  }\n\n  clear() {\n    return undefined\n  }\n\n  key() {\n    return null\n  }\n\n  get length() {\n    return 0\n  }\n}\n\ntype SafeStorageOptions = {\n  /** Callers may opt not to suppress quota errors thrown on set in case they rely on recieving them. */\n  throwQuotaErrorsOnSet: boolean\n  /** The amount of time the value should remain in storage, in milliseconds */\n  ttl?: number\n  /** Don't send stats in CI */\n  sendCacheStats?: boolean\n}\n\n/**\n * Safely access Storage items by wrapping a Storage instance\n * (localStorage or sessionStorage) with safe versions of its API\n * methods.  Callers may opt not to suppress quota errors thrown on\n * set in case they rely on recieving them.\n */\nexport default function safeStorage<T = string>(\n  storageKey: StorageBackend,\n  options: SafeStorageOptions = {throwQuotaErrorsOnSet: false},\n  global = ssrSafeWindow,\n  deserialize: (value: string) => T = value => value as unknown as T,\n  serialize: (value: T) => string = (value: T) => value as unknown as string,\n) {\n  let storage: Storage\n  try {\n    if (!global) {\n      // in an SSR environment, use noop storage\n      throw new Error()\n    }\n\n    storage = global[storageKey] || new NoOpStorage()\n  } catch {\n    storage = new NoOpStorage()\n  }\n\n  const {throwQuotaErrorsOnSet} = options\n\n  function emitStats(key: PlatformBrowserIncrementKey) {\n    if (options.sendCacheStats) {\n      sendStats({incrementKey: key})\n    }\n  }\n\n  /**  Safely get storage item. Returns `null` if the item is older than the provided ttl */\n  function getItem(key: string, now: number = Date.now()): T | null {\n    try {\n      const value = storage.getItem(key)\n      if (!value) {\n        return null\n      }\n      const expiryKey = `${key}:expiry`\n      const expiry = Number(storage.getItem(expiryKey))\n      if (expiry && now > expiry) {\n        removeItem(key)\n        removeItem(expiryKey)\n        emitStats('SAFE_STORAGE_VALUE_EXPIRED')\n        return null\n      } else {\n        emitStats('SAFE_STORAGE_VALUE_WITHIN_TTL')\n        return deserialize(value)\n      }\n    } catch {\n      // Ignore browser private mode error.\n      return null\n    }\n  }\n\n  /**\n   * Safely set storage item.\n   * If `ttl` is provided, set an expiry time for the item under the key `${key}:expiry`\n   * This function will be called\n   */\n  function setItem(key: string, value: T, now: number = Date.now()) {\n    try {\n      storage.setItem(key, serialize(value) as unknown as string)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        const expiry = now + options.ttl\n        storage.setItem(expiryKey, expiry.toString())\n      }\n    } catch (error) {\n      if (throwQuotaErrorsOnSet && error instanceof Error && error.message.toLowerCase().includes('quota')) throw error\n    }\n  }\n\n  // Safely remove storage item.\n  function removeItem(key: string) {\n    try {\n      storage.removeItem(key)\n      if (options.ttl) {\n        const expiryKey = `${key}:expiry`\n        storage.removeItem(expiryKey)\n      }\n    } catch {\n      // Ignore browser private mode error.\n    }\n  }\n\n  return {\n    getItem,\n    setItem,\n    removeItem,\n    clear: storage.clear,\n    key: storage.key,\n    get length() {\n      return storage.length\n    },\n  }\n}\n\nexport function jsonSafeStorage<T>(storageBackend: StorageBackend) {\n  return safeStorage<T>(\n    storageBackend,\n    {throwQuotaErrorsOnSet: false},\n    ssrSafeWindow,\n    JSON.parse as (value: string) => T,\n    JSON.stringify as (obj: T) => string,\n  )\n}\n","// When using SSR, browser globals are not available. If you try to use them, Node.js will throw an error\ntype SSRSafeLocation = Pick<Location, 'pathname' | 'origin' | 'search' | 'hash' | 'href'>\n\n// In some cases, we want to force the server environment to be used in the browser. This is useful for testing/profiling\nconst forceServer = typeof FORCE_SERVER_ENV !== 'undefined' ? FORCE_SERVER_ENV : false\n\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeDocument = typeof document === 'undefined' || forceServer ? undefined : document\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeWindow = typeof window === 'undefined' || forceServer ? undefined : window\n// eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\nexport const ssrSafeHistory = typeof history === 'undefined' || forceServer ? undefined : history\n\nexport const ssrSafeLocation: SSRSafeLocation =\n  // eslint-disable-next-line ssr-friendly/no-dom-globals-in-module-scope\n  typeof location === 'undefined' || forceServer ? {pathname: '', origin: '', search: '', hash: '', href: ''} : location\n\nexport function setLocation(url: string) {\n  // eslint-disable-next-line no-restricted-syntax\n  const parsedURL: SSRSafeLocation = new URL(url)\n  const {pathname, origin, search, hash} = parsedURL\n\n  Object.assign(ssrSafeLocation, {pathname, origin, search, hash})\n}\n","import {ssrSafeDocument} from './ssr-globals'\n\n/***\n * Are we rendering on the server?\n */\nexport const IS_SERVER = typeof ssrSafeDocument === 'undefined'\n\n/***\n * Are we rendering on the client?\n */\nexport const IS_BROWSER = !IS_SERVER\n\n/***\n * This helper returns `true` if:\n * - we are rendering on the server\n * - we are on the client, and the app has been hydrated from a server-render\n */\nexport function wasServerRendered() {\n  if (IS_SERVER || !ssrSafeDocument) {\n    return true\n  }\n\n  return Boolean(\n    ssrSafeDocument.querySelector('react-app[data-ssr=\"true\"]') ||\n      ssrSafeDocument.querySelector('react-partial[data-ssr=\"true\"][partial-name=\"repos-overview\"]'),\n  )\n}\n","import {ssrSafeDocument, IS_SERVER} from '@github-ui/ssr-utils'\nimport {loaded} from '@github-ui/document-ready'\nimport {bundler} from '@github-ui/runtime-environment'\nimport {isFeatureEnabled} from '@github-ui/feature-flags'\nimport {isLoggedIn} from '@github-ui/client-env'\nimport {throttle} from '@github/mini-throttle'\n\nlet stats: PlatformBrowserStat[] = []\nconst chunkSize = 64 * 1024\n\nexport function sendStats(stat: PlatformBrowserStat, flushImmediately = false, samplingProbability = 0.5): void {\n  if (IS_SERVER || isFeatureEnabled('BROWSER_STATS_DISABLED') === true) {\n    return\n  }\n  if (samplingProbability < 0 || samplingProbability > 1) {\n    throw new RangeError('Sampling probability must be between 0 and 1')\n  }\n\n  if (stat.timestamp === undefined) stat.timestamp = Date.now()\n  stat.loggedIn = isLoggedIn()\n  stat.staff = isStaff()\n  stat.bundler = bundler\n  if (Math.random() < samplingProbability) {\n    stats.push(stat)\n  }\n\n  if (flushImmediately) {\n    flushStats()\n  } else {\n    throttledScheduleSendStats()\n  }\n}\n\nlet queued: number | null = null\n\nconst throttledScheduleSendStats = throttle(async function scheduleSendStats() {\n  await loaded\n  if (queued == null) {\n    queued = window.requestIdleCallback(flushStats)\n  }\n}, 5000)\n\nfunction flushStats() {\n  queued = null\n  if (!stats.length) {\n    return\n  }\n\n  const url = ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"browser-stats-url\"]')?.content\n  if (!url) {\n    return\n  }\n\n  const batches = getBatches(stats)\n\n  for (const batch of batches) {\n    safeSend(url, `{\"stats\": [${batch.join(',')}] }`)\n  }\n\n  stats = []\n}\n\n// getBatches breaks up the list of stats into smaller batches\n// that are less than 64kb in size. This is to avoid hitting the\n// size limit of the beacon API.\nfunction getBatches(items: PlatformBrowserStat[]): string[][] {\n  const batches: string[][] = []\n  const itemStrings = items.map(item => JSON.stringify(item))\n\n  while (itemStrings.length > 0) {\n    batches.push(makeBatch(itemStrings))\n  }\n\n  return batches\n}\n\n// makeBatch walks the items and collects batches of items that are within\n// the 64kb limit. If an item is too big to fit in a batch, it is sent alone.\nfunction makeBatch(itemStrings: string[]): string[] {\n  const firstItem = itemStrings.shift()!\n  const batch: string[] = [firstItem]\n  let size = firstItem.length\n\n  while (itemStrings.length > 0 && size <= chunkSize) {\n    const nextItemSize = itemStrings[0]!.length\n\n    if (size + nextItemSize <= chunkSize) {\n      const itemString = itemStrings.shift()!\n      batch.push(itemString)\n      size += nextItemSize\n    } else {\n      break\n    }\n  }\n\n  return batch\n}\n\nfunction safeSend(url: string, data: string) {\n  try {\n    if (navigator.sendBeacon) {\n      navigator.sendBeacon(url, data)\n    }\n  } catch {\n    // Silently ignore errors: https://github.com/github/github/issues/178088#issuecomment-829936461\n  }\n}\n\nexport function isStaff(): boolean {\n  return !!ssrSafeDocument?.head?.querySelector<HTMLMetaElement>('meta[name=\"user-staff\"]')?.content\n}\n\n// Flush stats before users navigate away from the page\nssrSafeDocument?.addEventListener('pagehide', flushStats)\nssrSafeDocument?.addEventListener('visibilitychange', flushStats)\n"],"names":["env","getEnv","getLocale","locale","isLoggedIn","login","loadEnv","document","envTag","getElementById","JSON","parse","textContent","error","console","ready","ssrSafeDocument","readyState","Promise","resolve","addEventListener","loaded","ssrSafeWindow","getEnabledFeaturesSet","Set","features","featureFlags","map","feature","toLowerCase","featuresSet","IS_SERVER","memoize","getEnabledFeatures","Array","from","isFeatureEnabled","name","has","featureFlag","hydroAnalyticsClient","getItem","safeStorage","dimensionPrefix","MARKETING_PARAMS","options","getOptionsFromMeta","baseContext","AnalyticsClient","extendBaseContext","context","key","value","app_id","event_url","host","Object","entries","startsWith","replace","visitorMeta","querySelector","assign","atob","content","URLSearchParams","window","location","search","includes","staff","isStaff","toString","sendPageView","sendEvent","type","service","head","cleanContext","stringifyObjectValues","obj","fromEntries","k","v","stringify","TraceDataKey","TraceDataRefreshCallbackKey","disabledClusters","decodeURIComponent","ssrSafeLocation","get","split","filter","c","reportTraceData","json","isTracingEnabled","rootWindowContent","push","undefined","clustersDisabled","length","getInsightsUrl","url","urlObject","URL","origin","searchParams","set","join","pathname","isClusterDisabled","cluster","indexOf","toggleClusterState","index","splice","params","buildSearchURL","searchPath","queryText","slice","searchType","updateSearchURL","href","suggestionsCache","Map","fetchSuggestions","token","data","getSuggestionsRequestData","maxPageViews","FormData","pageKey","keys","getPageViewsMap","append","result","fetchUrl","match","response","fetch","method","mode","body","headers","Accept","ok","jsonResponse","parseSuggestionsResponse","i","suggestions","suggestion","nodes","rank","pageKeyFromSuggestion","ownerLogin","repositoryName","owner","buildProjectKey","number","buildRepositoryKey","buildTeamKey","hiddenSearchCommandsInput","HTMLInputElement","jsonString","parsedSearchCommands","commands","concat","fetchSuggestionsLastUsedAt","memoizedFetchSuggestions","cache","getSuggestions","field","getAttribute","findNextElementSibling","element","className","nextSibling","nextElementSibling","HTMLElement","classList","contains","Date","now","clear","TEAM_PAGE_REGEX","REPOSITORY_PAGE_REGEXES","PROJECT_PAGE_REGEXES","logPageView","path","_teamMatch","organizationLogin","teamSlug","teamPageMatch","logPageViewByKey","ownerType","projectRegex","projectPageMatch","_projectMatch","ownerSlug","orgNumber","repoNumber","repositoryPageRegex","repositoryPageMatch","_match","views","Math","floor","hit","lastVisitedAt","visitCount","setPageViewsMap","limitedPageViews","pageViews","scorePage","scorer","ranked","sort","a","b","MAX_PAGE_VIEWS_TO_STORE_IN_LOCAL_STORAGE","PAGE_VIEW_KEY_REGEX","VIEWS_KEY","setItem","localStorage","rawData","pageViewMap","FEATURE_WEIGHTS","frequency","recency","frequencies","frequencyMap","totalVisits","values","reduce","total","view","recencies","recencyMap","items","recencyList","totalUniqueVisits","runtimeEnvironment","isEnterprise","bundler","BUNDLER","NoOpStorage","removeItem","storageKey","throwQuotaErrorsOnSet","global","deserialize","serialize","storage","emitStats","sendCacheStats","sendStats","incrementKey","ttl","expiryKey","expiry","Number","Error","message","jsonSafeStorage","storageBackend","forceServer","FORCE_SERVER_ENV","ssrSafeHistory","history","hash","IS_BROWSER","wasServerRendered","Boolean","stats","stat","flushImmediately","samplingProbability","timestamp","loggedIn","random","flushStats","throttledScheduleSendStats","queued","throttle","requestIdleCallback","batch","getBatches","batches","itemStrings","item","makeBatch","firstItem","shift","size","nextItemSize","itemString","safeSend","navigator","sendBeacon"],"sourceRoot":""}