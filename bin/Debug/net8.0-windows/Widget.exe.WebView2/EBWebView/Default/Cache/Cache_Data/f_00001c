{"version":3,"file":"vendors-node_modules_github_text-expander-element_dist_index_js-xxxxxxxxxxxx.js","mappings":"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","sources":["node_modules/@github/text-expander-element/node_modules/@github/combobox-nav/dist/index.js","node_modules/@github/text-expander-element/dist/index.js"],"sourcesContent":["export default class Combobox {\n    constructor(input, list, { tabInsertsSuggestions, defaultFirstOption, scrollIntoViewOptions } = {}) {\n        this.input = input;\n        this.list = list;\n        this.tabInsertsSuggestions = tabInsertsSuggestions !== null && tabInsertsSuggestions !== void 0 ? tabInsertsSuggestions : true;\n        this.defaultFirstOption = defaultFirstOption !== null && defaultFirstOption !== void 0 ? defaultFirstOption : false;\n        this.scrollIntoViewOptions = scrollIntoViewOptions !== null && scrollIntoViewOptions !== void 0 ? scrollIntoViewOptions : { block: 'nearest', inline: 'nearest' };\n        this.isComposing = false;\n        if (!list.id) {\n            list.id = `combobox-${Math.random().toString().slice(2, 6)}`;\n        }\n        this.ctrlBindings = !!navigator.userAgent.match(/Macintosh/);\n        this.keyboardEventHandler = event => keyboardBindings(event, this);\n        this.compositionEventHandler = event => trackComposition(event, this);\n        this.inputHandler = this.clearSelection.bind(this);\n        input.setAttribute('role', 'combobox');\n        input.setAttribute('aria-controls', list.id);\n        input.setAttribute('aria-expanded', 'false');\n        input.setAttribute('aria-autocomplete', 'list');\n        input.setAttribute('aria-haspopup', 'listbox');\n    }\n    destroy() {\n        this.clearSelection();\n        this.stop();\n        this.input.removeAttribute('role');\n        this.input.removeAttribute('aria-controls');\n        this.input.removeAttribute('aria-expanded');\n        this.input.removeAttribute('aria-autocomplete');\n        this.input.removeAttribute('aria-haspopup');\n    }\n    start() {\n        this.input.setAttribute('aria-expanded', 'true');\n        this.input.addEventListener('compositionstart', this.compositionEventHandler);\n        this.input.addEventListener('compositionend', this.compositionEventHandler);\n        this.input.addEventListener('input', this.inputHandler);\n        this.input.addEventListener('keydown', this.keyboardEventHandler);\n        this.list.addEventListener('click', commitWithElement);\n        this.indicateDefaultOption();\n    }\n    stop() {\n        this.clearSelection();\n        this.input.setAttribute('aria-expanded', 'false');\n        this.input.removeEventListener('compositionstart', this.compositionEventHandler);\n        this.input.removeEventListener('compositionend', this.compositionEventHandler);\n        this.input.removeEventListener('input', this.inputHandler);\n        this.input.removeEventListener('keydown', this.keyboardEventHandler);\n        this.list.removeEventListener('click', commitWithElement);\n    }\n    indicateDefaultOption() {\n        var _a;\n        if (this.defaultFirstOption) {\n            (_a = Array.from(this.list.querySelectorAll('[role=\"option\"]:not([aria-disabled=\"true\"])'))\n                .filter(visible)[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('data-combobox-option-default', 'true');\n        }\n    }\n    navigate(indexDiff = 1) {\n        const focusEl = Array.from(this.list.querySelectorAll('[aria-selected=\"true\"]')).filter(visible)[0];\n        const els = Array.from(this.list.querySelectorAll('[role=\"option\"]')).filter(visible);\n        const focusIndex = els.indexOf(focusEl);\n        if ((focusIndex === els.length - 1 && indexDiff === 1) || (focusIndex === 0 && indexDiff === -1)) {\n            this.clearSelection();\n            this.input.focus();\n            return;\n        }\n        let indexOfItem = indexDiff === 1 ? 0 : els.length - 1;\n        if (focusEl && focusIndex >= 0) {\n            const newIndex = focusIndex + indexDiff;\n            if (newIndex >= 0 && newIndex < els.length)\n                indexOfItem = newIndex;\n        }\n        const target = els[indexOfItem];\n        if (!target)\n            return;\n        for (const el of els) {\n            el.removeAttribute('data-combobox-option-default');\n            if (target === el) {\n                this.input.setAttribute('aria-activedescendant', target.id);\n                target.setAttribute('aria-selected', 'true');\n                fireSelectEvent(target);\n                target.scrollIntoView(this.scrollIntoViewOptions);\n            }\n            else {\n                el.removeAttribute('aria-selected');\n            }\n        }\n    }\n    clearSelection() {\n        this.input.removeAttribute('aria-activedescendant');\n        for (const el of this.list.querySelectorAll('[aria-selected=\"true\"]')) {\n            el.removeAttribute('aria-selected');\n        }\n        this.indicateDefaultOption();\n    }\n}\nfunction keyboardBindings(event, combobox) {\n    if (event.shiftKey || event.metaKey || event.altKey)\n        return;\n    if (!combobox.ctrlBindings && event.ctrlKey)\n        return;\n    if (combobox.isComposing)\n        return;\n    switch (event.key) {\n        case 'Enter':\n            if (commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Tab':\n            if (combobox.tabInsertsSuggestions && commit(combobox.input, combobox.list)) {\n                event.preventDefault();\n            }\n            break;\n        case 'Escape':\n            combobox.clearSelection();\n            break;\n        case 'ArrowDown':\n            combobox.navigate(1);\n            event.preventDefault();\n            break;\n        case 'ArrowUp':\n            combobox.navigate(-1);\n            event.preventDefault();\n            break;\n        case 'n':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(1);\n                event.preventDefault();\n            }\n            break;\n        case 'p':\n            if (combobox.ctrlBindings && event.ctrlKey) {\n                combobox.navigate(-1);\n                event.preventDefault();\n            }\n            break;\n        default:\n            if (event.ctrlKey)\n                break;\n            combobox.clearSelection();\n    }\n}\nfunction commitWithElement(event) {\n    if (!(event.target instanceof Element))\n        return;\n    const target = event.target.closest('[role=\"option\"]');\n    if (!target)\n        return;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return;\n    fireCommitEvent(target, { event });\n}\nfunction commit(input, list) {\n    const target = list.querySelector('[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]');\n    if (!target)\n        return false;\n    if (target.getAttribute('aria-disabled') === 'true')\n        return true;\n    target.click();\n    return true;\n}\nfunction fireCommitEvent(target, detail) {\n    target.dispatchEvent(new CustomEvent('combobox-commit', { bubbles: true, detail }));\n}\nfunction fireSelectEvent(target) {\n    target.dispatchEvent(new Event('combobox-select', { bubbles: true }));\n}\nfunction visible(el) {\n    return (!el.hidden &&\n        !(el instanceof HTMLInputElement && el.type === 'hidden') &&\n        (el.offsetWidth > 0 || el.offsetHeight > 0));\n}\nfunction trackComposition(event, combobox) {\n    combobox.isComposing = event.type === 'compositionstart';\n    const list = document.getElementById(combobox.input.getAttribute('aria-controls') || '');\n    if (!list)\n        return;\n    combobox.clearSelection();\n}\n","import Combobox from '@github/combobox-nav';\n\nconst boundary = /\\s|\\(|\\[/;\nfunction query(text, key, cursor, { multiWord, lookBackIndex, lastMatchPosition } = {\n    multiWord: false,\n    lookBackIndex: 0,\n    lastMatchPosition: null\n}) {\n    let keyIndex = text.lastIndexOf(key, cursor - 1);\n    if (keyIndex === -1)\n        return;\n    if (keyIndex < lookBackIndex)\n        return;\n    if (multiWord) {\n        if (lastMatchPosition != null) {\n            if (lastMatchPosition === keyIndex)\n                return;\n            keyIndex = lastMatchPosition - key.length;\n        }\n        const charAfterKey = text[keyIndex + 1];\n        if (charAfterKey === ' ' && cursor >= keyIndex + key.length + 1)\n            return;\n        const newLineIndex = text.lastIndexOf('\\n', cursor - 1);\n        if (newLineIndex > keyIndex)\n            return;\n        const dotIndex = text.lastIndexOf('.', cursor - 1);\n        if (dotIndex > keyIndex)\n            return;\n    }\n    else {\n        const spaceIndex = text.lastIndexOf(' ', cursor - 1);\n        if (spaceIndex > keyIndex)\n            return;\n    }\n    const pre = text[keyIndex - 1];\n    if (pre && !boundary.test(pre))\n        return;\n    const queryString = text.substring(keyIndex + key.length, cursor);\n    return {\n        text: queryString,\n        position: keyIndex + key.length\n    };\n}\n\n/**\n * A custom element is implemented as a class which extends HTMLElement (in the\n * case of autonomous elements) or the interface you want to customize (in the\n * case of customized built-in elements).\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#custom_element_lifecycle_callbacks\n */\nclass CustomHTMLElement extends HTMLElement {\n}\n\nclass InputStyleCloneUpdateEvent extends Event {\n    constructor() {\n        super(\"update\");\n    }\n}\nconst CloneRegistry = new WeakMap();\n/**\n * Create an element that exactly matches an input pixel-for-pixel and automatically stays in sync with it. This\n * is a non-interactive overlay on to the input and can be used to affect the visual appearance of the input\n * without modifying its behavior. The clone element is hidden by default.\n *\n * This lower level API powers the `InputRange` but provides more advanced functionality including event updates.\n *\n * Emits `update` events whenever anything is recalculated: when the layout changes, when the user scrolls, when the\n * input is updated, etc. This event may be emitted more than once per change.\n *\n * @note There may be cases in which the clone cannot observe changes to the input and fails to automatically update.\n * For example, if the `value` property on the input is written to directly, no `input` event is emitted by the input\n * and the clone does not automatically update. In these cases, `forceUpdate` can be used to manually trigger an update.\n */\n// PRIOR ART: This approach was adapted from the following MIT-licensed sources:\n//  - primer/react (Copyright (c) 2018 GitHub, Inc.): https://github.com/primer/react/blob/a0db832302702b869aa22b0c4049ad9305ef631f/src/drafts/utils/character-coordinates.ts\n//  - component/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/component/textarea-caret-position/blob/b5db7a7e47dd149c2a66276183c69234e4dabe30/index.js\n//  - koddsson/textarea-caret-position (Copyright (c) 2015 Jonathan Ong me@jongleberry.com): https://github.com/koddsson/textarea-caret-position/blob/eba40ec8488eed4d77815f109af22e1d9c0751d3/index.js\nclass InputStyleCloneElement extends CustomHTMLElement {\n    #styleObserver = new MutationObserver(() => this.#updateStyles());\n    #resizeObserver = new ResizeObserver(() => this.#requestUpdateLayout());\n    // This class is unique in that it will prevent itself from getting garbage collected because of the subscribed\n    // observers (if never detached). Because of this, we want to avoid preventing the existence of this class from also\n    // preventing the garbage collection of the associated input. This also allows us to automatically detach if the\n    // input gets collected.\n    #inputRef;\n    #container;\n    /**\n     * Get the clone for an input, reusing an existing one if available. This avoids creating unecessary clones, which\n     * have a performance cost due to their high-frequency event-based updates. Because these elements are shared, they\n     * should be mutated with caution.\n     *\n     * Upon initial creation the clone element will automatically be inserted into the DOM and begin observing the\n     * linked input. Only one clone per input can ever exist at a time.\n     * @param input The target input to clone.\n     */\n    static for(input) {\n        let clone = CloneRegistry.get(input);\n        if (!clone) {\n            clone = new InputStyleCloneElement();\n            clone.connect(input);\n            CloneRegistry.set(input, clone);\n        }\n        return clone;\n    }\n    /**\n     * Connect this instance to a target input element and insert this instance into the DOM in the correct location.\n     *\n     * NOTE: calling the static `for` method is nearly always preferable as it will reuse an existing clone if available.\n     * However, if reusing clones is problematic (ie, if the clone needs to be mutated), a clone can be constructed\n     * directly with `new InputStyleCloneElement()` and then bound to an input and inserted into the DOM with\n     * `clone.connect(target)`.\n     */\n    connect(input) {\n        this.#inputRef = new WeakRef(input);\n        // We want position:absolute so it doesn't take space in the layout, but that doesn't work with display:table-cell\n        // used in the HTMLInputElement approach. So we need a wrapper.\n        this.#container = document.createElement(\"div\");\n        this.#container.style.position = \"absolute\";\n        this.#container.style.pointerEvents = \"none\";\n        input.after(this.#container);\n        this.#container.appendChild(this);\n    }\n    /**\n     * Force a recalculation. Will emit an `update` event. This is typically not needed unless the input has changed in\n     * an unobservable way, eg by directly writing to the `value` property.\n     */\n    forceUpdate() {\n        this.#updateStyles();\n        this.#updateText();\n    }\n    /** @private */\n    connectedCallback() {\n        this.#usingInput((input) => {\n            this.style.pointerEvents = \"none\";\n            this.style.userSelect = \"none\";\n            this.style.overflow = \"hidden\";\n            this.style.display = \"block\";\n            // Important not to use display:none which would not render the content at all\n            this.style.visibility = \"hidden\";\n            if (input instanceof HTMLTextAreaElement) {\n                this.style.whiteSpace = \"pre-wrap\";\n                this.style.wordWrap = \"break-word\";\n            }\n            else {\n                this.style.whiteSpace = \"nowrap\";\n                // text in single-line inputs is vertically centered\n                this.style.display = \"table-cell\";\n                this.style.verticalAlign = \"middle\";\n            }\n            this.setAttribute(\"aria-hidden\", \"true\");\n            this.#updateStyles();\n            this.#updateText();\n            this.#styleObserver.observe(input, {\n                attributeFilter: [\n                    \"style\",\n                    \"dir\", // users can right-click in some browsers to change the text direction dynamically\n                ],\n            });\n            this.#resizeObserver.observe(input);\n            document.addEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n            window.addEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n            // capture so this happens first, so other things can respond to `input` events after this data updates\n            input.addEventListener(\"input\", this.#onInput, { capture: true });\n        });\n    }\n    /** @private */\n    disconnectedCallback() {\n        this.#container?.remove();\n        this.#styleObserver.disconnect();\n        this.#resizeObserver.disconnect();\n        document.removeEventListener(\"scroll\", this.#onDocumentScrollOrResize, { capture: true });\n        window.removeEventListener(\"resize\", this.#onDocumentScrollOrResize, { capture: true });\n        // Can't use `usingInput` here since that could infinitely recurse\n        const input = this.#input;\n        if (input) {\n            input.removeEventListener(\"input\", this.#onInput, { capture: true });\n            CloneRegistry.delete(input);\n        }\n    }\n    // --- private ---\n    get #input() {\n        return this.#inputRef?.deref();\n    }\n    /** Perform `fn` using the `input` if it is still available. If not, clean up the clone instead. */\n    #usingInput(fn) {\n        const input = this.#input;\n        if (!input)\n            return this.remove();\n        return fn(input);\n    }\n    /** Current relative x-adjustment in pixels, executed via CSS transform. */\n    #xOffset = 0;\n    /** Current relative y-adjustment in pixels, executed via CSS transform. */\n    #yOffset = 0;\n    /**\n     * Update only geometric properties without recalculating styles. Typically call `#requestUpdateLayout` instead to\n     * only update once per animation frame.\n     */\n    #updateLayout() {\n        // This runs often, so keep it as fast as possible! Avoid all unecessary updates.\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            this.style.height = inputStyle.height;\n            this.style.width = inputStyle.width;\n            // Immediately re-adjust for browser inconsistencies in scrollbar handling, if necessary\n            if (input.clientHeight !== this.clientHeight)\n                this.style.height = `calc(${inputStyle.height} + ${input.clientHeight - this.clientHeight}px)`;\n            if (input.clientWidth !== this.clientWidth)\n                this.style.width = `calc(${inputStyle.width} + ${input.clientWidth - this.clientWidth}px)`;\n            // Position on top of the input\n            const inputRect = input.getBoundingClientRect();\n            const cloneRect = this.getBoundingClientRect();\n            this.#xOffset = this.#xOffset + inputRect.left - cloneRect.left;\n            this.#yOffset = this.#yOffset + inputRect.top - cloneRect.top;\n            this.style.transform = `translate(${this.#xOffset}px, ${this.#yOffset}px)`;\n            this.scrollTop = input.scrollTop;\n            this.scrollLeft = input.scrollLeft;\n            this.dispatchEvent(new InputStyleCloneUpdateEvent());\n        });\n    }\n    #isLayoutUpdating = false;\n    /** Request a layout update. Will only happen once per animation frame, to avoid unecessary updates. */\n    #requestUpdateLayout() {\n        if (this.#isLayoutUpdating)\n            return;\n        this.#isLayoutUpdating = true;\n        requestAnimationFrame(() => {\n            this.#updateLayout();\n            this.#isLayoutUpdating = false;\n        });\n    }\n    /** Update the styles of the clone based on the styles of the input, then request a layout update. */\n    #updateStyles() {\n        this.#usingInput((input) => {\n            const inputStyle = window.getComputedStyle(input);\n            for (const prop of propertiesToCopy)\n                this.style[prop] = inputStyle[prop];\n            this.#requestUpdateLayout();\n        });\n    }\n    /**\n     * Update the text content of the clone based on the text content of the input. Triggers a layout update in case the\n     * text update caused scrolling.\n     */\n    #updateText() {\n        this.#usingInput((input) => {\n            this.textContent = input.value;\n            // This is often unecessary on a pure text update, but text updates could potentially cause layout updates like\n            // scrolling or resizing. And we run the update on _every frame_ when scrolling, so this isn't that expensive.\n            // We don't requestUpdateLayout here because this one should happen synchronously, so that clients can react\n            // within their own `input` event handlers.\n            this.#updateLayout();\n        });\n    }\n    #onInput = () => this.#updateText();\n    #onDocumentScrollOrResize = (event) => {\n        this.#usingInput((input) => {\n            if (event.target === document ||\n                event.target === window ||\n                (event.target instanceof Node && event.target.contains(input)))\n                this.#requestUpdateLayout();\n        });\n    };\n}\n// Note that some browsers, such as Firefox, do not concatenate properties\n// into their shorthand (e.g. padding-top, padding-bottom etc. -> padding),\n// so we have to list every single property explicitly.\nconst propertiesToCopy = [\n    // RTL / vertical writing modes support:\n    \"direction\",\n    \"writingMode\",\n    \"unicodeBidi\",\n    \"textOrientation\",\n    \"boxSizing\",\n    \"borderTopWidth\",\n    \"borderRightWidth\",\n    \"borderBottomWidth\",\n    \"borderLeftWidth\",\n    \"borderStyle\",\n    \"paddingTop\",\n    \"paddingRight\",\n    \"paddingBottom\",\n    \"paddingLeft\",\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font\n    \"fontStyle\",\n    \"fontVariant\",\n    \"fontWeight\",\n    \"fontStretch\",\n    \"fontSize\",\n    \"fontSizeAdjust\",\n    \"lineHeight\",\n    \"fontFamily\",\n    \"textAlign\",\n    \"textTransform\",\n    \"textIndent\",\n    \"textDecoration\",\n    \"letterSpacing\",\n    \"wordSpacing\",\n    \"tabSize\",\n    \"MozTabSize\",\n];\n// Inspired by https://github.com/github/catalyst/blob/dc284dcf4f82329a9cac5c867462a8fa529b6c40/src/register.ts\ntry {\n    customElements.define(\"input-style-clone\", InputStyleCloneElement);\n}\ncatch (e) {\n    // Throws DOMException with NotSupportedError if already defined\n    if (!(e instanceof DOMException && e.name === \"NotSupportedError\"))\n        throw e;\n}\n\nclass InputRange {\n    #inputElement;\n    #startOffset;\n    #endOffset;\n    /**\n     * Construct a new `InputRange`.\n     * @param element The target input element that contains the content for the range.\n     * @param startOffset The inclusive 0-based start index for the range. Will be adjusted to fit in the input contents.\n     * @param endOffset The exclusive 0-based end index for the range. Will be adjusted to fit in the input contents.\n     */\n    constructor(element, startOffset = 0, endOffset = startOffset) {\n        this.#inputElement = element;\n        this.#startOffset = startOffset;\n        this.#endOffset = endOffset;\n    }\n    /**\n     * Create a new range from the current user selection. If the input is not focused, the range will just be the start\n     * of the input (offsets `0` to `0`).\n     *\n     * This can be used to get the caret coordinates: if the resulting range is `collapsed`, the location of the\n     * `getBoundingClientRect` will be the location of the caret caret (note, however, that the width will be `0` in\n     * this case).\n     */\n    static fromSelection(input) {\n        const { selectionStart, selectionEnd } = input;\n        return new InputRange(input, selectionStart ?? undefined, selectionEnd ?? undefined);\n    }\n    /** Returns true if the start is equal to the end of this range. */\n    get collapsed() {\n        return this.startOffset === this.endOffset;\n    }\n    /** Always returns the containing input element. */\n    get commonAncestorContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get endContainer() {\n        return this.#inputElement;\n    }\n    /** Always returns the containing input element. */\n    get startContainer() {\n        return this.#inputElement;\n    }\n    get startOffset() {\n        return this.#startOffset;\n    }\n    get endOffset() {\n        return this.#endOffset;\n    }\n    /** Update the inclusive start offset. Will be adjusted to fit within the content size. */\n    setStartOffset(offset) {\n        this.#startOffset = this.#clampOffset(offset);\n    }\n    /** Update the exclusive end offset. Will be adjusted to fit within the content size. */\n    setEndOffset(offset) {\n        this.#endOffset = this.#clampOffset(offset);\n    }\n    /**\n     * Collapse this range to one side.\n     * @param toStart If `true`, will collapse to the start side. Otherwise, will collapse to the end.\n     */\n    collapse(toStart = false) {\n        if (toStart)\n            this.setEndOffset(this.startOffset);\n        else\n            this.setStartOffset(this.endOffset);\n    }\n    /** Returns a `DocumentFragment` containing a new `Text` node containing the content in the range. */\n    cloneContents() {\n        return this.#createCloneRange().cloneContents();\n    }\n    /** Create a copy of this range. */\n    cloneRange() {\n        return new InputRange(this.#inputElement, this.startOffset, this.endOffset);\n    }\n    /**\n     * Obtain one rect that contains the entire contents of the range. If the range spans multiple lines, this box will\n     * contain all pieces of the range but may also contain some space outside the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getBoundingClientRect() {\n        return this.#createCloneRange().getBoundingClientRect();\n    }\n    /**\n     * Obtain the rects that contain contents of this range. If the range spans multiple lines, there will be multiple\n     * bounding boxes. These boxes can be used, for example, to draw a highlight over the range.\n     * @see https://iansan5653.github.io/dom-input-range/demos/playground/\n     */\n    getClientRects() {\n        return this.#createCloneRange().getClientRects();\n    }\n    /** Get the contents of the range as a string. */\n    toString() {\n        return this.#createCloneRange().toString();\n    }\n    /**\n     * Get the underlying `InputStyleClone` instance powering these calculations. This can be used to listen for\n     * updates to trigger layout recalculation.\n     */\n    getStyleClone() {\n        return this.#styleClone;\n    }\n    // --- private ---\n    get #styleClone() {\n        return InputStyleCloneElement.for(this.#inputElement);\n    }\n    get #cloneElement() {\n        return this.#styleClone;\n    }\n    #clampOffset(offset) {\n        return Math.max(0, Math.min(offset, this.#inputElement.value.length));\n    }\n    #createCloneRange() {\n        // It's tempting to create a single Range and reuse it across the lifetime of the class. However, this wouldn't be\n        // accurate because the contents of the input can change and the contents of the range would become stale. So we\n        // must create a new range every time we need it.\n        const range = document.createRange();\n        const textNode = this.#cloneElement.childNodes[0];\n        if (textNode) {\n            range.setStart(textNode, this.startOffset);\n            range.setEnd(textNode, this.endOffset);\n        }\n        return range;\n    }\n}\n\nconst states = new WeakMap();\nclass TextExpander {\n    constructor(expander, input) {\n        this.expander = expander;\n        this.input = input;\n        this.combobox = null;\n        this.menu = null;\n        this.match = null;\n        this.justPasted = false;\n        this.lookBackIndex = 0;\n        this.oninput = this.onInput.bind(this);\n        this.onpaste = this.onPaste.bind(this);\n        this.onkeydown = this.onKeydown.bind(this);\n        this.oncommit = this.onCommit.bind(this);\n        this.onmousedown = this.onMousedown.bind(this);\n        this.onblur = this.onBlur.bind(this);\n        this.interactingWithList = false;\n        input.addEventListener('paste', this.onpaste);\n        input.addEventListener('input', this.oninput);\n        input.addEventListener('keydown', this.onkeydown);\n        input.addEventListener('blur', this.onblur);\n    }\n    destroy() {\n        this.input.removeEventListener('paste', this.onpaste);\n        this.input.removeEventListener('input', this.oninput);\n        this.input.removeEventListener('keydown', this.onkeydown);\n        this.input.removeEventListener('blur', this.onblur);\n    }\n    dismissMenu() {\n        if (this.deactivate()) {\n            this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n        }\n    }\n    activate(match, menu) {\n        var _a, _b;\n        if (this.input !== document.activeElement && this.input !== ((_b = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.shadowRoot) === null || _b === void 0 ? void 0 : _b.activeElement)) {\n            return;\n        }\n        this.deactivate();\n        this.menu = menu;\n        if (!menu.id)\n            menu.id = `text-expander-${Math.floor(Math.random() * 100000).toString()}`;\n        this.expander.append(menu);\n        this.combobox = new Combobox(this.input, menu);\n        this.expander.dispatchEvent(new Event('text-expander-activate'));\n        this.positionMenu(menu, match.position);\n        this.combobox.start();\n        menu.addEventListener('combobox-commit', this.oncommit);\n        menu.addEventListener('mousedown', this.onmousedown);\n        this.combobox.navigate(1);\n    }\n    positionMenu(menu, position) {\n        const caretRect = new InputRange(this.input, position).getBoundingClientRect();\n        const targetPosition = { left: caretRect.left, top: caretRect.top + caretRect.height };\n        const currentPosition = menu.getBoundingClientRect();\n        const delta = {\n            left: targetPosition.left - currentPosition.left,\n            top: targetPosition.top - currentPosition.top\n        };\n        if (delta.left !== 0 || delta.top !== 0) {\n            const currentStyle = getComputedStyle(menu);\n            menu.style.left = currentStyle.left ? `calc(${currentStyle.left} + ${delta.left}px)` : `${delta.left}px`;\n            menu.style.top = currentStyle.top ? `calc(${currentStyle.top} + ${delta.top}px)` : `${delta.top}px`;\n        }\n    }\n    deactivate() {\n        const menu = this.menu;\n        if (!menu || !this.combobox)\n            return false;\n        this.expander.dispatchEvent(new Event('text-expander-deactivate'));\n        this.menu = null;\n        menu.removeEventListener('combobox-commit', this.oncommit);\n        menu.removeEventListener('mousedown', this.onmousedown);\n        this.combobox.destroy();\n        this.combobox = null;\n        menu.remove();\n        return true;\n    }\n    onCommit({ target }) {\n        var _a;\n        const item = target;\n        if (!(item instanceof HTMLElement))\n            return;\n        if (!this.combobox)\n            return;\n        const match = this.match;\n        if (!match)\n            return;\n        const beginning = this.input.value.substring(0, match.position - match.key.length);\n        const remaining = this.input.value.substring(match.position + match.text.length);\n        const detail = { item, key: match.key, value: null, continue: false };\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-value', { cancelable: true, detail }));\n        if (canceled)\n            return;\n        if (!detail.value)\n            return;\n        let suffix = (_a = this.expander.getAttribute('suffix')) !== null && _a !== void 0 ? _a : ' ';\n        if (detail.continue) {\n            suffix = '';\n        }\n        const value = `${detail.value}${suffix}`;\n        this.input.value = beginning + value + remaining;\n        const cursor = beginning.length + value.length;\n        this.deactivate();\n        this.input.focus({\n            preventScroll: true\n        });\n        this.input.selectionStart = cursor;\n        this.input.selectionEnd = cursor;\n        if (!detail.continue) {\n            this.lookBackIndex = cursor;\n            this.match = null;\n        }\n        this.expander.dispatchEvent(new CustomEvent('text-expander-committed', { cancelable: false, detail: { input: this.input } }));\n    }\n    onBlur() {\n        if (this.interactingWithList) {\n            this.interactingWithList = false;\n            return;\n        }\n        this.deactivate();\n    }\n    onPaste() {\n        this.justPasted = true;\n    }\n    async onInput() {\n        if (this.justPasted) {\n            this.justPasted = false;\n            return;\n        }\n        const match = this.findMatch();\n        if (match) {\n            this.match = match;\n            const menu = await this.notifyProviders(match);\n            if (!this.match)\n                return;\n            if (menu) {\n                this.activate(match, menu);\n            }\n            else {\n                this.deactivate();\n            }\n        }\n        else {\n            this.match = null;\n            this.deactivate();\n        }\n    }\n    findMatch() {\n        const cursor = this.input.selectionEnd || 0;\n        const text = this.input.value;\n        if (cursor <= this.lookBackIndex) {\n            this.lookBackIndex = cursor - 1;\n        }\n        for (const { key, multiWord } of this.expander.keys) {\n            const found = query(text, key, cursor, {\n                multiWord,\n                lookBackIndex: this.lookBackIndex,\n                lastMatchPosition: this.match ? this.match.position : null\n            });\n            if (found) {\n                return { text: found.text, key, position: found.position };\n            }\n        }\n    }\n    async notifyProviders(match) {\n        const providers = [];\n        const provide = (result) => providers.push(result);\n        const canceled = !this.expander.dispatchEvent(new CustomEvent('text-expander-change', { cancelable: true, detail: { provide, text: match.text, key: match.key } }));\n        if (canceled)\n            return;\n        const all = await Promise.all(providers);\n        const fragments = all.filter(x => x.matched).map(x => x.fragment);\n        return fragments[0];\n    }\n    onMousedown() {\n        this.interactingWithList = true;\n    }\n    onKeydown(event) {\n        if (event.key === 'Escape') {\n            this.match = null;\n            if (this.deactivate()) {\n                this.lookBackIndex = this.input.selectionEnd || this.lookBackIndex;\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        }\n    }\n}\nclass TextExpanderElement extends HTMLElement {\n    get keys() {\n        const keysAttr = this.getAttribute('keys');\n        const keys = keysAttr ? keysAttr.split(' ') : [];\n        const multiWordAttr = this.getAttribute('multiword');\n        const multiWord = multiWordAttr ? multiWordAttr.split(' ') : [];\n        const globalMultiWord = multiWord.length === 0 && this.hasAttribute('multiword');\n        return keys.map(key => ({ key, multiWord: globalMultiWord || multiWord.includes(key) }));\n    }\n    set keys(value) {\n        this.setAttribute('keys', value);\n    }\n    connectedCallback() {\n        const input = this.querySelector('input[type=\"text\"], textarea');\n        if (!(input instanceof HTMLInputElement || input instanceof HTMLTextAreaElement))\n            return;\n        const state = new TextExpander(this, input);\n        states.set(this, state);\n    }\n    disconnectedCallback() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.destroy();\n        states.delete(this);\n    }\n    dismiss() {\n        const state = states.get(this);\n        if (!state)\n            return;\n        state.dismissMenu();\n    }\n}\n\nif (!window.customElements.get('text-expander')) {\n    window.TextExpanderElement = TextExpanderElement;\n    window.customElements.define('text-expander', TextExpanderElement);\n}\n\nexport { TextExpanderElement as default };\n"],"names":["Combobox","constructor","input","list","tabInsertsSuggestions","defaultFirstOption","scrollIntoViewOptions","block","inline","isComposing","id","Math","random","toString","slice","ctrlBindings","navigator","userAgent","match","keyboardEventHandler","event","keyboardBindings","combobox","shiftKey","metaKey","altKey","ctrlKey","key","commit","preventDefault","clearSelection","navigate","compositionEventHandler","trackComposition","type","document","getElementById","getAttribute","inputHandler","bind","setAttribute","destroy","stop","removeAttribute","start","addEventListener","commitWithElement","indicateDefaultOption","removeEventListener","_a","Array","from","querySelectorAll","filter","visible","indexDiff","focusEl","els","focusIndex","indexOf","length","focus","indexOfItem","newIndex","target","el","fireSelectEvent","dispatchEvent","Event","bubbles","scrollIntoView","Element","closest","fireCommitEvent","detail","CustomEvent","querySelector","click","hidden","HTMLInputElement","offsetWidth","offsetHeight","boundary","CustomHTMLElement","HTMLElement","InputStyleCloneUpdateEvent","CloneRegistry","WeakMap","InputStyleCloneElement","MutationObserver","ResizeObserver","for","clone","get","connect","set","WeakRef","createElement","style","position","pointerEvents","after","appendChild","forceUpdate","connectedCallback","userSelect","overflow","display","visibility","HTMLTextAreaElement","whiteSpace","wordWrap","verticalAlign","observe","attributeFilter","capture","window","disconnectedCallback","remove","disconnect","delete","deref","fn","inputStyle","getComputedStyle","height","width","clientHeight","clientWidth","inputRect","getBoundingClientRect","cloneRect","left","top","transform","scrollTop","scrollLeft","requestAnimationFrame","prop","propertiesToCopy","textContent","value","Node","contains","customElements","define","e","DOMException","name","InputRange","element","startOffset","endOffset","fromSelection","selectionStart","selectionEnd","undefined","collapsed","commonAncestorContainer","endContainer","startContainer","setStartOffset","offset","setEndOffset","collapse","toStart","cloneContents","cloneRange","getClientRects","getStyleClone","max","min","range","createRange","textNode","childNodes","setStart","setEnd","states","TextExpander","expander","menu","justPasted","lookBackIndex","oninput","onInput","onpaste","onPaste","onkeydown","onKeydown","oncommit","onCommit","onmousedown","onMousedown","onblur","onBlur","interactingWithList","dismissMenu","deactivate","activate","_b","activeElement","shadowRoot","floor","append","positionMenu","caretRect","targetPosition","currentPosition","delta","currentStyle","item","beginning","substring","remaining","text","continue","cancelable","suffix","cursor","preventScroll","findMatch","notifyProviders","multiWord","keys","found","query","lastMatchPosition","keyIndex","lastIndexOf","newLineIndex","dotIndex","spaceIndex","pre","test","providers","provide","push","result","fragments","Promise","all","x","matched","map","fragment","stopImmediatePropagation","TextExpanderElement","keysAttr","split","multiWordAttr","globalMultiWord","hasAttribute","includes","state","dismiss"],"sourceRoot":""}