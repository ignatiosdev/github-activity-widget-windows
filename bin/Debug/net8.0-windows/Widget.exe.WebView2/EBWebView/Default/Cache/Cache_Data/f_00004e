{"version":3,"file":"ui_packages_query-builder-element_query-builder-element_ts-xxxxxxxxxxxx.js","mappings":"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","sources":["ui/packages/query-builder-element/query-builder-api.ts","ui/packages/query-builder-element/query-builder-element.ts"],"sourcesContent":["import type {SafeHTMLString} from '@github-ui/safe-html'\n\nexport type QueryBuilderAction = URLAction | QueryAction | RewriteQueryAction | CommandAction\nexport enum SearchScopeText {\n  DIRECTORY = 'Search in this directory',\n  ORG = 'Search in this organization',\n  OWNER = 'Search in this owner',\n  REPO = 'Search in this repository',\n  GITHUB = 'Search all of GitHub',\n  GENERAL = 'Submit search',\n  COMMAND = 'Run command',\n  COPILOT_CHAT = 'Start a new Copilot thread',\n  COPILOT_SEARCH = 'Search with Copilot',\n  EXPLORE = 'Learn More',\n  DEFAULT = 'Jump to',\n}\n\nexport const AutocompleteText = 'Autocomplete'\n\nexport type Provider = SearchProvider | FilterProvider\n\nexport interface Parser<IntermediateRepresentation> {\n  // Note, the intermediate representation data will be available within\n  // providers on the QueryEvent as QueryEvent.parsedMetadata\n  parse(input: string, caretPosition: number | undefined): IntermediateRepresentation\n\n  // Flattens the intermediate representation into a list of QueryElements that\n  // can be styled by QueryBuilder\n  flatten(input: IntermediateRepresentation): QueryElement[]\n}\n\ninterface FilterItemData {\n  filter: string\n  value: string\n  name?: string\n  description?: string\n  inlineDescription?: boolean\n  priority?: number\n  icon?: Icon\n  avatar?: Avatar\n  action?: QueryBuilderAction\n}\n\nexport interface Avatar {\n  type: 'user' | 'org' | 'team'\n  url: string\n}\n\n/**\n * FilterItem represents a value that can be used in a filter. Some examples:\n * - filter is `repo:`, value is `github/github`\n * - filter is `author:`, value is `@keithamus`\n */\nexport class FilterItem extends Event {\n  public name: string\n  public filter: string\n  public value: string\n  public description: string\n  public inlineDescription = false\n  public action?: QueryBuilderAction\n  public priority: number\n  public icon?: Icon\n  public avatar?: Avatar\n\n  constructor({\n    filter,\n    value,\n    name = '',\n    description = '',\n    inlineDescription = false,\n    priority = Infinity,\n    icon = undefined,\n    avatar = undefined,\n    action,\n  }: FilterItemData) {\n    super('filter-item')\n    this.filter = filter\n    this.value = value\n    this.name = name\n    this.description = description\n    this.inlineDescription = inlineDescription\n    this.priority = priority\n    this.icon = icon\n    this.avatar = avatar\n    this.action = action\n  }\n}\n\n/* URLAction represents the URL a SearchItem will navigate to when enacted on */\ninterface URLAction {\n  url: string\n}\n\n/* QueryAction Represents the new Query String that a SearchItem will populate\n * the query-builder input with, when enacted on*/\ninterface QueryAction {\n  query: string\n}\n\ninterface RewriteQueryAction {\n  // Replaces the entire query with the provided string\n  replaceQueryWith: string\n  // The position in the query to move the caret to\n  moveCaretTo: number\n}\n\ninterface CommandAction {\n  commandName: string\n  data: Record<string, unknown>\n}\n\nexport interface CustomIcon {\n  html: SafeHTMLString\n}\n\nexport function isCustomIcon(icon: Icon): icon is CustomIcon {\n  return icon instanceof Object\n}\n\nexport enum Octicon {\n  Apps = 'apps',\n  Archived = 'archived',\n  Book = 'book',\n  Bookmark = 'bookmark',\n  Branch = 'branch',\n  Calendar = 'calendar',\n  Circle = 'circle',\n  Code = 'code',\n  CodeReview = 'code-review',\n  CodeSquare = 'code-square',\n  Comment = 'comment',\n  CommentDiscussion = 'comment-discussion',\n  Copilot = 'copilot',\n  CopilotError = 'copilot-error',\n  Codespaces = 'codespaces',\n  CreditCard = 'credit-card',\n  Default = 'default',\n  DeviceDesktop = 'device-desktop',\n  DeviceMobile = 'device-mobile',\n  Discussion = 'discussion',\n  Draft = 'draft',\n  FileCode = 'file-code',\n  Filter = 'filter',\n  Forbidden = 'forbidden',\n  Gift = 'gift',\n  Globe = 'globe',\n  Heart = 'heart',\n  History = 'history',\n  Issue = 'issue',\n  IssueOpened = 'issue-opened',\n  IssueClosed = 'issueClosed',\n  Iterations = 'iterations',\n  Mention = 'mention',\n  Merged = 'merged',\n  Milestone = 'milestone',\n  No = 'no',\n  Not = 'not',\n  Organization = 'organization',\n  Package = 'package',\n  Pencil = 'pencil',\n  Person = 'person',\n  Play = 'play',\n  PlusCircle = 'plus-circle',\n  Project = 'project',\n  PullRequest = 'pullRequest',\n  Question = 'question',\n  Reaction = 'reaction',\n  Repo = 'repo',\n  Rocket = 'rocket',\n  Search = 'search',\n  Server = 'server',\n  ShieldCheck = 'shield-check',\n  SingleSelect = 'single-select',\n  Sort = 'sort',\n  Tag = 'tag',\n  Team = 'team',\n  Telescope = 'telescope',\n  Trash = 'trash',\n  Workflow = 'workflow',\n}\n\nexport enum PrefixColor {\n  Entity = '--color-prettylights-syntax-entity',\n  Constant = '--color-prettylights-syntax-constant',\n  Keyword = '--color-prettylights-syntax-keyword',\n  Variable = '--color-prettylights-syntax-variable',\n  String = '--color-prettylights-syntax-string',\n}\n\nexport type Icon = Octicon | CustomIcon\n\ninterface SearchItemData {\n  id?: string\n  priority: number\n  value: string\n  action: QueryBuilderAction\n  description?: string\n  icon?: Icon\n  scope?: keyof typeof SearchScopeText\n  prefixText?: string\n  prefixColor?: PrefixColor\n\n  // If set, the item will only be rendered if no other providers\n  // sent items.\n  isFallbackSuggestion?: boolean\n  isUpdate?: boolean\n}\n\n/* SearchItem represents a result that appears in the results list, and has an action for a user to enact on */\nexport class SearchItem extends Event {\n  public id?: string\n  public priority: number\n  public value: string\n  public action: QueryBuilderAction\n  public description: string\n  public icon?: Icon\n  public scope: keyof typeof SearchScopeText\n  public prefixText?: string\n  public prefixColor?: PrefixColor\n  public isFallbackSuggestion: boolean\n\n  constructor({\n    id,\n    priority,\n    value,\n    action,\n    description = '',\n    icon = undefined,\n    scope = 'DEFAULT',\n    prefixText,\n    prefixColor,\n    isFallbackSuggestion,\n    isUpdate,\n  }: SearchItemData) {\n    super(isUpdate ? 'update-item' : 'search-item')\n    this.id = id\n    this.priority = priority\n    this.value = value\n    this.prefixText = prefixText\n    this.prefixColor = prefixColor\n    this.action = action\n    this.description = description\n    this.icon = icon\n    this.scope = scope\n    this.isFallbackSuggestion = isFallbackSuggestion || false\n  }\n}\n\nexport interface SearchProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'search'\n}\n\nexport interface FilterProvider extends EventTarget {\n  priority: number\n  icon?: Icon\n  name: string // plural group name (i.e. \"repositories\" or \"teams\") - will be the visual header\n  description?: string\n  singularItemName: string // singular name for an item (i.e. \"repository\" or \"team\") to construct a meaningful aria-label, doesn't appear visually\n  value: string // visual name of the filter (i.e. \"is:\")\n  type: 'filter'\n  // When set, if a filter provider emits filter items, always render them in the UI. If not set,\n  // filter items will only be rendered if the querybuilder thinks a filter item is being written\n  // by the user, which may be incorrect if using a custom parser.\n  manuallyDetermineFilterEligibility?: boolean\n}\n\nexport type QueryElement = QueryFilterElement | QueryTextElement\n\nexport interface QueryFilterElement {\n  type: 'filter'\n  filter: string\n  value: string\n  style?: TextElementStyle\n}\n\nexport interface QueryTextElement {\n  type: 'text'\n  value: string\n  style?: TextElementStyle\n}\n\nexport enum TextElementStyle {\n  Normal = 'normal',\n  Entity = 'entity',\n  Constant = 'constant',\n  FilterValue = 'filter-value',\n}\n\nexport class FetchDataEvent extends Event {\n  constructor(public fetchPromise: Promise<unknown>) {\n    super('fetch-data')\n  }\n}\n\nexport class QueryEvent extends Event {\n  constructor(\n    public parsedQuery: QueryElement[],\n    public rawQuery: string,\n    public parsedMetadata: unknown,\n  ) {\n    super('query')\n  }\n\n  override toString() {\n    return this.rawQuery\n  }\n}\n\nclass QueryBuilderProvider extends Event {\n  constructor(public provider: SearchProvider) {\n    super('query-builder-provider', {bubbles: true})\n  }\n}\n\ndeclare global {\n  interface Document {\n    addEventListener(type: 'query-builder-provider', handler: (event: QueryBuilderProvider) => void): void\n  }\n}\n","import {controller, attr, findTarget} from '@github/catalyst'\nimport Combobox from '@github/combobox-nav'\nimport {html, render} from '@github-ui/jtml-shimmed'\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {sendEvent} from '@github-ui/hydro-analytics'\nimport type {TemplateResult} from '@github-ui/jtml-shimmed'\nimport {\n  QueryEvent,\n  type Provider,\n  type Parser,\n  type SearchItem,\n  type FilterItem,\n  SearchScopeText,\n  AutocompleteText,\n  type FetchDataEvent,\n  type Avatar,\n  type FilterProvider,\n  type Icon,\n  type QueryElement,\n  type SearchProvider,\n  isCustomIcon,\n  TextElementStyle,\n} from './query-builder-api'\n\nexport class FeedbackEvent extends Event {\n  constructor(\n    public key: string,\n    public text: string,\n    public data: Record<string, unknown>,\n  ) {\n    super('query-builder-feedback', {bubbles: true, cancelable: true})\n    this.key = key\n    this.text = text\n    this.data = data\n  }\n}\n\ninterface LocalizedScreenReaderText {\n  suggestion: string\n  suggestions: string\n  clear_search: string\n}\n\n// Sorts by priority number; the lower the number, the higher it will appear in the list\nconst sortByPriority = (a: FilterProvider | SearchItem | FilterItem, b: FilterProvider | SearchItem | FilterItem) =>\n  a.priority - b.priority\n\n@controller\nexport class QueryBuilderElement extends HTMLElement {\n  #combobox?: Combobox\n  #interactingWithList = false\n  #isCleared = false\n  #providers: Record<string, Provider> = {}\n  #filterNames: Set<string> = new Set()\n  #abortController: AbortController | null = null\n  #parseAbortController: AbortController | null = null\n  #searchItems: Map<SearchProvider, SearchItem[]> = new Map()\n  #searchItemsFetchBuffer: Map<SearchProvider, SearchItem[]> = new Map()\n  #searchItemsMarkedForClearing: Set<SearchProvider> = new Set()\n  #filters: Set<FilterProvider> = new Set()\n  #filterItems: Map<FilterProvider, FilterItem[]> = new Map()\n  #uniqueId: string | null\n  #focusClass = 'QueryBuilder-focus'\n  #inputCache = new Map<string, QueryElement[]>()\n  #SCREEN_READER_DELAY = 150\n  #fetchDataTimeout = 3000\n  #fetchingResults: Promise<unknown> | false = false\n  #canAttachProviders = false\n  #requested = false\n  parser: Parser<unknown> = {\n    parse: this.#defaultParser.bind(this),\n    flatten: (ast: QueryElement[]) => ast,\n  }\n  parsedMetadata: unknown = undefined\n  renderSingularItemNames = false\n  #usingCustomParser = false\n  lastParsedQuery: string | undefined = undefined\n  focusTimeout: ReturnType<typeof setTimeout>\n  FOCUS_TIMEOUT_VALUE = 100\n\n  @attr filterKey: string\n  @attr minWidth = 300\n\n  /** the overlaying input where the user will type, but doesn't style the text */\n  get input(): HTMLInputElement {\n    return findTarget(this, 'input') as HTMLInputElement\n  }\n  /** contains the styled input content that the user can see */\n  get styledInputContent(): HTMLElement {\n    return findTarget(this, 'styledInputContent') as HTMLElement\n  }\n  /** the element that scrolls with the styled input content */\n  get styledInputContainer(): HTMLDivElement {\n    return findTarget(this, 'styledInputContainer') as HTMLDivElement\n  }\n  get styledInput(): HTMLElement {\n    return findTarget(this, 'styledInput') as HTMLElement\n  }\n  get overlay(): HTMLElement {\n    return findTarget(this, 'overlay') as HTMLElement\n  }\n  /** this sizer is invisible and contains the same text as the input; we measure it's width to set the width of the visually styled input */\n  get sizer(): HTMLElement {\n    return findTarget(this, 'sizer') as HTMLElement\n  }\n  get clearButton(): HTMLButtonElement {\n    return findTarget(this, 'clearButton') as HTMLButtonElement\n  }\n  get resultsList(): HTMLUListElement {\n    return findTarget(this, 'resultsList') as HTMLUListElement\n  }\n  get screenReaderFeedback(): HTMLElement {\n    return findTarget(this, 'screenReaderFeedback') as HTMLElement\n  }\n\n  get query() {\n    return this.input.value\n  }\n\n  get i18n(): LocalizedScreenReaderText {\n    return {\n      suggestion: 'suggestion',\n      suggestions: 'suggestions',\n      clear_search: 'Input cleared.',\n    }\n  }\n\n  // This navigate callback is used to signal that a user has clicked on a URL.\n  // We need this in code view to intercept line hash navigations (i.e. #L123)\n  // within the same file.\n  navigate(event: Event) {\n    const url = (event?.target as HTMLElement)?.closest('a')?.getAttribute('href')\n    if (url) {\n      sendEvent('query-builder-element.click', {url})\n      this.dispatchEvent(new CustomEvent('query-builder:navigate', {bubbles: true, detail: {url}}))\n    }\n  }\n\n  get closed() {\n    return this.overlay && this.overlay.hasAttribute('hidden')\n  }\n\n  set closed(value: boolean) {\n    if (value) {\n      if (this.closed) return\n\n      if (this.overlay) {\n        this.overlay.hidden = true\n      }\n\n      this.input.setAttribute('aria-expanded', 'false')\n\n      this.#combobox?.clearSelection()\n    } else {\n      if (!this.closed) return\n\n      if (this.overlay) {\n        this.overlay.hidden = false\n      }\n      this.input.setAttribute('aria-expanded', 'true')\n    }\n  }\n\n  show() {\n    this.closed = false\n    this.overlay?.scrollIntoView?.({behavior: 'smooth', block: 'nearest'})\n  }\n\n  hide() {\n    if (this.resultsList.getAttribute('data-persist-list') === 'false') {\n      this.closed = true\n    }\n  }\n\n  initialize(parser: Parser<unknown>, providers: Provider[]) {\n    this.parser = parser\n    this.#usingCustomParser = true\n    this.#canAttachProviders = true\n    for (const provider of providers) {\n      this.attachProvider(provider)\n    }\n    this.#canAttachProviders = false\n    this.#providers = providers.reduce((rest, provider) => {\n      return {\n        ...rest,\n        [provider.value]: provider,\n      }\n    }, {})\n  }\n\n  elementDefinitionReadyForProviders = (e: Event) => {\n    const event = e as CustomEvent<{id: string}>\n    if (event.detail.id === this.#uniqueId) {\n      this.readyForRequestProviders()\n      e.stopImmediatePropagation()\n    }\n  }\n\n  detachElementDefinitionReadyForProviders() {\n    this.removeEventListener('query-builder:ready-to-request-provider', this.elementDefinitionReadyForProviders)\n  }\n\n  connectedCallback() {\n    this.#abortController?.abort()\n    const {signal} = (this.#abortController = new AbortController())\n    signal.addEventListener('abort', () => {\n      this.#providers = {}\n    })\n    this.#uniqueId = this.input.getAttribute('id')\n\n    if (!this.hasAttribute('defer-request-providers')) {\n      document.addEventListener(\n        'query-builder:ready-to-request-provider',\n        this.elementDefinitionReadyForProviders,\n        true,\n      )\n      this.readyForRequestProviders()\n    }\n  }\n\n  readyForRequestProviders() {\n    if (this.#providerCount() > 0 && this.#requested) return\n    this.#combobox ||= new Combobox(this.input, this.resultsList, {\n      tabInsertsSuggestions: false,\n    })\n    this.requestProviders()\n  }\n\n  async requestProviders() {\n    this.#requested = true\n    await Promise.resolve()\n\n    this.#canAttachProviders = true\n    this.dispatchEvent(new Event('query-builder:request-provider', {bubbles: true}))\n    this.#canAttachProviders = false\n\n    // Existing text may match new providers, so clear cache to ensure that\n    // the styling is correct.\n    this.#inputCache = new Map<string, QueryElement[]>()\n    const elements = this.parseInputValue()\n    this.styleInputText(elements)\n    this.toggleClearButtonVisibility()\n  }\n\n  // This function parse the current input value and cache the resulting parsed metadata. To\n  // parse values other than the input's value, directly use this.parser.\n  parseInputValue(): QueryElement[] {\n    this.parsedMetadata = this.parser.parse(this.input.value, this.input.selectionStart || 0)\n    return this.parser.flatten(this.parsedMetadata)\n  }\n\n  attachProvider(provider: Provider) {\n    if (!this.#abortController) return\n    const {signal} = this.#abortController\n\n    if (!this.#canAttachProviders) {\n      throw new Error(\"Can't attach providers after the query builder has been connected\")\n    }\n    if (this.#providers[provider.value]) return\n\n    this.#providers[provider.value] = provider\n\n    if (provider.type === 'filter') {\n      this.#filterNames.add(provider.value)\n\n      provider.addEventListener(\n        'filter-item',\n        filterItemEvent => {\n          this.#setProvider(this.#filterItems, provider)\n          this.#filterItems.get(provider)?.push(filterItemEvent as FilterItem)\n          this.#requestUpdate()\n        },\n        {signal},\n      )\n\n      // Determines when to show/hide filters based on the event in the providers\n      provider.addEventListener(\n        'show',\n        () => {\n          this.#filters.add(provider)\n          this.#requestUpdate()\n        },\n        {signal},\n      )\n\n      provider.addEventListener(\n        'fetch-data',\n        async event => {\n          const timeout = new Promise(resolve => setTimeout(resolve, this.#fetchDataTimeout))\n          const fetchDataEvent = event as FetchDataEvent\n\n          this.#fetchingResults = Promise.race([\n            Promise.all([this.#fetchingResults, fetchDataEvent.fetchPromise]),\n            timeout,\n          ])\n\n          const currentPromise = this.#fetchingResults\n\n          try {\n            await currentPromise\n          } catch (error) {\n            // @ts-expect-error catch blocks are bound to `unknown` so we need to validate the type before using it\n            if (error.name !== 'AbortError') {\n              this.#fetchingResults = false\n              throw error\n            }\n          }\n\n          // If the Promise hasn't changed, we're at the last resolution\n          if (currentPromise === this.#fetchingResults) {\n            this.#fetchingResults = false\n            this.#requestUpdate()\n\n            this.updateVisibility()\n          }\n        },\n        {signal},\n      )\n    } else {\n      provider.addEventListener('fetch-data', async event => {\n        const fetchDataEvent = event as FetchDataEvent\n        // Indicate that we will clear the search items ourselves once we resolve the promise\n        this.#searchItemsMarkedForClearing.delete(provider)\n\n        // Wait until the data is fetched\n        await fetchDataEvent.fetchPromise\n\n        this.#searchItems.set(provider, this.#searchItemsFetchBuffer.get(provider) || [])\n        this.#searchItemsFetchBuffer.delete(provider)\n        this.#requestUpdate()\n      })\n      provider.addEventListener(\n        'search-item',\n        searchItemEvent => {\n          this.#setProvider(this.#searchItems, provider)\n          if (this.#searchItemsFetchBuffer.has(provider)) {\n            this.#searchItemsFetchBuffer.get(provider)?.push(searchItemEvent as SearchItem)\n          } else {\n            if (this.#searchItemsMarkedForClearing.has(provider)) {\n              this.#searchItems.set(provider, [])\n              this.#searchItemsMarkedForClearing.delete(provider)\n            }\n\n            this.#searchItems.get(provider)?.push(searchItemEvent as SearchItem)\n            this.#requestUpdate()\n          }\n        },\n        {signal},\n      )\n      provider.addEventListener(\n        'update-item',\n        searchItemEvent => {\n          const updatedItem = searchItemEvent as SearchItem\n          const items = this.#searchItems.get(provider)\n          if (!items) return\n          const itemIndex = items.findIndex(i => i.id === updatedItem.id)\n          if (itemIndex < 0) return\n          items[itemIndex] = updatedItem\n          this.#requestUpdate()\n        },\n        {signal},\n      )\n    }\n  }\n\n  disconnectedCallback() {\n    this.#abortController?.abort()\n  }\n\n  comboboxCommit(event: Event) {\n    const selectedItem = event.target as HTMLLIElement\n    const selectedItemType = selectedItem?.getAttribute('data-type')\n    const selectedItemValue = selectedItem?.getAttribute('data-value') || ''\n    const replaceQueryWith = selectedItem?.getAttribute('data-replace-query-with') || ''\n    const moveCaretTo = parseInt(selectedItem?.getAttribute('data-move-caret-to') || '0') || 0\n    let elements: QueryElement[] | undefined = this.parseInputValue()\n\n    if (selectedItemType === 'url-result') {\n      // these are handled by having a link that the user clicks and the navigation happens without javascript intervention\n      // keyboard navigation to links is handled in inputKeydown\n    } else if (selectedItemType === 'filter-result') {\n      // if a filter is chosen, replace the last query element with a new Filter Element\n      elements.pop()\n      elements.push({\n        type: 'filter',\n        filter: selectedItemValue,\n        value: '',\n      })\n    } else if (selectedItemType === 'command-result') {\n      const customEventName = selectedItem.getAttribute('data-command-name') || ''\n      const data = JSON.parse(selectedItem.getAttribute('data-command-payload') || '{}')\n      this.dispatchEvent(new CustomEvent(customEventName, {detail: data}))\n    } else if (selectedItemType === 'query-result') {\n      // For manually replacing the query from the suggestion, directly manipulate\n      // the query/caret position\n      if (replaceQueryWith) {\n        this.input.value = replaceQueryWith\n        this.input.focus()\n\n        // Unsetting the elements forces `parseQuery` to re-parse from the input string\n        elements = undefined\n      } else {\n        const newElements = this.parser.flatten(this.parser.parse(selectedItemValue, 0))\n        elements.push(...newElements)\n        elements.push({type: 'text', value: ''})\n      }\n    } else if (selectedItemType === 'filter-item') {\n      // If we manually updated the query, we must also manually update the caret position\n      if (replaceQueryWith) {\n        this.input.value = replaceQueryWith\n        this.input.focus()\n\n        // Unsetting the elements forces `parseQuery` to re-parse from the input string\n        elements = undefined\n      } else {\n        this.addSelectedItemToFilter(selectedItemValue, elements)\n      }\n    }\n    this.parseQuery(elements)\n\n    // If we manually updated the query, we must also manually update the caret position\n    if (replaceQueryWith) {\n      const pos = moveCaretTo === -1 ? this.input.value.length : moveCaretTo\n      this.input.setSelectionRange(pos, pos)\n    }\n    this.input.removeAttribute('aria-activedescendant')\n  }\n\n  addSelectedItemToFilter(selectedItemValue: string, elements: QueryElement[]) {\n    const valueContainsSpaces = /\\s/.test(selectedItemValue)\n    const filter = elements.pop()\n    if (filter?.type === 'filter') {\n      // If the filter already has a value and is separated by a comma, instead of a full replace\n      // we want to append.\n      // is:pub -> is:public\n      // is:public,pri -> is:public,private\n      const filterValues = filter.value.split(',')\n      filterValues.pop()\n      filterValues.push(valueContainsSpaces ? `\"${selectedItemValue}\"` : selectedItemValue)\n\n      elements.push({\n        type: 'filter',\n        filter: filter?.filter,\n        value: filterValues.join(','),\n      })\n      elements.push({type: 'text', value: ''})\n    } else if (filter) {\n      elements.push(filter)\n    }\n  }\n\n  async inputChange() {\n    await this.parseQuery()\n  }\n\n  inputBlur() {\n    clearTimeout(this.focusTimeout)\n    if (this.#interactingWithList) {\n      this.#interactingWithList = false\n      return\n    }\n    this.styledInput.classList.remove(this.#focusClass)\n    this.input.removeAttribute('aria-activedescendant')\n    this.hide()\n  }\n\n  resultsMousedown() {\n    this.#interactingWithList = true\n  }\n\n  async inputFocus() {\n    this.styledInput.classList.add(this.#focusClass)\n    this.readyForRequestProviders()\n    this.#combobox!.start()\n    const initialValue = this.input.value\n\n    // Don't needlessly reparse the query on focus\n    if (!this.lastParsedQuery || this.lastParsedQuery !== this.input.value) {\n      await this.parseQuery()\n    }\n\n    if (this.closed && this.input.value === initialValue) {\n      this.input.setSelectionRange(0, this.input.value.length)\n    }\n    if (this.focusTimeout) {\n      clearTimeout(this.focusTimeout)\n    } else {\n      this.focusTimeout = setTimeout(() => {\n        this.input.focus()\n      }, this.FOCUS_TIMEOUT_VALUE)\n    }\n  }\n\n  moveCaretToEndOfInput() {\n    this.input.setSelectionRange(this.input.value.length, this.input.value.length)\n  }\n\n  hasFocus() {\n    return this.styledInput.classList.contains(this.#focusClass)\n  }\n\n  inputKeydown(event: KeyboardEvent) {\n    // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n    const key = event.key\n\n    if (key === 'Escape') {\n      this.hide()\n    } else if (key === 'Enter') {\n      const selected = this.resultsList.querySelector<HTMLElement>(\n        '[aria-selected=\"true\"], [data-combobox-option-default=\"true\"]',\n      )\n      if (!selected || selected.getAttribute('aria-disabled') === 'true') return\n      const link = selected.querySelector('a')\n      if (link) {\n        // eslint-disable-next-line @github-ui/ui-commands/no-manual-shortcut-logic\n        const openInNewWindow = event.ctrlKey || event.metaKey\n        if (openInNewWindow) {\n          window.open(link.getAttribute('href') || '', '_blank')\n        } else {\n          link.click()\n        }\n      }\n    }\n  }\n\n  inputSubmit(): void {\n    this.hide()\n  }\n\n  clearButtonFocus(event: FocusEvent) {\n    const previousFocusTarget = event.relatedTarget\n    if (!previousFocusTarget) return\n\n    // If we were previously focused on the input, we should continue to show the results list\n    if (previousFocusTarget === this.input) this.show()\n  }\n\n  clearButtonBlur() {\n    this.hide()\n  }\n\n  toggleClearButtonVisibility() {\n    if (!this.clearButton) return\n\n    if (this.input.value !== '') {\n      if (this.clearButton.hidden === false) return\n\n      this.clearButton.hidden = false\n    } else {\n      this.clearButton.hidden = true\n    }\n  }\n\n  updateVisibility() {\n    if (!this.hasFocus()) {\n      return\n    }\n\n    if (this.#filterItems.size > 0 || this.#searchItems.size > 0 || this.#filters.size > 0) {\n      this.show()\n    } else if (!this.#fetchingResults) {\n      this.hide()\n    }\n  }\n\n  #setProvider = (map: Map<Provider, SearchItem[] | FilterItem[]>, provider: Provider) => {\n    if (!map.has(provider)) {\n      map.set(provider, [])\n    }\n  }\n\n  #updateRequested = false\n\n  #requestUpdate() {\n    if (this.#updateRequested) return\n\n    this.#updateRequested = true\n    this.toggleClearButtonVisibility()\n    this.#updateRequested = false\n    this.#updateResults()\n  }\n\n  #renderFilters() {\n    if (this.#filters.size === 0) return\n\n    return html`<li role=\"presentation\" class=\"ActionList-sectionDivider\">\n      <h3 role=\"presentation\" class=\"ActionList-sectionDivider-title p-2 text-left\" aria-hidden=\"true\">\n        Suggested filters\n      </h3>\n      <ul role=\"presentation\">\n        ${[...this.#filters].sort(sortByPriority).map(filter => this.#renderFilter(filter))}\n      </ul>\n    </li>`\n  }\n\n  #renderGroup(provider: Provider, shouldRenderFallbackItems = false) {\n    let items: TemplateResult[] = []\n    const lastItem = this.parseInputValue().at(-1)!\n\n    if (provider.type === 'filter') {\n      if (provider.manuallyDetermineFilterEligibility) {\n        items =\n          this.#filterItems\n            .get(provider)\n            ?.sort(sortByPriority)\n            .map(item => this.#renderFilterItem(item)) || []\n      } else if (lastItem?.type === 'filter') {\n        items =\n          this.#filterItems\n            .get(provider)\n            ?.filter(item => item.filter === lastItem.filter)\n            .sort(sortByPriority)\n            .map(item => this.#renderFilterItem(item)) || []\n      }\n    } else {\n      const searchItems = this.#searchItems.get(provider) || []\n\n      items = [...searchItems]\n        .filter(s => s.isFallbackSuggestion === shouldRenderFallbackItems)\n        .sort(sortByPriority)\n        .map(p => this.#renderSearchItem(p))\n    }\n\n    if (!items.length) return undefined\n\n    if (provider.name === '') {\n      return html`<li role=\"presentation\" class=\"ActionList-sectionDivider\">\n        <ul role=\"presentation\">\n          ${items}\n        </ul>\n      </li>`\n    } else {\n      return html`<li role=\"presentation\" class=\"ActionList-sectionDivider\">\n        <h3\n          role=\"presentation\"\n          class=\"ActionList-sectionDivider-title QueryBuilder-sectionTitle p-2 text-left\"\n          aria-hidden=\"true\"\n        >\n          ${provider.name}\n        </h3>\n        <ul role=\"presentation\">\n          ${items}\n        </ul>\n      </li>`\n    }\n  }\n\n  #updateResults() {\n    let groupsAsHtml = Object.values(this.#providers)\n      .sort((a, b) => a.priority - b.priority)\n      .map(p => this.#renderGroup(p))\n      .filter(p => p !== undefined)\n\n    // If no suggestions are sent back from any provider, we want to show the fallback suggestion\n    if (!this.#fetchingResults && groupsAsHtml.length === 0) {\n      groupsAsHtml = Object.values(this.#providers)\n        .sort((a, b) => a.priority - b.priority)\n        .map(p => this.#renderGroup(p, true))\n        .filter(p => p !== undefined)\n    }\n\n    const filtersAsHtml = this.#renderFilters()\n    if (filtersAsHtml) groupsAsHtml.push(filtersAsHtml)\n\n    if (groupsAsHtml.length === 0) {\n      if (this.#fetchingResults) {\n        // TODO Add a loading state\n        // render(html`Loading...`, this.resultsList)\n      } else {\n        // Clear the list HTML first, otherwise the empty string will be appended to what exists\n        this.resultsList.textContent = ''\n        render(html``, this.resultsList)\n      }\n    } else {\n      render(\n        html`${groupsAsHtml.map((groupHtml, index) =>\n          index === groupsAsHtml.length - 1\n            ? groupHtml\n            : html`${groupHtml}\n                <li aria-hidden=\"true\" class=\"ActionList-sectionDivider\"></li>`,\n        )}`,\n        this.resultsList,\n      )\n    }\n\n    const numberOfResults = this.resultsList.querySelectorAll('[role=\"option\"]').length\n    let screenReaderText: string\n\n    const resultText = numberOfResults === 1 ? this.i18n.suggestion : this.i18n.suggestions\n    screenReaderText = `${numberOfResults} ${resultText}.`\n\n    if (this.#isCleared) {\n      screenReaderText = `${this.i18n.clear_search} ${screenReaderText}`\n      this.#isCleared = false\n    }\n\n    /** This is a hack due to the way the aria live API works.\n        A screen reader will not read a live region again\n        if the text is the same. Adding a space character tells\n        the browser that the live region has updated,\n        which will cause it to read again, but with no audible difference. */\n    if (this.screenReaderFeedback.textContent === screenReaderText) {\n      screenReaderText += '\\u00A0'\n    }\n    // Adds a delay so that focus moving back to the input is read before the amount of suggestions.\n    setTimeout(() => this.updateScreenReaderFeedback(screenReaderText), this.#SCREEN_READER_DELAY)\n  }\n\n  #normalizeValue(value: string) {\n    if (!value) return\n\n    return value.replace(/\\s/g, '-').toLowerCase()\n  }\n\n  getLeadingVisual(icon: Icon, avatar?: Avatar) {\n    if (avatar) {\n      const classes = avatar.type === 'org' ? 'avatar avatar-1 avatar-small' : 'avatar avatar-1 avatar-small circle'\n      return html`<img src=\"${avatar.url}\" alt=\"\" role=\"presentation\" class=\"${classes}\" />`\n    }\n\n    if (icon && isCustomIcon(icon)) {\n      return html([icon.html] as unknown as TemplateStringsArray)\n    }\n\n    const iconElement = document.getElementById(`${icon}-icon`) as HTMLTemplateElement\n    return html([iconElement?.innerHTML] as unknown as TemplateStringsArray)\n  }\n\n  // Item that will take you somewhere when chosen (i.e. a link to a repository or a search result)\n  #renderSearchItem({value, prefixText, prefixColor, target: provider, action, description, icon, scope}: SearchItem) {\n    if ('url' in action) {\n      const ariaLabelAction =\n        scope === 'GENERAL'\n          ? `${SearchScopeText[scope]}`\n          : `jump to this ${(provider as SearchProvider).singularItemName}`\n      const ariaLabelDescription = description ? `, ${description}` : ''\n      const ariaLabel = `${prefixText ? `${prefixText} ` : ''}${value}${ariaLabelDescription}, ${ariaLabelAction}`\n\n      let prefixHTML = null\n      if (prefixText) {\n        prefixHTML = html`\n          <span>\n            <div class=\"d-inline-flex position-relative\">\n              <div\n                class=\"position-absolute rounded-1 flex-items-stretch height-full width-full\"\n                style=\"opacity: 0.1; background-color: var(${prefixColor})\"\n              ></div>\n              <div class=\"px-1\" style=\"color: var(${prefixColor})\">${prefixText}</div>\n            </div>\n            ${this.#styleResults(value)}\n          </span>\n        `\n      }\n\n      return html`<li\n        role=\"option\"\n        class=\"ActionListItem\"\n        data-type=\"url-result\"\n        id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}\"\n        data-value=\"${value}\"\n        aria-label=\"${ariaLabel}\"\n      >\n        <a\n          href=\"${action.url}\"\n          data-action=\"click:query-builder#navigate\"\n          tabindex=\"-1\"\n          class=\"QueryBuilder-ListItem-link ActionListContent ActionListContent--visual16 QueryBuilder-ListItem\"\n        >\n          ${icon\n            ? html`<span\n                id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}--leading\"\n                class=\"ActionListItem-visual ActionListItem-visual--leading\"\n              >\n                ${this.getLeadingVisual(icon)}\n              </span>`\n            : null}\n          <span class=\"ActionListItem-descriptionWrap\">\n            <span class=\"ActionListItem-label text-normal\"> ${prefixHTML || this.#styleResults(value)} </span>\n            ${description ? html`<span class=\"ActionListItem-description\">${description}</span>` : null}\n          </span>\n\n          <span aria-hidden=\"true\" class=\"ActionListItem-description QueryBuilder-ListItem-trailing\"\n            >${SearchScopeText[scope]}</span\n          >\n        </a>\n      </li>`\n    } else if ('commandName' in action) {\n      const ariaLabelAction = SearchScopeText[scope] || SearchScopeText['COMMAND']\n      const ariaLabelDescription = description ? `, ${description}` : ''\n      const ariaLabel = `${value}${ariaLabelDescription}, ${ariaLabelAction}`\n\n      return html`<li\n        role=\"option\"\n        class=\"ActionListItem\"\n        data-type=\"command-result\"\n        id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}\"\n        data-value=\"${value}\"\n        data-command-name=\"${action.commandName}\"\n        data-command-payload=\"${JSON.stringify(action.data)}\"\n        aria-label=\"${ariaLabel}\"\n      >\n        <span class=\"ActionListContent ActionListContent--visual16 QueryBuilder-ListItem\">\n          ${icon\n            ? html`<span\n                id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}--leading\"\n                class=\"ActionListItem-visual ActionListItem-visual--leading\"\n              >\n                ${this.getLeadingVisual(icon)}\n              </span>`\n            : null}\n          <span class=\"ActionListItem-descriptionWrap\">\n            <span class=\"ActionListItem-label text-normal\"> ${this.#styleResults(value)} </span>\n            ${description ? html`<span class=\"ActionListItem-description\">${description}</span>` : null}\n          </span>\n\n          <span aria-hidden=\"true\" class=\"ActionListItem-description QueryBuilder-ListItem-trailing\"\n            >${ariaLabelAction}</span\n          >\n        </span>\n      </li>`\n    } else {\n      let replaceQueryWith = ''\n      let moveCaretTo = 0\n      if ('replaceQueryWith' in action) {\n        replaceQueryWith = action.replaceQueryWith\n        moveCaretTo = action.moveCaretTo\n      }\n\n      const scopeText = 'query' in action ? SearchScopeText[scope] : AutocompleteText\n\n      return html` <li\n        role=\"option\"\n        class=\"ActionListItem\"\n        data-type=\"query-result\"\n        data-value=\"${value}\"\n        aria-label=\"${value}${description ? `, ${description}` : ''}\"\n        data-replace-query-with=\"${replaceQueryWith}\"\n        data-move-caret-to=\"${moveCaretTo}\"\n        id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}\"\n      >\n        <span class=\"ActionListContent ActionListContent--visual16 QueryBuilder-ListItem\">\n          ${icon\n            ? html`<span\n                id=\"${this.#uniqueId || 'search-item'}-result-${this.#normalizeValue(value)}--leading\"\n                class=\"ActionListItem-visual ActionListItem-visual--leading\"\n              >\n                ${this.getLeadingVisual(icon)}\n              </span>`\n            : null}\n          <span class=\"ActionListItem-descriptionWrap\">\n            <span class=\"ActionListItem-label text-normal\">${this.#styleResults(value)}</span>\n            ${description ? html`<span class=\"ActionListItem-description\">${description}</span>` : null}\n          </span>\n\n          ${this.#searchItems.size > 0\n            ? html`<span aria-hidden=\"true\" class=\"ActionListItem-description QueryBuilder-ListItem-trailing\"\n                >${scopeText}</span\n              >`\n            : html``}\n        </span>\n      </li>`\n    }\n  }\n\n  #styleResults(query: string) {\n    const inputArray = this.parser.flatten(this.parser.parse(query, 0))\n    const shouldAddTrailingSpace = !this.#usingCustomParser\n\n    const out: TemplateResult[] = []\n    for (const group of inputArray) {\n      if (group.type === 'filter') {\n        out.push(\n          html`<span>${group.filter}:</span\n            ><span data-type=\"filter-value\">${group.value}${shouldAddTrailingSpace ? ' ' : ''}</span>`,\n        )\n      } else {\n        let style = ''\n        if (group.style === TextElementStyle.Constant) {\n          style = 'qb-constant'\n        } else if (group.style === TextElementStyle.Entity) {\n          style = 'qb-entity'\n        } else if (group.style === TextElementStyle.FilterValue) {\n          style = 'qb-filter-value'\n        }\n        out.push(html`<span class=\"${style}\">${group.value}${shouldAddTrailingSpace ? ' ' : ''}</span>`)\n      }\n    }\n\n    return out\n  }\n\n  // Keeping these as separate templates in order to\n  // make it easier in the future if these need to diverge more.\n  // Renders a filter item (i.e. 'repo' or 'project')\n  #renderFilter({singularItemName, icon, description, value}: FilterProvider) {\n    const ariaLabelDescription = description ? `, ${description}` : ''\n    const ariaLabel = `${this.renderSingularItemNames ? singularItemName : value}${ariaLabelDescription}`\n\n    return html` <li\n      role=\"option\"\n      class=\"ActionListItem\"\n      data-type=\"filter-result\"\n      data-value=\"${value}\"\n      id=\"${this.#uniqueId || 'filter'}-result-${this.#normalizeValue(value)}\"\n      aria-label=\"${ariaLabel}, filter\"\n    >\n      <span class=\"ActionListContent ActionListContent--visual16 QueryBuilder-ListItem\">\n        ${icon\n          ? html`<span\n              id=\"${this.#uniqueId || 'filter'}-result-${this.#normalizeValue(value)}--leading\"\n              class=\"ActionListItem-visual ActionListItem-visual--leading\"\n            >\n              ${this.getLeadingVisual(icon)}\n            </span>`\n          : null}\n        <span class=\"ActionListItem-descriptionWrap\">\n          <span class=\"ActionListItem-label text-normal\">\n            ${this.renderSingularItemNames ? singularItemName : `${value}:`}\n          </span>\n          ${description ? html`<span class=\"ActionListItem-description\">${description}</span>` : null}\n        </span>\n\n        ${this.#searchItems.size > 0\n          ? html`<span aria-hidden=\"true\" class=\"ActionListItem-description QueryBuilder-ListItem-trailing\"\n              >${AutocompleteText}</span\n            >`\n          : html``}\n      </span>\n    </li>`\n  }\n\n  // Renders a filter value that is appended to the input (i.e. 'github/github')\n  #renderFilterItem({name, value, target: provider, icon, avatar, description, inlineDescription, action}: FilterItem) {\n    const valueToShow = name && name.length > 0 ? name : value\n    const ariaLabelDescription = description ? `, ${description}` : ''\n    const ariaLabel = (provider as Provider).singularItemName\n      ? `${valueToShow}${ariaLabelDescription}, autocomplete this ${(provider as Provider).singularItemName}`\n      : `${valueToShow}${ariaLabelDescription}, ${(provider as Provider).name}`\n\n    let replaceQueryWith = ''\n    let moveCaretTo = 0\n    if (action && 'replaceQueryWith' in action) {\n      replaceQueryWith = action.replaceQueryWith\n      moveCaretTo = action.moveCaretTo\n    }\n\n    return html` <li\n      role=\"option\"\n      class=\"ActionListItem\"\n      data-type=\"filter-item\"\n      data-replace-query-with=\"${replaceQueryWith}\"\n      data-move-caret-to=\"${moveCaretTo}\"\n      data-value=\"${value}\"\n      id=\"${this.#uniqueId || 'filter-item'}-result-${this.#normalizeValue(value)}\"\n      aria-label=\"${ariaLabel}\"\n    >\n      <span class=\"ActionListContent ActionListContent--visual16 QueryBuilder-ListItem\">\n        ${icon\n          ? html`<span\n              id=\"${this.#uniqueId || 'filter-item'}-result-${this.#normalizeValue(value)}--leading\"\n              class=\"ActionListItem-visual ActionListItem-visual--leading\"\n            >\n              ${this.getLeadingVisual(icon, avatar)}\n            </span>`\n          : null}\n        <span class=\"${inlineDescription ? 'ActionListItem-descriptionWrap-inline' : 'ActionListItem-descriptionWrap'}\">\n          <span class=\"ActionListItem-label text-normal\">${valueToShow}</span>\n          ${description ? html`<span class=\"ActionListItem-description\">${description}</span>` : null}\n        </span>\n\n        ${this.#searchItems.size > 0\n          ? html`<span aria-hidden=\"true\" class=\"ActionListItem-description QueryBuilder-ListItem-trailing\"\n              >${AutocompleteText}</span\n            >`\n          : html``}\n      </span>\n    </li>`\n  }\n\n  /*\n   * The updateScreenReaderFeedback function is used to update the screen reader feedback.\n   * It dispatchs a custom event so any addEventListener with the same key will be able to\n   * update the screen reader feedback with a new i18n text.\n   */\n  updateScreenReaderFeedback(inputString: string): void {\n    const event = new FeedbackEvent('NEW_RESULTS', inputString, {})\n    this.dispatchEvent(event)\n    this.screenReaderFeedback.textContent = event.text\n  }\n\n  async clear() {\n    const success = this.dispatchEvent(\n      new CustomEvent('query-builder:clear', {\n        bubbles: true,\n        cancelable: true,\n      }),\n    )\n\n    // Prevent default if the event was cancelled\n    if (!success) return\n\n    await this.clearInput()\n  }\n\n  async clearInput({focusInput = true}: {focusInput?: boolean} = {}) {\n    await this.parseQuery([], focusInput)\n    this.#isCleared = true\n  }\n\n  async parseQuery(elements?: QueryElement[], focusOnInput = true) {\n    this.#parseAbortController?.abort()\n    const {signal} = (this.#parseAbortController = new AbortController())\n\n    if (!elements) {\n      elements = this.parseInputValue()\n    } else {\n      const newInputValue = elements\n        .map(item => {\n          if (item.type === 'filter') return `${item.filter}:${item.value}`\n          return item.value\n        })\n        // Don't assume separator if a custom parser is specified\n        .join(this.#usingCustomParser ? '' : ' ')\n\n      // When using in react, we need to update the prototype value so the dispatched `change` event does not get\n      // discarded\n      const prototypeValueSetter = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(this.input), 'value')?.set\n\n      if (prototypeValueSetter) {\n        prototypeValueSetter?.call(this.input, newInputValue)\n      } else {\n        this.input.value = newInputValue\n      }\n\n      this.input.dispatchEvent(new Event('change', {bubbles: true}))\n    }\n\n    this.lastParsedQuery = this.input.value\n\n    await new Promise(resolve => requestAnimationFrame(resolve))\n\n    if (signal.aborted) return\n    this.styleInputText(elements)\n    if (focusOnInput) this.input.focus()\n\n    await new Promise(resolve => setTimeout(resolve, 100))\n    if (signal.aborted) return\n\n    for (const provider of this.#searchItems.keys()) {\n      this.#searchItemsMarkedForClearing.add(provider)\n    }\n\n    this.#filterItems.clear()\n    this.#filters.clear()\n\n    const event = new QueryEvent(elements, this.input.value, this.parsedMetadata)\n    this.dispatchEvent(event)\n\n    // The sync effects of the QueryEvent should all have triggered by now,\n    // meaning that any providers which did not clear their own search items\n    // (or indicate they were fetching data) should have their data cleared for\n    // them.\n    let shouldRequestUpdate = false\n    for (const provider of this.#searchItemsMarkedForClearing.keys()) {\n      this.#searchItems.delete(provider)\n      this.#searchItemsMarkedForClearing.delete(provider)\n      shouldRequestUpdate = true\n    }\n    if (shouldRequestUpdate) {\n      this.#requestUpdate()\n    }\n\n    this.updateVisibility()\n  }\n\n  // Parses the input value\n  #defaultParser(inputValue: string): QueryElement[] {\n    const cachedElements = this.#inputCache.get(inputValue)\n    if (cachedElements) {\n      return cachedElements.slice()\n    } else {\n      const elements: QueryElement[] = []\n      const queries = inputValue.split(/\\s(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g)\n      for (const query of queries) {\n        const filterKeyIndex = query.indexOf(this.filterKey)\n\n        if (filterKeyIndex > 0) {\n          const filter = query.substring(0, filterKeyIndex)\n          const value = query.substring(filterKeyIndex + 1)\n          elements.push(this.#filterNames.has(filter) ? {type: 'filter', filter, value} : {type: 'text', value: query})\n        } else {\n          elements.push({type: 'text', value: query})\n        }\n      }\n      this.#inputCache.set(inputValue, [...elements])\n      return elements\n    }\n  }\n\n  styleInputText(elements: QueryElement[]) {\n    this.#setSizer(this.input.value)\n    const fragment = document.createDocumentFragment()\n    for (const element of elements) {\n      const queryItem = document.createElement('span')\n      const trailingSpaceElement = document.createElement('span')\n      trailingSpaceElement.textContent = ' '\n\n      // If the user overrides the parser, make no assumption about leading or trailing spaces\n      const shouldAddTrailingSpace = !this.#usingCustomParser\n\n      if (element.type === 'filter') {\n        const {filter, value} = element\n        const filterItem = document.createElement('span')\n\n        queryItem.setAttribute('data-type', 'filter-expression')\n        filterItem.setAttribute('data-type', 'filter')\n        filterItem.textContent = filter\n\n        const filterKey = document.createElement('span')\n        filterKey.textContent = this.filterKey\n\n        const filterValue = document.createElement('span')\n        filterValue.setAttribute('data-type', 'filter-value')\n        filterValue.textContent = value\n\n        queryItem.appendChild(filterItem)\n        queryItem.appendChild(filterKey)\n        queryItem.appendChild(filterValue)\n\n        // Adds the trailing space as a separate element so it isn't included in the styling for the filter value\n        if (shouldAddTrailingSpace) queryItem.appendChild(trailingSpaceElement)\n      } else {\n        if (shouldAddTrailingSpace) {\n          queryItem.textContent = `${element.value} `\n        } else {\n          queryItem.textContent = element.value\n        }\n\n        if (element.style === TextElementStyle.Constant) {\n          queryItem.classList.add('qb-constant')\n        } else if (element.style === TextElementStyle.Entity) {\n          queryItem.classList.add('qb-entity')\n        } else if (element.style === TextElementStyle.FilterValue) {\n          queryItem.classList.add('qb-filter-value')\n        }\n      }\n\n      fragment.append(queryItem)\n      this.#resizeInput()\n    }\n    this.styledInputContent.replaceChildren(fragment)\n  }\n\n  // Gets the width of the input text to help set the visually styled input\n  #setSizer(value: string) {\n    this.sizer.textContent = ''\n\n    if (this.input.selectionStart !== null && this.input.selectionStart === this.input.selectionEnd) {\n      // insert an element where the cursor should be so we can find it\n      const index = this.input.selectionStart\n      const cursor = document.createElement('span')\n\n      this.sizer.append(value.substring(0, index), cursor, value.substring(index))\n    } else {\n      this.sizer.textContent = value\n    }\n  }\n\n  // Determines the size of the input for styling purposes\n  #resizeInput() {\n    const minWidth = this.minWidth\n    requestAnimationFrame(() => {\n      const cursor = this.sizer.querySelector('span')\n\n      if (cursor) {\n        // make sure the cursor is visible\n        if (cursor.offsetLeft < this.styledInputContainer.scrollLeft) {\n          this.styledInputContainer.scrollLeft = cursor.offsetLeft - minWidth\n        } else if (cursor.offsetLeft > this.styledInputContainer.scrollLeft + this.styledInputContainer.clientWidth) {\n          this.styledInputContainer.scrollLeft = cursor.offsetLeft - this.styledInputContainer.clientWidth + minWidth\n        }\n      }\n\n      const currentSizerScrollWidth = this.sizer.scrollWidth\n      const newInputWidth = Math.max(currentSizerScrollWidth + 2, this.input.value === '' ? 2 : 0, minWidth)\n\n      this.input.style.width = `${newInputWidth}px`\n    })\n  }\n\n  #providerCount(): number {\n    return Object.keys(this.#providers).length\n  }\n}\nexport * from './query-builder-api'\n"],"names":["SearchScopeText","AutocompleteText","FilterItem","Event","constructor","filter","value","name","description","inlineDescription","priority","Infinity","icon","avatar","action","isCustomIcon","Object","Octicon","PrefixColor","SearchItem","id","scope","prefixText","prefixColor","isFallbackSuggestion","isUpdate","TextElementStyle","FetchDataEvent","fetchPromise","QueryEvent","toString","rawQuery","parsedQuery","parsedMetadata","FeedbackEvent","bubbles","cancelable","key","text","data","sortByPriority","a","b","QueryBuilderElement","HTMLElement","input","findTarget","styledInputContent","styledInputContainer","styledInput","overlay","sizer","clearButton","resultsList","screenReaderFeedback","query","i18n","suggestion","suggestions","clear_search","navigate","event","url","target","closest","getAttribute","sendEvent","dispatchEvent","CustomEvent","detail","closed","hasAttribute","hidden","setAttribute","clearSelection","show","scrollIntoView","behavior","block","hide","initialize","parser","providers","provider","attachProvider","reduce","rest","detachElementDefinitionReadyForProviders","removeEventListener","elementDefinitionReadyForProviders","connectedCallback","abort","signal","AbortController","addEventListener","document","readyForRequestProviders","Combobox","tabInsertsSuggestions","requestProviders","Promise","resolve","Map","elements","parseInputValue","styleInputText","toggleClearButtonVisibility","parse","selectionStart","flatten","type","add","filterItemEvent","get","push","timeout","setTimeout","race","all","fetchDataEvent","currentPromise","error","updateVisibility","delete","set","searchItemEvent","has","items","itemIndex","findIndex","i","updatedItem","disconnectedCallback","comboboxCommit","selectedItem","selectedItemType","selectedItemValue","replaceQueryWith","moveCaretTo","parseInt","pop","customEventName","JSON","focus","undefined","newElements","addSelectedItemToFilter","parseQuery","pos","length","setSelectionRange","removeAttribute","valueContainsSpaces","test","filterValues","split","join","inputChange","inputBlur","clearTimeout","focusTimeout","classList","remove","resultsMousedown","inputFocus","start","initialValue","lastParsedQuery","FOCUS_TIMEOUT_VALUE","moveCaretToEndOfInput","hasFocus","contains","inputKeydown","selected","querySelector","link","ctrlKey","metaKey","window","open","click","inputSubmit","clearButtonFocus","previousFocusTarget","relatedTarget","clearButtonBlur","size","getLeadingVisual","classes","html","iconElement","getElementById","innerHTML","updateScreenReaderFeedback","inputString","textContent","clear","clearInput","focusInput","focusOnInput","newInputValue","map","item","prototypeValueSetter","getOwnPropertyDescriptor","getPrototypeOf","call","requestAnimationFrame","aborted","keys","shouldRequestUpdate","fragment","createDocumentFragment","element","queryItem","createElement","trailingSpaceElement","shouldAddTrailingSpace","filterItem","filterKey","filterValue","appendChild","style","Constant","Entity","FilterValue","append","replaceChildren","Set","bind","ast","renderSingularItemNames","minWidth","e","stopImmediatePropagation","sort","shouldRenderFallbackItems","lastItem","at","manuallyDetermineFilterEligibility","s","p","screenReaderText","groupsAsHtml","values","filtersAsHtml","render","groupHtml","index","numberOfResults","querySelectorAll","resultText","replace","toLowerCase","ariaLabelAction","singularItemName","ariaLabelDescription","ariaLabel","prefixHTML","commandName","stringify","scopeText","inputArray","out","group","valueToShow","inputValue","cachedElements","slice","filterKeyIndex","indexOf","substring","selectionEnd","cursor","offsetLeft","scrollLeft","clientWidth","newInputWidth","Math","max","currentSizerScrollWidth","scrollWidth","width"],"sourceRoot":""}